

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Feb 27 21:16:56 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18LF4520 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 273 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 452 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   112                           PORTC equ 0F82h ;# 
   113  0000                     # 634 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   114                           PORTD equ 0F83h ;# 
   115  0000                     # 776 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   116                           PORTE equ 0F84h ;# 
   117  0000                     # 979 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   118                           LATA equ 0F89h ;# 
   119  0000                     # 1091 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   120                           LATB equ 0F8Ah ;# 
   121  0000                     # 1203 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   122                           LATC equ 0F8Bh ;# 
   123  0000                     # 1315 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   124                           LATD equ 0F8Ch ;# 
   125  0000                     # 1427 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   126                           LATE equ 0F8Dh ;# 
   127  0000                     # 1479 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   128                           TRISA equ 0F92h ;# 
   129  0000                     # 1484 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   130                           DDRA equ 0F92h ;# 
   131  0000                     # 1701 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   132                           TRISB equ 0F93h ;# 
   133  0000                     # 1706 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   134                           DDRB equ 0F93h ;# 
   135  0000                     # 1923 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   136                           TRISC equ 0F94h ;# 
   137  0000                     # 1928 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   138                           DDRC equ 0F94h ;# 
   139  0000                     # 2145 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   140                           TRISD equ 0F95h ;# 
   141  0000                     # 2150 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   142                           DDRD equ 0F95h ;# 
   143  0000                     # 2367 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   144                           TRISE equ 0F96h ;# 
   145  0000                     # 2372 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   146                           DDRE equ 0F96h ;# 
   147  0000                     # 2531 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   148                           OSCTUNE equ 0F9Bh ;# 
   149  0000                     # 2596 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   150                           PIE1 equ 0F9Dh ;# 
   151  0000                     # 2673 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   152                           PIR1 equ 0F9Eh ;# 
   153  0000                     # 2750 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   154                           IPR1 equ 0F9Fh ;# 
   155  0000                     # 2827 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   156                           PIE2 equ 0FA0h ;# 
   157  0000                     # 2893 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   158                           PIR2 equ 0FA1h ;# 
   159  0000                     # 2959 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   160                           IPR2 equ 0FA2h ;# 
   161  0000                     # 3025 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   162                           EECON1 equ 0FA6h ;# 
   163  0000                     # 3091 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   164                           EECON2 equ 0FA7h ;# 
   165  0000                     # 3098 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   166                           EEDATA equ 0FA8h ;# 
   167  0000                     # 3105 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   168                           EEADR equ 0FA9h ;# 
   169  0000                     # 3112 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   170                           RCSTA equ 0FABh ;# 
   171  0000                     # 3117 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   172                           RCSTA1 equ 0FABh ;# 
   173  0000                     # 3322 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   174                           TXSTA equ 0FACh ;# 
   175  0000                     # 3327 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   176                           TXSTA1 equ 0FACh ;# 
   177  0000                     # 3578 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   178                           TXREG equ 0FADh ;# 
   179  0000                     # 3583 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   180                           TXREG1 equ 0FADh ;# 
   181  0000                     # 3590 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   182                           RCREG equ 0FAEh ;# 
   183  0000                     # 3595 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   184                           RCREG1 equ 0FAEh ;# 
   185  0000                     # 3602 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   186                           SPBRG equ 0FAFh ;# 
   187  0000                     # 3607 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   188                           SPBRG1 equ 0FAFh ;# 
   189  0000                     # 3614 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   190                           SPBRGH equ 0FB0h ;# 
   191  0000                     # 3621 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   192                           T3CON equ 0FB1h ;# 
   193  0000                     # 3733 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   194                           TMR3 equ 0FB2h ;# 
   195  0000                     # 3740 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   196                           TMR3L equ 0FB2h ;# 
   197  0000                     # 3747 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   198                           TMR3H equ 0FB3h ;# 
   199  0000                     # 3754 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   200                           CMCON equ 0FB4h ;# 
   201  0000                     # 3844 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   202                           CVRCON equ 0FB5h ;# 
   203  0000                     # 3923 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   204                           ECCP1AS equ 0FB6h ;# 
   205  0000                     # 3928 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   206                           ECCPAS equ 0FB6h ;# 
   207  0000                     # 4085 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   208                           PWM1CON equ 0FB7h ;# 
   209  0000                     # 4090 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   210                           ECCP1DEL equ 0FB7h ;# 
   211  0000                     # 4223 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   212                           BAUDCON equ 0FB8h ;# 
   213  0000                     # 4228 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   214                           BAUDCTL equ 0FB8h ;# 
   215  0000                     # 4403 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   216                           CCP2CON equ 0FBAh ;# 
   217  0000                     # 4482 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   218                           CCPR2 equ 0FBBh ;# 
   219  0000                     # 4489 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   220                           CCPR2L equ 0FBBh ;# 
   221  0000                     # 4496 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   222                           CCPR2H equ 0FBCh ;# 
   223  0000                     # 4503 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   224                           CCP1CON equ 0FBDh ;# 
   225  0000                     # 4600 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   226                           CCPR1 equ 0FBEh ;# 
   227  0000                     # 4607 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   228                           CCPR1L equ 0FBEh ;# 
   229  0000                     # 4614 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   230                           CCPR1H equ 0FBFh ;# 
   231  0000                     # 4621 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   232                           ADCON2 equ 0FC0h ;# 
   233  0000                     # 4692 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   234                           ADCON1 equ 0FC1h ;# 
   235  0000                     # 4777 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   236                           ADCON0 equ 0FC2h ;# 
   237  0000                     # 4896 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   238                           ADRES equ 0FC3h ;# 
   239  0000                     # 4903 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   240                           ADRESL equ 0FC3h ;# 
   241  0000                     # 4910 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   242                           ADRESH equ 0FC4h ;# 
   243  0000                     # 4917 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   244                           SSPCON2 equ 0FC5h ;# 
   245  0000                     # 5012 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   246                           SSPCON1 equ 0FC6h ;# 
   247  0000                     # 5082 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   248                           SSPSTAT equ 0FC7h ;# 
   249  0000                     # 5303 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   250                           SSPADD equ 0FC8h ;# 
   251  0000                     # 5310 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   252                           SSPBUF equ 0FC9h ;# 
   253  0000                     # 5317 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   254                           T2CON equ 0FCAh ;# 
   255  0000                     # 5415 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   256                           PR2 equ 0FCBh ;# 
   257  0000                     # 5420 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   258                           MEMCON equ 0FCBh ;# 
   259  0000                     # 5525 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   260                           TMR2 equ 0FCCh ;# 
   261  0000                     # 5532 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   262                           T1CON equ 0FCDh ;# 
   263  0000                     # 5635 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   264                           TMR1 equ 0FCEh ;# 
   265  0000                     # 5642 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   266                           TMR1L equ 0FCEh ;# 
   267  0000                     # 5649 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   268                           TMR1H equ 0FCFh ;# 
   269  0000                     # 5656 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   270                           RCON equ 0FD0h ;# 
   271  0000                     # 5789 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   272                           WDTCON equ 0FD1h ;# 
   273  0000                     # 5817 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   274                           HLVDCON equ 0FD2h ;# 
   275  0000                     # 5822 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   276                           LVDCON equ 0FD2h ;# 
   277  0000                     # 6087 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   278                           OSCCON equ 0FD3h ;# 
   279  0000                     # 6170 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   280                           T0CON equ 0FD5h ;# 
   281  0000                     # 6253 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   282                           TMR0 equ 0FD6h ;# 
   283  0000                     # 6260 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   284                           TMR0L equ 0FD6h ;# 
   285  0000                     # 6267 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   286                           TMR0H equ 0FD7h ;# 
   287  0000                     # 6274 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   288                           STATUS equ 0FD8h ;# 
   289  0000                     # 6345 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   290                           FSR2 equ 0FD9h ;# 
   291  0000                     # 6352 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   292                           FSR2L equ 0FD9h ;# 
   293  0000                     # 6359 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   294                           FSR2H equ 0FDAh ;# 
   295  0000                     # 6366 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   296                           PLUSW2 equ 0FDBh ;# 
   297  0000                     # 6373 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   298                           PREINC2 equ 0FDCh ;# 
   299  0000                     # 6380 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   300                           POSTDEC2 equ 0FDDh ;# 
   301  0000                     # 6387 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   302                           POSTINC2 equ 0FDEh ;# 
   303  0000                     # 6394 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   304                           INDF2 equ 0FDFh ;# 
   305  0000                     # 6401 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   306                           BSR equ 0FE0h ;# 
   307  0000                     # 6408 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   308                           FSR1 equ 0FE1h ;# 
   309  0000                     # 6415 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   310                           FSR1L equ 0FE1h ;# 
   311  0000                     # 6422 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   312                           FSR1H equ 0FE2h ;# 
   313  0000                     # 6429 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   314                           PLUSW1 equ 0FE3h ;# 
   315  0000                     # 6436 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   316                           PREINC1 equ 0FE4h ;# 
   317  0000                     # 6443 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   318                           POSTDEC1 equ 0FE5h ;# 
   319  0000                     # 6450 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   320                           POSTINC1 equ 0FE6h ;# 
   321  0000                     # 6457 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   322                           INDF1 equ 0FE7h ;# 
   323  0000                     # 6464 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   324                           WREG equ 0FE8h ;# 
   325  0000                     # 6476 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   326                           FSR0 equ 0FE9h ;# 
   327  0000                     # 6483 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   328                           FSR0L equ 0FE9h ;# 
   329  0000                     # 6490 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   330                           FSR0H equ 0FEAh ;# 
   331  0000                     # 6497 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   332                           PLUSW0 equ 0FEBh ;# 
   333  0000                     # 6504 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   334                           PREINC0 equ 0FECh ;# 
   335  0000                     # 6511 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   336                           POSTDEC0 equ 0FEDh ;# 
   337  0000                     # 6518 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   338                           POSTINC0 equ 0FEEh ;# 
   339  0000                     # 6525 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   340                           INDF0 equ 0FEFh ;# 
   341  0000                     # 6532 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   342                           INTCON3 equ 0FF0h ;# 
   343  0000                     # 6624 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   344                           INTCON2 equ 0FF1h ;# 
   345  0000                     # 6694 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   346                           INTCON equ 0FF2h ;# 
   347  0000                     # 6811 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   348                           PROD equ 0FF3h ;# 
   349  0000                     # 6818 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   350                           PRODL equ 0FF3h ;# 
   351  0000                     # 6825 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   352                           PRODH equ 0FF4h ;# 
   353  0000                     # 6832 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   354                           TABLAT equ 0FF5h ;# 
   355  0000                     # 6841 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   356                           TBLPTR equ 0FF6h ;# 
   357  0000                     # 6848 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   358                           TBLPTRL equ 0FF6h ;# 
   359  0000                     # 6855 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   360                           TBLPTRH equ 0FF7h ;# 
   361  0000                     # 6862 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   362                           TBLPTRU equ 0FF8h ;# 
   363  0000                     # 6871 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   364                           PCLAT equ 0FF9h ;# 
   365  0000                     # 6878 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   366                           PC equ 0FF9h ;# 
   367  0000                     # 6885 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   368                           PCL equ 0FF9h ;# 
   369  0000                     # 6892 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   370                           PCLATH equ 0FFAh ;# 
   371  0000                     # 6899 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   372                           PCLATU equ 0FFBh ;# 
   373  0000                     # 6906 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   374                           STKPTR equ 0FFCh ;# 
   375  0000                     # 6980 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   376                           TOS equ 0FFDh ;# 
   377  0000                     # 6987 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   378                           TOSL equ 0FFDh ;# 
   379  0000                     # 6994 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   380                           TOSH equ 0FFEh ;# 
   381  0000                     # 7001 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   382                           TOSU equ 0FFFh ;# 
   383  0000                     	FNCALL	_main,_BT_init
   384                           	FNCALL	_main,_BT_tx_char
   385                           	FNCALL	_main,_BT_tx_string
   386                           	FNCALL	_main,_LCD_command
   387                           	FNCALL	_main,_LCD_init
   388                           	FNCALL	_main,_LCD_string_xy
   389                           	FNCALL	_main,_L_init
   390                           	FNCALL	_main,_M_init
   391                           	FNCALL	_main,_US_init
   392                           	FNCALL	_M_init,_M_stop
   393                           	FNCALL	_LCD_string_xy,_LCD_command
   394                           	FNCALL	_LCD_string_xy,_LCD_string
   395                           	FNCALL	_LCD_string,_LCD_char
   396                           	FNCALL	_LCD_string,_LCD_command
   397                           	FNCALL	_LCD_init,_LCD_command
   398                           	FNCALL	_LCD_init,_LCD_hcommand
   399                           	FNCALL	_BT_tx_string,_BT_tx_char
   400                           	FNROOT	_main
   401                           	FNCALL	_Rx_ISR,_BT_rx_string
   402                           	FNCALL	_Rx_ISR,_LCD_clear
   403                           	FNCALL	_Rx_ISR,_L_turn_off
   404                           	FNCALL	_Rx_ISR,_L_turn_on
   405                           	FNCALL	_Rx_ISR,_M_anticlockwise_direction
   406                           	FNCALL	_Rx_ISR,_M_backward_direction
   407                           	FNCALL	_Rx_ISR,_M_clockwise_direction
   408                           	FNCALL	_Rx_ISR,_M_foward_direction
   409                           	FNCALL	_Rx_ISR,_M_set_DC
   410                           	FNCALL	_Rx_ISR,_US_send_pulse
   411                           	FNCALL	_Rx_ISR,___lldiv
   412                           	FNCALL	_Rx_ISR,___lmul
   413                           	FNCALL	_Rx_ISR,_atoi4D
   414                           	FNCALL	_Rx_ISR,_itoa4D
   415                           	FNCALL	_Rx_ISR,i1_BT_tx_string
   416                           	FNCALL	_Rx_ISR,i1_LCD_string_xy
   417                           	FNCALL	_Rx_ISR,i1_M_stop
   418                           	FNCALL	_atoi4D,___wmul
   419                           	FNCALL	_US_send_pulse,_US_print_distance
   420                           	FNCALL	_US_send_pulse,___aldiv
   421                           	FNCALL	_US_send_pulse,___lmul
   422                           	FNCALL	_US_send_pulse,_itoa4D
   423                           	FNCALL	_US_print_distance,_itoa4D
   424                           	FNCALL	_US_print_distance,i1_BT_tx_char
   425                           	FNCALL	_US_print_distance,i1_BT_tx_string
   426                           	FNCALL	_US_print_distance,i1_LCD_command
   427                           	FNCALL	_US_print_distance,i1_LCD_string_xy
   428                           	FNCALL	i1_LCD_string_xy,i1_LCD_command
   429                           	FNCALL	i1_LCD_string_xy,i1_LCD_string
   430                           	FNCALL	i1_LCD_string,i1_LCD_char
   431                           	FNCALL	i1_LCD_string,i1_LCD_command
   432                           	FNCALL	i1_BT_tx_string,i1_BT_tx_char
   433                           	FNCALL	_itoa4D,___lwdiv
   434                           	FNCALL	_itoa4D,___lwmod
   435                           	FNCALL	_LCD_clear,i1_LCD_command
   436                           	FNCALL	_BT_rx_string,_BT_rx_char
   437                           	FNCALL	intlevel1,_Rx_ISR
   438                           	global	intlevel1
   439                           	FNROOT	intlevel1
   440                           	global	_ParkingDistance
   441                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
   442                           global __pidataCOMRAM
   443                           __pidataCOMRAM:
   444  001854                     	file	"main.c"
   445                           	line	129
   446                           
   447                           ;initializer for _ParkingDistance
   448                           	dw	(02Dh)&0ffffh
   449  001854  002D               	global	Rx_ISR@F2579
   450                           	global	_distance
   451                           	global	_nibble
   452                           	global	Rx_ISR@F2577
   453                           	global	_LATCbits
   454                           _LATCbits	set	0xF8B
   455  0000                     	global	_TRISCbits
   456                           _TRISCbits	set	0xF94
   457  0000                     	global	_PORTDbits
   458                           _PORTDbits	set	0xF83
   459  0000                     	global	_TRISDbits
   460                           _TRISDbits	set	0xF95
   461  0000                     	global	_LATDbits
   462                           _LATDbits	set	0xF8C
   463  0000                     	global	_LATBbits
   464                           _LATBbits	set	0xF8A
   465  0000                     	global	_TRISB
   466                           _TRISB	set	0xF93
   467  0000                     	global	_LATB
   468                           _LATB	set	0xF8A
   469  0000                     	global	_RCREG
   470                           _RCREG	set	0xFAE
   471  0000                     	global	_TXREG
   472                           _TXREG	set	0xFAD
   473  0000                     	global	_SPBRG
   474                           _SPBRG	set	0xFAF
   475  0000                     	global	_CCPR2L
   476                           _CCPR2L	set	0xFBB
   477  0000                     	global	_CCPR1L
   478                           _CCPR1L	set	0xFBE
   479  0000                     	global	_PR2
   480                           _PR2	set	0xFCB
   481  0000                     	global	_IOFS
   482                           _IOFS	set	0x7E9A
   483  0000                     	global	_IRCF0
   484                           _IRCF0	set	0x7E9C
   485  0000                     	global	_IRCF1
   486                           _IRCF1	set	0x7E9D
   487  0000                     	global	_IRCF2
   488                           _IRCF2	set	0x7E9E
   489  0000                     	global	_IDLEN
   490                           _IDLEN	set	0x7E9F
   491  0000                     	global	_OERR
   492                           _OERR	set	0x7D59
   493  0000                     	global	_RCIF
   494                           _RCIF	set	0x7CF5
   495  0000                     	global	_TXIF
   496                           _TXIF	set	0x7CF4
   497  0000                     	global	_RCIE
   498                           _RCIE	set	0x7CED
   499  0000                     	global	_ABDEN
   500                           _ABDEN	set	0x7DC0
   501  0000                     	global	_WUE
   502                           _WUE	set	0x7DC1
   503  0000                     	global	_BRG16
   504                           _BRG16	set	0x7DC3
   505  0000                     	global	_ADDEN
   506                           _ADDEN	set	0x7D5B
   507  0000                     	global	_CREN
   508                           _CREN	set	0x7D5C
   509  0000                     	global	_RX9
   510                           _RX9	set	0x7D5E
   511  0000                     	global	_SPEN
   512                           _SPEN	set	0x7D5F
   513  0000                     	global	_BRGH
   514                           _BRGH	set	0x7D62
   515  0000                     	global	_SENDB
   516                           _SENDB	set	0x7D63
   517  0000                     	global	_SYNC
   518                           _SYNC	set	0x7D64
   519  0000                     	global	_TXEN
   520                           _TXEN	set	0x7D65
   521  0000                     	global	_TX9
   522                           _TX9	set	0x7D66
   523  0000                     	global	_TMR2ON
   524                           _TMR2ON	set	0x7E52
   525  0000                     	global	_T2CKPS0
   526                           _T2CKPS0	set	0x7E50
   527  0000                     	global	_T2CKPS1
   528                           _T2CKPS1	set	0x7E51
   529  0000                     	global	_TMR2IF
   530                           _TMR2IF	set	0x7CF1
   531  0000                     	global	_DC2B0
   532                           _DC2B0	set	0x7DD4
   533  0000                     	global	_DC2B1
   534                           _DC2B1	set	0x7DD5
   535  0000                     	global	_DC1B0
   536                           _DC1B0	set	0x7DEC
   537  0000                     	global	_DC1B1
   538                           _DC1B1	set	0x7DED
   539  0000                     	global	_CCP2M0
   540                           _CCP2M0	set	0x7DD0
   541  0000                     	global	_CCP2M1
   542                           _CCP2M1	set	0x7DD1
   543  0000                     	global	_CCP2M2
   544                           _CCP2M2	set	0x7DD2
   545  0000                     	global	_CCP2M3
   546                           _CCP2M3	set	0x7DD3
   547  0000                     	global	_CCP1M0
   548                           _CCP1M0	set	0x7DE8
   549  0000                     	global	_CCP1M1
   550                           _CCP1M1	set	0x7DE9
   551  0000                     	global	_CCP1M2
   552                           _CCP1M2	set	0x7DEA
   553  0000                     	global	_CCP1M3
   554                           _CCP1M3	set	0x7DEB
   555  0000                     	global	_TMR0
   556                           _TMR0	set	0xFD6
   557  0000                     	global	_T0CS
   558                           _T0CS	set	0x7EAD
   559  0000                     	global	_T0PS0
   560                           _T0PS0	set	0x7EA8
   561  0000                     	global	_T0PS1
   562                           _T0PS1	set	0x7EA9
   563  0000                     	global	_T0PS2
   564                           _T0PS2	set	0x7EAA
   565  0000                     	global	_PSA
   566                           _PSA	set	0x7EAB
   567  0000                     	global	_T0SE
   568                           _T0SE	set	0x7EAC
   569  0000                     	global	_T08BIT
   570                           _T08BIT	set	0x7EAE
   571  0000                     	global	_TMR0ON
   572                           _TMR0ON	set	0x7EAF
   573  0000                     	global	_INT0IE
   574                           _INT0IE	set	0x7F94
   575  0000                     	global	_TMR0IE
   576                           _TMR0IE	set	0x7F95
   577  0000                     	global	_PEIE
   578                           _PEIE	set	0x7F96
   579  0000                     	global	_GIE
   580                           _GIE	set	0x7F97
   581  0000                     	global	_TMR0IF
   582                           _TMR0IF	set	0x7F92
   583  0000                     	global	_RBIF
   584                           _RBIF	set	0x7F90
   585  0000                     	global	_RBIE
   586                           _RBIE	set	0x7F93
   587  0000                     psect	mediumconst,class=MEDIUMCONST,space=0,reloc=2,noexec
   588                           global __pmediumconst
   589                           __pmediumconst:
   590  007C94                     	db	0
   591  007C94  00                 	
   592                           STR_14:
   593  007C95                     	db	87	;'W'
   594  007C95  57                 	db	104	;'h'
   595  007C96  68                 	db	105	;'i'
   596  007C97  69                 	db	99	;'c'
   597  007C98  63                 	db	104	;'h'
   598  007C99  68                 	db	32
   599  007C9A  20                 	db	109	;'m'
   600  007C9B  6D                 	db	111	;'o'
   601  007C9C  6F                 	db	116	;'t'
   602  007C9D  74                 	db	111	;'o'
   603  007C9E  6F                 	db	114	;'r'
   604  007C9F  72                 	db	32
   605  007CA0  20                 	db	100	;'d'
   606  007CA1  64                 	db	111	;'o'
   607  007CA2  6F                 	db	32
   608  007CA3  20                 	db	121	;'y'
   609  007CA4  79                 	db	111	;'o'
   610  007CA5  6F                 	db	117	;'u'
   611  007CA6  75                 	db	32
   612  007CA7  20                 	db	119	;'w'
   613  007CA8  77                 	db	97	;'a'
   614  007CA9  61                 	db	110	;'n'
   615  007CAA  6E                 	db	116	;'t'
   616  007CAB  74                 	db	32
   617  007CAC  20                 	db	116	;'t'
   618  007CAD  74                 	db	111	;'o'
   619  007CAE  6F                 	db	32
   620  007CAF  20                 	db	115	;'s'
   621  007CB0  73                 	db	101	;'e'
   622  007CB1  65                 	db	116	;'t'
   623  007CB2  74                 	db	32
   624  007CB3  20                 	db	68	;'D'
   625  007CB4  44                 	db	67	;'C'
   626  007CB5  43                 	db	63	;'?'
   627  007CB6  3F                 	db	32
   628  007CB7  20                 	db	77	;'M'
   629  007CB8  4D                 	db	111	;'o'
   630  007CB9  6F                 	db	116	;'t'
   631  007CBA  74                 	db	111	;'o'
   632  007CBB  6F                 	db	114	;'r'
   633  007CBC  72                 	db	32
   634  007CBD  20                 	db	49	;'1'
   635  007CBE  31                 	db	32
   636  007CBF  20                 	db	40
   637  007CC0  28                 	db	49	;'1'
   638  007CC1  31                 	db	41
   639  007CC2  29                 	db	44
   640  007CC3  2C                 	db	32
   641  007CC4  20                 	db	77	;'M'
   642  007CC5  4D                 	db	111	;'o'
   643  007CC6  6F                 	db	116	;'t'
   644  007CC7  74                 	db	111	;'o'
   645  007CC8  6F                 	db	114	;'r'
   646  007CC9  72                 	db	32
   647  007CCA  20                 	db	50	;'2'
   648  007CCB  32                 	db	32
   649  007CCC  20                 	db	40
   650  007CCD  28                 	db	50	;'2'
   651  007CCE  32                 	db	41
   652  007CCF  29                 	db	32
   653  007CD0  20                 	db	111	;'o'
   654  007CD1  6F                 	db	114	;'r'
   655  007CD2  72                 	db	32
   656  007CD3  20                 	db	98	;'b'
   657  007CD4  62                 	db	111	;'o'
   658  007CD5  6F                 	db	116	;'t'
   659  007CD6  74                 	db	104	;'h'
   660  007CD7  68                 	db	32
   661  007CD8  20                 	db	40
   662  007CD9  28                 	db	51	;'3'
   663  007CDA  33                 	db	41
   664  007CDB  29                 	db	10
   665  007CDC  0A                 	db	0
   666  007CDD  00                 	
   667                           STR_13:
   668  007CDE                     	db	87	;'W'
   669  007CDE  57                 	db	114	;'r'
   670  007CDF  72                 	db	105	;'i'
   671  007CE0  69                 	db	116	;'t'
   672  007CE1  74                 	db	101	;'e'
   673  007CE2  65                 	db	32
   674  007CE3  20                 	db	119	;'w'
   675  007CE4  77                 	db	104	;'h'
   676  007CE5  68                 	db	97	;'a'
   677  007CE6  61                 	db	116	;'t'
   678  007CE7  74                 	db	32
   679  007CE8  20                 	db	121	;'y'
   680  007CE9  79                 	db	111	;'o'
   681  007CEA  6F                 	db	117	;'u'
   682  007CEB  75                 	db	32
   683  007CEC  20                 	db	119	;'w'
   684  007CED  77                 	db	97	;'a'
   685  007CEE  61                 	db	110	;'n'
   686  007CEF  6E                 	db	116	;'t'
   687  007CF0  74                 	db	32
   688  007CF1  20                 	db	116	;'t'
   689  007CF2  74                 	db	111	;'o'
   690  007CF3  6F                 	db	32
   691  007CF4  20                 	db	115	;'s'
   692  007CF5  73                 	db	101	;'e'
   693  007CF6  65                 	db	101	;'e'
   694  007CF7  65                 	db	32
   695  007CF8  20                 	db	111	;'o'
   696  007CF9  6F                 	db	110	;'n'
   697  007CFA  6E                 	db	32
   698  007CFB  20                 	db	116	;'t'
   699  007CFC  74                 	db	104	;'h'
   700  007CFD  68                 	db	101	;'e'
   701  007CFE  65                 	db	32
   702  007CFF  20                 	db	76	;'L'
   703  007D00  4C                 	db	67	;'C'
   704  007D01  43                 	db	68	;'D'
   705  007D02  44                 	db	10
   706  007D03  0A                 	db	0
   707  007D04  00                 	
   708                           STR_15:
   709  007D05                     	db	80	;'P'
   710  007D05  50                 	db	108	;'l'
   711  007D06  6C                 	db	101	;'e'
   712  007D07  65                 	db	97	;'a'
   713  007D08  61                 	db	115	;'s'
   714  007D09  73                 	db	101	;'e'
   715  007D0A  65                 	db	32
   716  007D0B  20                 	db	101	;'e'
   717  007D0C  65                 	db	110	;'n'
   718  007D0D  6E                 	db	116	;'t'
   719  007D0E  74                 	db	101	;'e'
   720  007D0F  65                 	db	114	;'r'
   721  007D10  72                 	db	32
   722  007D11  20                 	db	68	;'D'
   723  007D12  44                 	db	67	;'C'
   724  007D13  43                 	db	32
   725  007D14  20                 	db	118	;'v'
   726  007D15  76                 	db	97	;'a'
   727  007D16  61                 	db	108	;'l'
   728  007D17  6C                 	db	117	;'u'
   729  007D18  75                 	db	101	;'e'
   730  007D19  65                 	db	32
   731  007D1A  20                 	db	40
   732  007D1B  28                 	db	37
   733  007D1C  25                 	db	41
   734  007D1D  29                 	db	10
   735  007D1E  0A                 	db	0
   736  007D1F  00                 	
   737                           STR_10:
   738  007D20                     	db	80	;'P'
   739  007D20  50                 	db	97	;'a'
   740  007D21  61                 	db	114	;'r'
   741  007D22  72                 	db	107	;'k'
   742  007D23  6B                 	db	105	;'i'
   743  007D24  69                 	db	110	;'n'
   744  007D25  6E                 	db	103	;'g'
   745  007D26  67                 	db	32
   746  007D27  20                 	db	115	;'s'
   747  007D28  73                 	db	116	;'t'
   748  007D29  74                 	db	111	;'o'
   749  007D2A  6F                 	db	112	;'p'
   750  007D2B  70                 	db	112	;'p'
   751  007D2C  70                 	db	101	;'e'
   752  007D2D  65                 	db	100	;'d'
   753  007D2E  64                 	db	10
   754  007D2F  0A                 	db	0
   755  007D30  00                 	
   756                           STR_4:
   757  007D31                     	db	77	;'M'
   758  007D31  4D                 	db	111	;'o'
   759  007D32  6F                 	db	116	;'t'
   760  007D33  74                 	db	111	;'o'
   761  007D34  6F                 	db	114	;'r'
   762  007D35  72                 	db	32
   763  007D36  20                 	db	99	;'c'
   764  007D37  63                 	db	111	;'o'
   765  007D38  6F                 	db	110	;'n'
   766  007D39  6E                 	db	110	;'n'
   767  007D3A  6E                 	db	101	;'e'
   768  007D3B  65                 	db	99	;'c'
   769  007D3C  63                 	db	116	;'t'
   770  007D3D  74                 	db	101	;'e'
   771  007D3E  65                 	db	100	;'d'
   772  007D3F  64                 	db	10
   773  007D40  0A                 	db	0
   774  007D41  00                 	
   775                           STR_16:
   776  007D42                     	db	87	;'W'
   777  007D42  57                 	db	114	;'r'
   778  007D43  72                 	db	111	;'o'
   779  007D44  6F                 	db	110	;'n'
   780  007D45  6E                 	db	103	;'g'
   781  007D46  67                 	db	32
   782  007D47  20                 	db	65	;'A'
   783  007D48  41                 	db	110	;'n'
   784  007D49  6E                 	db	115	;'s'
   785  007D4A  73                 	db	119	;'w'
   786  007D4B  77                 	db	101	;'e'
   787  007D4C  65                 	db	114	;'r'
   788  007D4D  72                 	db	33
   789  007D4E  21                 	db	33
   790  007D4F  21                 	db	10
   791  007D50  0A                 	db	0
   792  007D51  00                 	
   793                           STR_3:
   794  007D52                     	db	77	;'M'
   795  007D52  4D                 	db	111	;'o'
   796  007D53  6F                 	db	116	;'t'
   797  007D54  74                 	db	111	;'o'
   798  007D55  6F                 	db	114	;'r'
   799  007D56  72                 	db	32
   800  007D57  20                 	db	99	;'c'
   801  007D58  63                 	db	111	;'o'
   802  007D59  6F                 	db	110	;'n'
   803  007D5A  6E                 	db	110	;'n'
   804  007D5B  6E                 	db	101	;'e'
   805  007D5C  65                 	db	99	;'c'
   806  007D5D  63                 	db	116	;'t'
   807  007D5E  74                 	db	101	;'e'
   808  007D5F  65                 	db	100	;'d'
   809  007D60  64                 	db	0
   810  007D61  00                 	
   811                           STR_2:
   812  007D62                     	db	76	;'L'
   813  007D62  4C                 	db	67	;'C'
   814  007D63  43                 	db	68	;'D'
   815  007D64  44                 	db	32
   816  007D65  20                 	db	99	;'c'
   817  007D66  63                 	db	111	;'o'
   818  007D67  6F                 	db	110	;'n'
   819  007D68  6E                 	db	110	;'n'
   820  007D69  6E                 	db	101	;'e'
   821  007D6A  65                 	db	99	;'c'
   822  007D6B  63                 	db	116	;'t'
   823  007D6C  74                 	db	101	;'e'
   824  007D6D  65                 	db	100	;'d'
   825  007D6E  64                 	db	10
   826  007D6F  0A                 	db	0
   827  007D70  00                 	
   828                           STR_7:
   829  007D71                     	db	68	;'D'
   830  007D71  44                 	db	105	;'i'
   831  007D72  69                 	db	115	;'s'
   832  007D73  73                 	db	116	;'t'
   833  007D74  74                 	db	97	;'a'
   834  007D75  61                 	db	110	;'n'
   835  007D76  6E                 	db	99	;'c'
   836  007D77  63                 	db	101	;'e'
   837  007D78  65                 	db	32
   838  007D79  20                 	db	40
   839  007D7A  28                 	db	109	;'m'
   840  007D7B  6D                 	db	109	;'m'
   841  007D7C  6D                 	db	41
   842  007D7D  29                 	db	58	;':'
   843  007D7E  3A                 	db	0
   844  007D7F  00                 	
   845                           STR_6:
   846  007D80                     	db	85	;'U'
   847  007D80  55                 	db	83	;'S'
   848  007D81  53                 	db	32
   849  007D82  20                 	db	99	;'c'
   850  007D83  63                 	db	111	;'o'
   851  007D84  6F                 	db	110	;'n'
   852  007D85  6E                 	db	110	;'n'
   853  007D86  6E                 	db	101	;'e'
   854  007D87  65                 	db	99	;'c'
   855  007D88  63                 	db	116	;'t'
   856  007D89  74                 	db	101	;'e'
   857  007D8A  65                 	db	100	;'d'
   858  007D8B  64                 	db	10
   859  007D8C  0A                 	db	0
   860  007D8D  00                 	
   861                           STR_1:
   862  007D8E                     	db	76	;'L'
   863  007D8E  4C                 	db	67	;'C'
   864  007D8F  43                 	db	68	;'D'
   865  007D90  44                 	db	32
   866  007D91  20                 	db	99	;'c'
   867  007D92  63                 	db	111	;'o'
   868  007D93  6F                 	db	110	;'n'
   869  007D94  6E                 	db	110	;'n'
   870  007D95  6E                 	db	101	;'e'
   871  007D96  65                 	db	99	;'c'
   872  007D97  63                 	db	116	;'t'
   873  007D98  74                 	db	101	;'e'
   874  007D99  65                 	db	100	;'d'
   875  007D9A  64                 	db	0
   876  007D9B  00                 	
   877                           STR_5:
   878  007D9C                     	db	85	;'U'
   879  007D9C  55                 	db	83	;'S'
   880  007D9D  53                 	db	32
   881  007D9E  20                 	db	99	;'c'
   882  007D9F  63                 	db	111	;'o'
   883  007DA0  6F                 	db	110	;'n'
   884  007DA1  6E                 	db	110	;'n'
   885  007DA2  6E                 	db	101	;'e'
   886  007DA3  65                 	db	99	;'c'
   887  007DA4  63                 	db	116	;'t'
   888  007DA5  74                 	db	101	;'e'
   889  007DA6  65                 	db	100	;'d'
   890  007DA7  64                 	db	0
   891  007DA8  00                 	
   892                           STR_9:
   893  007DA9                     	db	80	;'P'
   894  007DA9  50                 	db	97	;'a'
   895  007DAA  61                 	db	114	;'r'
   896  007DAB  72                 	db	107	;'k'
   897  007DAC  6B                 	db	105	;'i'
   898  007DAD  69                 	db	110	;'n'
   899  007DAE  6E                 	db	103	;'g'
   900  007DAF  67                 	db	10
   901  007DB0  0A                 	db	0
   902  007DB1  00                 	
   903                           STR_12:
   904  007DB2                     	db	68	;'D'
   905  007DB2  44                 	db	79	;'O'
   906  007DB3  4F                 	db	78	;'N'
   907  007DB4  4E                 	db	69	;'E'
   908  007DB5  45                 	db	33
   909  007DB6  21                 	db	33
   910  007DB7  21                 	db	10
   911  007DB8  0A                 	db	0
   912  007DB9  00                 	
   913                           STR_11:
   914  007DBA                     	db	68	;'D'
   915  007DBA  44                 	db	79	;'O'
   916  007DBB  4F                 	db	78	;'N'
   917  007DBC  4E                 	db	69	;'E'
   918  007DBD  45                 	db	0
   919  007DBE  00                 STR_8	equ	STR_7+0
   920  0000                     ; #config settings
   921                           global __CFG_OSC$HS
   922                           __CFG_OSC$HS equ 0x0
   923  0000                     global __CFG_FCMEN$OFF
   924                           __CFG_FCMEN$OFF equ 0x0
   925  0000                     global __CFG_IESO$OFF
   926                           __CFG_IESO$OFF equ 0x0
   927  0000                     global __CFG_PWRT$OFF
   928                           __CFG_PWRT$OFF equ 0x0
   929  0000                     global __CFG_BOREN$OFF
   930                           __CFG_BOREN$OFF equ 0x0
   931  0000                     global __CFG_BORV$3
   932                           __CFG_BORV$3 equ 0x0
   933  0000                     global __CFG_WDT$OFF
   934                           __CFG_WDT$OFF equ 0x0
   935  0000                     global __CFG_WDTPS$32768
   936                           __CFG_WDTPS$32768 equ 0x0
   937  0000                     global __CFG_CCP2MX$PORTC
   938                           __CFG_CCP2MX$PORTC equ 0x0
   939  0000                     global __CFG_PBADEN$OFF
   940                           __CFG_PBADEN$OFF equ 0x0
   941  0000                     global __CFG_LPT1OSC$OFF
   942                           __CFG_LPT1OSC$OFF equ 0x0
   943  0000                     global __CFG_MCLRE$ON
   944                           __CFG_MCLRE$ON equ 0x0
   945  0000                     global __CFG_STVREN$ON
   946                           __CFG_STVREN$ON equ 0x0
   947  0000                     global __CFG_LVP$OFF
   948                           __CFG_LVP$OFF equ 0x0
   949  0000                     global __CFG_XINST$OFF
   950                           __CFG_XINST$OFF equ 0x0
   951  0000                     global __CFG_CP0$OFF
   952                           __CFG_CP0$OFF equ 0x0
   953  0000                     global __CFG_CP1$OFF
   954                           __CFG_CP1$OFF equ 0x0
   955  0000                     global __CFG_CP2$OFF
   956                           __CFG_CP2$OFF equ 0x0
   957  0000                     global __CFG_CP3$OFF
   958                           __CFG_CP3$OFF equ 0x0
   959  0000                     global __CFG_CPB$OFF
   960                           __CFG_CPB$OFF equ 0x0
   961  0000                     global __CFG_CPD$OFF
   962                           __CFG_CPD$OFF equ 0x0
   963  0000                     global __CFG_WRT0$OFF
   964                           __CFG_WRT0$OFF equ 0x0
   965  0000                     global __CFG_WRT1$OFF
   966                           __CFG_WRT1$OFF equ 0x0
   967  0000                     global __CFG_WRT2$OFF
   968                           __CFG_WRT2$OFF equ 0x0
   969  0000                     global __CFG_WRT3$OFF
   970                           __CFG_WRT3$OFF equ 0x0
   971  0000                     global __CFG_WRTC$OFF
   972                           __CFG_WRTC$OFF equ 0x0
   973  0000                     global __CFG_WRTB$OFF
   974                           __CFG_WRTB$OFF equ 0x0
   975  0000                     global __CFG_WRTD$OFF
   976                           __CFG_WRTD$OFF equ 0x0
   977  0000                     global __CFG_EBTR0$OFF
   978                           __CFG_EBTR0$OFF equ 0x0
   979  0000                     global __CFG_EBTR1$OFF
   980                           __CFG_EBTR1$OFF equ 0x0
   981  0000                     global __CFG_EBTR2$OFF
   982                           __CFG_EBTR2$OFF equ 0x0
   983  0000                     global __CFG_EBTR3$OFF
   984                           __CFG_EBTR3$OFF equ 0x0
   985  0000                     global __CFG_EBTRB$OFF
   986                           __CFG_EBTRB$OFF equ 0x0
   987  0000                     	file	"/tmp/xcXhcVLi2"
   988                           	line	#
   989                           psect	cinit,class=CODE,delta=1,reloc=2
   990                           global __pcinit
   991                           __pcinit:
   992  0016C6                     global start_initialization
   993                           start_initialization:
   994  0016C6                     
   995                           global __initialization
   996                           __initialization:
   997  0016C6                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   998                           global __pbssCOMRAM
   999                           __pbssCOMRAM:
  1000  000060                     Rx_ISR@F2579:
  1001  000060                            ds      5
  1002  000060                     	global	_distance
  1003                           _distance:
  1004  000065                            ds      2
  1005  000065                     	global	_nibble
  1006                           _nibble:
  1007  000067                            ds      1
  1008  000067                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
  1009                           global __pdataCOMRAM
  1010                           __pdataCOMRAM:
  1011  000068                     	file	"main.c"
  1012                           	line	129
  1013                           	global	_ParkingDistance
  1014                           _ParkingDistance:
  1015  000068                            ds      2
  1016  000068                     psect	bssBANK0,class=BANK0,space=1,noexec,lowdata
  1017                           global __pbssBANK0
  1018                           __pbssBANK0:
  1019  000080                     Rx_ISR@F2577:
  1020  000080                            ds      32
  1021  000080                     	file	"/tmp/xcXhcVLi2"
  1022                           	line	#
  1023                           psect	cinit
  1024                           ; Initialize objects allocated to COMRAM (2 bytes)
  1025                           	global __pidataCOMRAM
  1026                           	; load TBLPTR registers with __pidataCOMRAM
  1027                           	movlw	low (__pidataCOMRAM)
  1028  0016C6  0E54               	movwf	tblptrl
  1029  0016C8  6EF6               	movlw	high(__pidataCOMRAM)
  1030  0016CA  0E18               	movwf	tblptrh
  1031  0016CC  6EF7               	movlw	low highword(__pidataCOMRAM)
  1032  0016CE  0E00               	movwf	tblptru
  1033  0016D0  6EF8               	tblrd*+ ;fetch initializer
  1034  0016D2  0009               	movff	tablat, __pdataCOMRAM+0		
  1035  0016D4  CFF5 F068          	tblrd*+ ;fetch initializer
  1036  0016D8  0009               	movff	tablat, __pdataCOMRAM+1		
  1037  0016DA  CFF5 F069          	line	#
  1038                           ; Clear objects allocated to BANK0 (32 bytes)
  1039                           	global __pbssBANK0
  1040                           lfsr	0,__pbssBANK0
  1041  0016DE  EE00  F080         movlw	32
  1042  0016E2  0E20               clear_0:
  1043  0016E4                     clrf	postinc0,c
  1044  0016E4  6AEE               decf	wreg
  1045  0016E6  06E8               bnz	clear_0
  1046  0016E8  E1FD               ; Clear objects allocated to COMRAM (8 bytes)
  1047                           	global __pbssCOMRAM
  1048                           lfsr	0,__pbssCOMRAM
  1049  0016EA  EE00  F060         movlw	8
  1050  0016EE  0E08               clear_1:
  1051  0016F0                     clrf	postinc0,c
  1052  0016F0  6AEE               decf	wreg
  1053  0016F2  06E8               bnz	clear_1
  1054  0016F4  E1FD               psect cinit,class=CODE,delta=1
  1055                           global end_of_initialization,__end_of__initialization
  1056                           
  1057                           ;End of C runtime variable initialization code
  1058                           
  1059                           end_of_initialization:
  1060  0016F6                     __end_of__initialization:
  1061  0016F6                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  1062  0016F6  906A               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  1063  0016F8  926A               	GLOBAL	__Lmediumconst
  1064                           	movlw	low highword(__Lmediumconst)
  1065  0016FA  0E00               	movwf	tblptru
  1066  0016FC  6EF8               movlb 0
  1067  0016FE  0100               goto _main	;jump to C main() function
  1068  001700  EFAE  F005         psect	cstackBANK0,class=BANK0,space=1,noexec
  1069                           global __pcstackBANK0
  1070                           __pcstackBANK0:
  1071  0000A0                     ??_BT_init:	; 1 bytes @ 0x0
  1072  0000A0                     ??_L_init:	; 1 bytes @ 0x0
  1073  0000A0                     ??_BT_tx_char:	; 1 bytes @ 0x0
  1074  0000A0                     ??_M_init:	; 1 bytes @ 0x0
  1075  0000A0                     ??_US_init:	; 1 bytes @ 0x0
  1076  0000A0                     ??_LCD_command:	; 1 bytes @ 0x0
  1077  0000A0                     ??_LCD_hcommand:	; 1 bytes @ 0x0
  1078  0000A0                     ??_M_stop:	; 1 bytes @ 0x0
  1079  0000A0                     ??_LCD_char:	; 1 bytes @ 0x0
  1080  0000A0                     	global	BT_tx_char@Tx
  1081                           BT_tx_char@Tx:	; 1 bytes @ 0x0
  1082  0000A0                     	ds   1
  1083  0000A0                     ?_BT_tx_string:	; 1 bytes @ 0x1
  1084  0000A1                     	global	LCD_hcommand@cmd
  1085                           LCD_hcommand@cmd:	; 1 bytes @ 0x1
  1086  0000A1                     	global	BT_tx_string@msg
  1087                           BT_tx_string@msg:	; 2 bytes @ 0x1
  1088  0000A1                     	ds   1
  1089  0000A1                     	global	LCD_command@cmd
  1090                           LCD_command@cmd:	; 1 bytes @ 0x2
  1091  0000A2                     	global	LCD_char@dat
  1092                           LCD_char@dat:	; 1 bytes @ 0x2
  1093  0000A2                     	ds   1
  1094  0000A2                     ??_LCD_init:	; 1 bytes @ 0x3
  1095  0000A3                     ??_BT_tx_string:	; 1 bytes @ 0x3
  1096  0000A3                     ?_LCD_string:	; 1 bytes @ 0x3
  1097  0000A3                     	global	LCD_string@msg
  1098                           LCD_string@msg:	; 2 bytes @ 0x3
  1099  0000A3                     	ds   2
  1100  0000A3                     ??_LCD_string:	; 1 bytes @ 0x5
  1101  0000A5                     	global	LCD_string@i
  1102                           LCD_string@i:	; 1 bytes @ 0x5
  1103  0000A5                     	ds   1
  1104  0000A5                     ?_LCD_string_xy:	; 1 bytes @ 0x6
  1105  0000A6                     	global	LCD_string_xy@pos
  1106                           LCD_string_xy@pos:	; 1 bytes @ 0x6
  1107  0000A6                     	ds   1
  1108  0000A6                     	global	LCD_string_xy@msg
  1109                           LCD_string_xy@msg:	; 2 bytes @ 0x7
  1110  0000A7                     	ds   2
  1111  0000A7                     ??_LCD_string_xy:	; 1 bytes @ 0x9
  1112  0000A9                     	ds   1
  1113  0000A9                     	global	LCD_string_xy@row
  1114                           LCD_string_xy@row:	; 1 bytes @ 0xA
  1115  0000AA                     	ds   1
  1116  0000AA                     	global	LCD_string_xy@location
  1117                           LCD_string_xy@location:	; 1 bytes @ 0xB
  1118  0000AB                     	ds   1
  1119  0000AB                     ??_main:	; 1 bytes @ 0xC
  1120  0000AC                     	ds   2
  1121  0000AC                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
  1122                           global __pcstackCOMRAM
  1123                           __pcstackCOMRAM:
  1124  000001                     ?_BT_init:	; 1 bytes @ 0x0
  1125  000001                     ?_LCD_init:	; 1 bytes @ 0x0
  1126  000001                     ?_L_init:	; 1 bytes @ 0x0
  1127  000001                     ?_BT_tx_char:	; 1 bytes @ 0x0
  1128  000001                     ?_M_init:	; 1 bytes @ 0x0
  1129  000001                     ?_US_init:	; 1 bytes @ 0x0
  1130  000001                     ?_LCD_command:	; 1 bytes @ 0x0
  1131  000001                     ?_LCD_hcommand:	; 1 bytes @ 0x0
  1132  000001                     ?_M_stop:	; 1 bytes @ 0x0
  1133  000001                     ?_BT_rx_char:	; 1 bytes @ 0x0
  1134  000001                     ??_BT_rx_char:	; 1 bytes @ 0x0
  1135  000001                     ?_main:	; 1 bytes @ 0x0
  1136  000001                     ?_LCD_char:	; 1 bytes @ 0x0
  1137  000001                     ?_LCD_clear:	; 1 bytes @ 0x0
  1138  000001                     ?_US_send_pulse:	; 1 bytes @ 0x0
  1139  000001                     ?_L_turn_on:	; 1 bytes @ 0x0
  1140  000001                     ??_L_turn_on:	; 1 bytes @ 0x0
  1141  000001                     ?_L_turn_off:	; 1 bytes @ 0x0
  1142  000001                     ??_L_turn_off:	; 1 bytes @ 0x0
  1143  000001                     ?_M_foward_direction:	; 1 bytes @ 0x0
  1144  000001                     ??_M_foward_direction:	; 1 bytes @ 0x0
  1145  000001                     ?_M_backward_direction:	; 1 bytes @ 0x0
  1146  000001                     ??_M_backward_direction:	; 1 bytes @ 0x0
  1147  000001                     ?_M_clockwise_direction:	; 1 bytes @ 0x0
  1148  000001                     ??_M_clockwise_direction:	; 1 bytes @ 0x0
  1149  000001                     ?_M_anticlockwise_direction:	; 1 bytes @ 0x0
  1150  000001                     ??_M_anticlockwise_direction:	; 1 bytes @ 0x0
  1151  000001                     ?_M_set_DC:	; 1 bytes @ 0x0
  1152  000001                     ?_BT_rx_string:	; 1 bytes @ 0x0
  1153  000001                     ?_Rx_ISR:	; 1 bytes @ 0x0
  1154  000001                     ?i1_LCD_command:	; 1 bytes @ 0x0
  1155  000001                     ??i1_LCD_command:	; 1 bytes @ 0x0
  1156  000001                     ?i1_LCD_char:	; 1 bytes @ 0x0
  1157  000001                     ??i1_LCD_char:	; 1 bytes @ 0x0
  1158  000001                     ?i1_M_stop:	; 1 bytes @ 0x0
  1159  000001                     ??i1_M_stop:	; 1 bytes @ 0x0
  1160  000001                     ?i1_BT_tx_char:	; 1 bytes @ 0x0
  1161  000001                     ??i1_BT_tx_char:	; 1 bytes @ 0x0
  1162  000001                     	global	?___wmul
  1163                           ?___wmul:	; 2 bytes @ 0x0
  1164  000001                     	global	?___lwdiv
  1165                           ?___lwdiv:	; 2 bytes @ 0x0
  1166  000001                     	global	?___lmul
  1167                           ?___lmul:	; 4 bytes @ 0x0
  1168  000001                     	global	i1BT_tx_char@Tx
  1169                           i1BT_tx_char@Tx:	; 1 bytes @ 0x0
  1170  000001                     	global	M_set_DC@DutyCycle
  1171                           M_set_DC@DutyCycle:	; 2 bytes @ 0x0
  1172  000001                     	global	BT_rx_string@RxStr
  1173                           BT_rx_string@RxStr:	; 2 bytes @ 0x0
  1174  000001                     	global	___wmul@multiplier
  1175                           ___wmul@multiplier:	; 2 bytes @ 0x0
  1176  000001                     	global	___lwdiv@dividend
  1177                           ___lwdiv@dividend:	; 2 bytes @ 0x0
  1178  000001                     	global	___lmul@multiplier
  1179                           ___lmul@multiplier:	; 4 bytes @ 0x0
  1180  000001                     	ds   1
  1181  000001                     ?i1_BT_tx_string:	; 1 bytes @ 0x1
  1182  000002                     	global	i1BT_tx_string@msg
  1183                           i1BT_tx_string@msg:	; 2 bytes @ 0x1
  1184  000002                     	ds   1
  1185  000002                     ??_BT_rx_string:	; 1 bytes @ 0x2
  1186  000003                     	global	M_set_DC@motor
  1187                           M_set_DC@motor:	; 1 bytes @ 0x2
  1188  000003                     	global	i1LCD_command@cmd
  1189                           i1LCD_command@cmd:	; 1 bytes @ 0x2
  1190  000003                     	global	i1LCD_char@dat
  1191                           i1LCD_char@dat:	; 1 bytes @ 0x2
  1192  000003                     	global	___wmul@multiplicand
  1193                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  1194  000003                     	global	___lwdiv@divisor
  1195                           ___lwdiv@divisor:	; 2 bytes @ 0x2
  1196  000003                     	ds   1
  1197  000003                     ??_LCD_clear:	; 1 bytes @ 0x3
  1198  000004                     ??_M_set_DC:	; 1 bytes @ 0x3
  1199  000004                     ?i1_LCD_string:	; 1 bytes @ 0x3
  1200  000004                     ??i1_BT_tx_string:	; 1 bytes @ 0x3
  1201  000004                     	global	i1LCD_string@msg
  1202                           i1LCD_string@msg:	; 2 bytes @ 0x3
  1203  000004                     	ds   1
  1204  000004                     ??___wmul:	; 1 bytes @ 0x4
  1205  000005                     ??___lwdiv:	; 1 bytes @ 0x4
  1206  000005                     	global	___wmul@product
  1207                           ___wmul@product:	; 2 bytes @ 0x4
  1208  000005                     	global	___lwdiv@quotient
  1209                           ___lwdiv@quotient:	; 2 bytes @ 0x4
  1210  000005                     	global	___lmul@multiplicand
  1211                           ___lmul@multiplicand:	; 4 bytes @ 0x4
  1212  000005                     	ds   1
  1213  000005                     ??i1_LCD_string:	; 1 bytes @ 0x5
  1214  000006                     	global	i1LCD_string@i
  1215                           i1LCD_string@i:	; 1 bytes @ 0x5
  1216  000006                     	ds   1
  1217  000006                     ?i1_LCD_string_xy:	; 1 bytes @ 0x6
  1218  000007                     	global	?_atoi4D
  1219                           ?_atoi4D:	; 2 bytes @ 0x6
  1220  000007                     	global	___lwdiv@counter
  1221                           ___lwdiv@counter:	; 1 bytes @ 0x6
  1222  000007                     	global	i1LCD_string_xy@pos
  1223                           i1LCD_string_xy@pos:	; 1 bytes @ 0x6
  1224  000007                     	global	atoi4D@arr
  1225                           atoi4D@arr:	; 2 bytes @ 0x6
  1226  000007                     	ds   1
  1227  000007                     	global	?___lwmod
  1228                           ?___lwmod:	; 2 bytes @ 0x7
  1229  000008                     	global	BT_rx_string@i
  1230                           BT_rx_string@i:	; 1 bytes @ 0x7
  1231  000008                     	global	___lwmod@dividend
  1232                           ___lwmod@dividend:	; 2 bytes @ 0x7
  1233  000008                     	global	i1LCD_string_xy@msg
  1234                           i1LCD_string_xy@msg:	; 2 bytes @ 0x7
  1235  000008                     	ds   1
  1236  000008                     ??_atoi4D:	; 1 bytes @ 0x8
  1237  000009                     ??___lmul:	; 1 bytes @ 0x8
  1238  000009                     	global	___lmul@product
  1239                           ___lmul@product:	; 4 bytes @ 0x8
  1240  000009                     	ds   1
  1241  000009                     ??i1_LCD_string_xy:	; 1 bytes @ 0x9
  1242  00000A                     	global	atoi4D@num
  1243                           atoi4D@num:	; 2 bytes @ 0x9
  1244  00000A                     	global	___lwmod@divisor
  1245                           ___lwmod@divisor:	; 2 bytes @ 0x9
  1246  00000A                     	ds   1
  1247  00000A                     	global	i1LCD_string_xy@row
  1248                           i1LCD_string_xy@row:	; 1 bytes @ 0xA
  1249  00000B                     	ds   1
  1250  00000B                     ??___lwmod:	; 1 bytes @ 0xB
  1251  00000C                     	global	___lwmod@counter
  1252                           ___lwmod@counter:	; 1 bytes @ 0xB
  1253  00000C                     	global	i1LCD_string_xy@location
  1254                           i1LCD_string_xy@location:	; 1 bytes @ 0xB
  1255  00000C                     	ds   1
  1256  00000C                     ?_itoa4D:	; 1 bytes @ 0xC
  1257  00000D                     	global	?___lldiv
  1258                           ?___lldiv:	; 4 bytes @ 0xC
  1259  00000D                     	global	?___aldiv
  1260                           ?___aldiv:	; 4 bytes @ 0xC
  1261  00000D                     	global	itoa4D@arr
  1262                           itoa4D@arr:	; 2 bytes @ 0xC
  1263  00000D                     	global	___lldiv@dividend
  1264                           ___lldiv@dividend:	; 4 bytes @ 0xC
  1265  00000D                     	global	___aldiv@dividend
  1266                           ___aldiv@dividend:	; 4 bytes @ 0xC
  1267  00000D                     	ds   2
  1268  00000D                     	global	itoa4D@num
  1269                           itoa4D@num:	; 2 bytes @ 0xE
  1270  00000F                     	ds   2
  1271  00000F                     ??_itoa4D:	; 1 bytes @ 0x10
  1272  000011                     	global	___lldiv@divisor
  1273                           ___lldiv@divisor:	; 4 bytes @ 0x10
  1274  000011                     	global	___aldiv@divisor
  1275                           ___aldiv@divisor:	; 4 bytes @ 0x10
  1276  000011                     	ds   1
  1277  000011                     ?_US_print_distance:	; 1 bytes @ 0x11
  1278  000012                     	global	US_print_distance@dist
  1279                           US_print_distance@dist:	; 2 bytes @ 0x11
  1280  000012                     	ds   2
  1281  000012                     ??_US_print_distance:	; 1 bytes @ 0x13
  1282  000014                     	global	US_print_distance@dist4D
  1283                           US_print_distance@dist4D:	; 5 bytes @ 0x13
  1284  000014                     	ds   1
  1285  000014                     ??___lldiv:	; 1 bytes @ 0x14
  1286  000015                     ??___aldiv:	; 1 bytes @ 0x14
  1287  000015                     	global	___aldiv@counter
  1288                           ___aldiv@counter:	; 1 bytes @ 0x14
  1289  000015                     	global	___lldiv@quotient
  1290                           ___lldiv@quotient:	; 4 bytes @ 0x14
  1291  000015                     	ds   1
  1292  000015                     	global	___aldiv@sign
  1293                           ___aldiv@sign:	; 1 bytes @ 0x15
  1294  000016                     	ds   1
  1295  000016                     	global	___aldiv@quotient
  1296                           ___aldiv@quotient:	; 4 bytes @ 0x16
  1297  000017                     	ds   2
  1298  000017                     	global	___lldiv@counter
  1299                           ___lldiv@counter:	; 1 bytes @ 0x18
  1300  000019                     	ds   2
  1301  000019                     ??_US_send_pulse:	; 1 bytes @ 0x1A
  1302  00001B                     	ds   4
  1303  00001B                     	global	US_send_pulse@i
  1304                           US_send_pulse@i:	; 1 bytes @ 0x1E
  1305  00001F                     	ds   1
  1306  00001F                     	global	US_send_pulse@dist
  1307                           US_send_pulse@dist:	; 5 bytes @ 0x1F
  1308  000020                     	ds   5
  1309  000020                     ??_Rx_ISR:	; 1 bytes @ 0x24
  1310  000025                     	ds   17
  1311  000025                     	global	Rx_ISR@RxMessage
  1312                           Rx_ISR@RxMessage:	; 32 bytes @ 0x35
  1313  000036                     	ds   32
  1314  000036                     	global	Rx_ISR@DuCyT
  1315                           Rx_ISR@DuCyT:	; 5 bytes @ 0x55
  1316  000056                     	ds   5
  1317  000056                     	global	Rx_ISR@motor
  1318                           Rx_ISR@motor:	; 1 bytes @ 0x5A
  1319  00005B                     	ds   1
  1320  00005B                     	global	Rx_ISR@DuCy
  1321                           Rx_ISR@DuCy:	; 4 bytes @ 0x5B
  1322  00005C                     	ds   4
  1323  00005C                     ;!
  1324                           ;!Data Sizes:
  1325                           ;!    Strings     298
  1326                           ;!    Constant    0
  1327                           ;!    Data        2
  1328                           ;!    BSS         40
  1329                           ;!    Persistent  0
  1330                           ;!    Stack       0
  1331                           ;!
  1332                           ;!Auto Spaces:
  1333                           ;!    Space          Size  Autos    Used
  1334                           ;!    COMRAM          126     95     105
  1335                           ;!    BANK0           128     14      46
  1336                           ;!    BANK1           256      0       0
  1337                           ;!    BANK2           256      0       0
  1338                           ;!    BANK3           256      0       0
  1339                           ;!    BANK4           256      0       0
  1340                           ;!    BANK5           244      0       0
  1341                           
  1342                           ;!
  1343                           ;!Pointer List with Targets:
  1344                           ;!
  1345                           ;!    atoi4D@arr	PTR unsigned char  size(2) Largest target is 32
  1346                           ;!		 -> Rx_ISR@RxMessage(COMRAM[32]), 
  1347                           ;!
  1348                           ;!    itoa4D@arr	PTR unsigned char  size(2) Largest target is 5
  1349                           ;!		 -> Rx_ISR@DuCyT(COMRAM[5]), US_print_distance@dist4D(COMRAM[5]), US_send_pulse@dist
                                 (COMRAM[5]), 
  1350                           ;!
  1351                           ;!    BT_rx_string@RxStr	PTR unsigned char  size(2) Largest target is 32
  1352                           ;!		 -> Rx_ISR@RxMessage(COMRAM[32]), 
  1353                           ;!
  1354                           ;!    BT_tx_string@msg	PTR const unsigned char  size(2) Largest target is 73
  1355                           ;!		 -> STR_16(CODE[16]), STR_15(CODE[27]), STR_14(CODE[73]), STR_13(CODE[39]), 
  1356                           ;!		 -> STR_12(CODE[8]), STR_10(CODE[17]), STR_9(CODE[9]), Rx_ISR@DuCyT(COMRAM[5]), 
  1357                           ;!		 -> STR_8(CODE[15]), US_print_distance@dist4D(COMRAM[5]), STR_6(CODE[14]), STR_4(COD
                                 E[17]), 
  1358                           ;!		 -> STR_2(CODE[15]), 
  1359                           ;!
  1360                           ;!    LCD_string_xy@msg	PTR const unsigned char  size(2) Largest target is 32
  1361                           ;!		 -> STR_11(CODE[5]), Rx_ISR@RxMessage(COMRAM[32]), STR_7(CODE[15]), US_print_distanc
                                 e@dist4D(COMRAM[5]), 
  1362                           ;!		 -> STR_5(CODE[13]), STR_3(CODE[16]), STR_1(CODE[14]), 
  1363                           ;!
  1364                           ;!    LCD_string@msg	PTR const unsigned char  size(2) Largest target is 32
  1365                           ;!		 -> STR_11(CODE[5]), Rx_ISR@RxMessage(COMRAM[32]), STR_7(CODE[15]), US_print_distanc
                                 e@dist4D(COMRAM[5]), 
  1366                           ;!		 -> STR_5(CODE[13]), STR_3(CODE[16]), STR_1(CODE[14]), 
  1367                           ;!
  1368                           
  1369                           
  1370                           ;!
  1371                           ;!Critical Paths under _main in COMRAM
  1372                           ;!
  1373                           ;!    None.
  1374                           ;!
  1375                           ;!Critical Paths under _Rx_ISR in COMRAM
  1376                           ;!
  1377                           ;!    _Rx_ISR->_US_send_pulse
  1378                           ;!    _atoi4D->___wmul
  1379                           ;!    ___lldiv->___lmul
  1380                           ;!    _US_send_pulse->___aldiv
  1381                           ;!    ___aldiv->___lmul
  1382                           ;!    _US_print_distance->_itoa4D
  1383                           ;!    i1_LCD_string_xy->i1_LCD_string
  1384                           ;!    i1_LCD_string->i1_LCD_char
  1385                           ;!    i1_LCD_string->i1_LCD_command
  1386                           ;!    i1_BT_tx_string->i1_BT_tx_char
  1387                           ;!    _itoa4D->___lwmod
  1388                           ;!    ___lwmod->___lwdiv
  1389                           ;!    _LCD_clear->i1_LCD_command
  1390                           ;!
  1391                           ;!Critical Paths under _main in BANK0
  1392                           ;!
  1393                           ;!    _main->_LCD_string_xy
  1394                           ;!    _LCD_string_xy->_LCD_string
  1395                           ;!    _LCD_string->_LCD_char
  1396                           ;!    _LCD_string->_LCD_command
  1397                           ;!    _LCD_init->_LCD_command
  1398                           ;!    _BT_tx_string->_BT_tx_char
  1399                           ;!
  1400                           ;!Critical Paths under _Rx_ISR in BANK0
  1401                           ;!
  1402                           ;!    None.
  1403                           ;!
  1404                           ;!Critical Paths under _main in BANK1
  1405                           ;!
  1406                           ;!    None.
  1407                           ;!
  1408                           ;!Critical Paths under _Rx_ISR in BANK1
  1409                           ;!
  1410                           ;!    None.
  1411                           ;!
  1412                           ;!Critical Paths under _main in BANK2
  1413                           ;!
  1414                           ;!    None.
  1415                           ;!
  1416                           ;!Critical Paths under _Rx_ISR in BANK2
  1417                           ;!
  1418                           ;!    None.
  1419                           ;!
  1420                           ;!Critical Paths under _main in BANK3
  1421                           ;!
  1422                           ;!    None.
  1423                           ;!
  1424                           ;!Critical Paths under _Rx_ISR in BANK3
  1425                           ;!
  1426                           ;!    None.
  1427                           ;!
  1428                           ;!Critical Paths under _main in BANK4
  1429                           ;!
  1430                           ;!    None.
  1431                           ;!
  1432                           ;!Critical Paths under _Rx_ISR in BANK4
  1433                           ;!
  1434                           ;!    None.
  1435                           ;!
  1436                           ;!Critical Paths under _main in BANK5
  1437                           ;!
  1438                           ;!    None.
  1439                           ;!
  1440                           ;!Critical Paths under _Rx_ISR in BANK5
  1441                           ;!
  1442                           ;!    None.
  1443                           
  1444 ;;
  1445 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1446 ;;
  1447                           
  1448                           ;!
  1449                           ;!Call Graph Tables:
  1450                           ;!
  1451                           ;! ---------------------------------------------------------------------------------
  1452                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1453                           ;! ---------------------------------------------------------------------------------
  1454                           ;! (0) _main                                                 2     2      0    2195
  1455                           ;!                                             12 BANK0      2     2      0
  1456                           ;!                            _BT_init
  1457                           ;!                         _BT_tx_char
  1458                           ;!                       _BT_tx_string
  1459                           ;!                        _LCD_command
  1460                           ;!                           _LCD_init
  1461                           ;!                      _LCD_string_xy
  1462                           ;!                             _L_init
  1463                           ;!                             _M_init
  1464                           ;!                            _US_init
  1465                           ;! ---------------------------------------------------------------------------------
  1466                           ;! (1) _US_init                                              0     0      0       0
  1467                           ;! ---------------------------------------------------------------------------------
  1468                           ;! (1) _M_init                                               0     0      0       0
  1469                           ;!                             _M_stop
  1470                           ;! ---------------------------------------------------------------------------------
  1471                           ;! (2) _M_stop                                               0     0      0       0
  1472                           ;! ---------------------------------------------------------------------------------
  1473                           ;! (1) _L_init                                               0     0      0       0
  1474                           ;! ---------------------------------------------------------------------------------
  1475                           ;! (1) _LCD_string_xy                                        6     3      3    1268
  1476                           ;!                                              6 BANK0      6     3      3
  1477                           ;!                        _LCD_command
  1478                           ;!                         _LCD_string
  1479                           ;! ---------------------------------------------------------------------------------
  1480                           ;! (2) _LCD_string                                           3     1      2     233
  1481                           ;!                                              3 BANK0      3     1      2
  1482                           ;!                           _LCD_char
  1483                           ;!                        _LCD_command
  1484                           ;! ---------------------------------------------------------------------------------
  1485                           ;! (3) _LCD_char                                             3     3      0      44
  1486                           ;!                                              0 BANK0      3     3      0
  1487                           ;! ---------------------------------------------------------------------------------
  1488                           ;! (1) _LCD_init                                             2     2      0      66
  1489                           ;!                                              3 BANK0      2     2      0
  1490                           ;!                        _LCD_command
  1491                           ;!                       _LCD_hcommand
  1492                           ;! ---------------------------------------------------------------------------------
  1493                           ;! (2) _LCD_hcommand                                         2     2      0      22
  1494                           ;!                                              0 BANK0      2     2      0
  1495                           ;! ---------------------------------------------------------------------------------
  1496                           ;! (3) _LCD_command                                          3     3      0      44
  1497                           ;!                                              0 BANK0      3     3      0
  1498                           ;! ---------------------------------------------------------------------------------
  1499                           ;! (1) _BT_tx_string                                         2     0      2     795
  1500                           ;!                                              1 BANK0      2     0      2
  1501                           ;!                         _BT_tx_char
  1502                           ;! ---------------------------------------------------------------------------------
  1503                           ;! (2) _BT_tx_char                                           1     1      0      22
  1504                           ;!                                              0 BANK0      1     1      0
  1505                           ;! ---------------------------------------------------------------------------------
  1506                           ;! (1) _BT_init                                              0     0      0       0
  1507                           ;! ---------------------------------------------------------------------------------
  1508                           ;! Estimated maximum stack depth 3
  1509                           ;! ---------------------------------------------------------------------------------
  1510                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1511                           ;! ---------------------------------------------------------------------------------
  1512                           ;! (4) _Rx_ISR                                              59    59      0   15418
  1513                           ;!                                             36 COMRAM    59    59      0
  1514                           ;!                       _BT_rx_string
  1515                           ;!                          _LCD_clear
  1516                           ;!                         _L_turn_off
  1517                           ;!                          _L_turn_on
  1518                           ;!          _M_anticlockwise_direction
  1519                           ;!               _M_backward_direction
  1520                           ;!              _M_clockwise_direction
  1521                           ;!                 _M_foward_direction
  1522                           ;!                           _M_set_DC
  1523                           ;!                      _US_send_pulse
  1524                           ;!                            ___lldiv
  1525                           ;!                             ___lmul
  1526                           ;!                             _atoi4D
  1527                           ;!                             _itoa4D
  1528                           ;!                     i1_BT_tx_string
  1529                           ;!                    i1_LCD_string_xy
  1530                           ;!                           i1_M_stop
  1531                           ;! ---------------------------------------------------------------------------------
  1532                           ;! (5) i1_M_stop                                             0     0      0       0
  1533                           ;! ---------------------------------------------------------------------------------
  1534                           ;! (5) _atoi4D                                               5     3      2     502
  1535                           ;!                                              6 COMRAM     5     3      2
  1536                           ;!                             ___wmul
  1537                           ;! ---------------------------------------------------------------------------------
  1538                           ;! (6) ___wmul                                               6     2      4     311
  1539                           ;!                                              0 COMRAM     6     2      4
  1540                           ;! ---------------------------------------------------------------------------------
  1541                           ;! (5) ___lldiv                                             13     5      8     314
  1542                           ;!                                             12 COMRAM    13     5      8
  1543                           ;!                             ___lmul (ARG)
  1544                           ;! ---------------------------------------------------------------------------------
  1545                           ;! (5) _US_send_pulse                                       10    10      0    6512
  1546                           ;!                                             26 COMRAM    10    10      0
  1547                           ;!                  _US_print_distance
  1548                           ;!                            ___aldiv
  1549                           ;!                             ___lmul
  1550                           ;!                             _itoa4D
  1551                           ;! ---------------------------------------------------------------------------------
  1552                           ;! (5) ___lmul                                              12     4      8     522
  1553                           ;!                                              0 COMRAM    12     4      8
  1554                           ;! ---------------------------------------------------------------------------------
  1555                           ;! (6) ___aldiv                                             14     6      8     452
  1556                           ;!                                             12 COMRAM    14     6      8
  1557                           ;!                             ___lmul (ARG)
  1558                           ;! ---------------------------------------------------------------------------------
  1559                           ;! (6) _US_print_distance                                    7     5      2    3325
  1560                           ;!                                             17 COMRAM     7     5      2
  1561                           ;!                             _itoa4D
  1562                           ;!                       i1_BT_tx_char
  1563                           ;!                     i1_BT_tx_string
  1564                           ;!                      i1_LCD_command
  1565                           ;!                    i1_LCD_string_xy
  1566                           ;! ---------------------------------------------------------------------------------
  1567                           ;! (5) i1_LCD_string_xy                                      6     3      3     570
  1568                           ;!                                              6 COMRAM     6     3      3
  1569                           ;!                      i1_LCD_command
  1570                           ;!                       i1_LCD_string
  1571                           ;! ---------------------------------------------------------------------------------
  1572                           ;! (6) i1_LCD_string                                         3     1      2     183
  1573                           ;!                                              3 COMRAM     3     1      2
  1574                           ;!                         i1_LCD_char
  1575                           ;!                      i1_LCD_command
  1576                           ;! ---------------------------------------------------------------------------------
  1577                           ;! (7) i1_LCD_char                                           3     3      0      44
  1578                           ;!                                              0 COMRAM     3     3      0
  1579                           ;! ---------------------------------------------------------------------------------
  1580                           ;! (5) i1_BT_tx_string                                       2     0      2     327
  1581                           ;!                                              1 COMRAM     2     0      2
  1582                           ;!                       i1_BT_tx_char
  1583                           ;! ---------------------------------------------------------------------------------
  1584                           ;! (6) i1_BT_tx_char                                         1     1      0      22
  1585                           ;!                                              0 COMRAM     1     1      0
  1586                           ;! ---------------------------------------------------------------------------------
  1587                           ;! (5) _itoa4D                                               5     1      4    2171
  1588                           ;!                                             12 COMRAM     5     1      4
  1589                           ;!                            ___lwdiv
  1590                           ;!                            ___lwmod
  1591                           ;! ---------------------------------------------------------------------------------
  1592                           ;! (6) ___lwmod                                              5     1      4     767
  1593                           ;!                                              7 COMRAM     5     1      4
  1594                           ;!                            ___lwdiv (ARG)
  1595                           ;! ---------------------------------------------------------------------------------
  1596                           ;! (6) ___lwdiv                                              7     3      4     618
  1597                           ;!                                              0 COMRAM     7     3      4
  1598                           ;! ---------------------------------------------------------------------------------
  1599                           ;! (5) _M_set_DC                                             5     2      3    3414
  1600                           ;!                                              0 COMRAM     5     2      3
  1601                           ;! ---------------------------------------------------------------------------------
  1602                           ;! (5) _M_foward_direction                                   0     0      0       0
  1603                           ;! ---------------------------------------------------------------------------------
  1604                           ;! (5) _M_clockwise_direction                                0     0      0       0
  1605                           ;! ---------------------------------------------------------------------------------
  1606                           ;! (5) _M_backward_direction                                 0     0      0       0
  1607                           ;! ---------------------------------------------------------------------------------
  1608                           ;! (5) _M_anticlockwise_direction                            0     0      0       0
  1609                           ;! ---------------------------------------------------------------------------------
  1610                           ;! (5) _L_turn_on                                            0     0      0       0
  1611                           ;! ---------------------------------------------------------------------------------
  1612                           ;! (5) _L_turn_off                                           0     0      0       0
  1613                           ;! ---------------------------------------------------------------------------------
  1614                           ;! (5) _LCD_clear                                            0     0      0      44
  1615                           ;!                      i1_LCD_command
  1616                           ;! ---------------------------------------------------------------------------------
  1617                           ;! (7) i1_LCD_command                                        3     3      0      44
  1618                           ;!                                              0 COMRAM     3     3      0
  1619                           ;! ---------------------------------------------------------------------------------
  1620                           ;! (5) _BT_rx_string                                         8     6      2     580
  1621                           ;!                                              0 COMRAM     8     6      2
  1622                           ;!                         _BT_rx_char
  1623                           ;! ---------------------------------------------------------------------------------
  1624                           ;! (6) _BT_rx_char                                           0     0      0       0
  1625                           ;! ---------------------------------------------------------------------------------
  1626                           ;! Estimated maximum stack depth 7
  1627                           ;! ---------------------------------------------------------------------------------
  1628                           ;!
  1629                           ;! Call Graph Graphs:
  1630                           ;!
  1631                           ;! _main (ROOT)
  1632                           ;!   _BT_init
  1633                           ;!   _BT_tx_char
  1634                           ;!   _BT_tx_string
  1635                           ;!     _BT_tx_char
  1636                           ;!   _LCD_command
  1637                           ;!   _LCD_init
  1638                           ;!     _LCD_command
  1639                           ;!     _LCD_hcommand
  1640                           ;!   _LCD_string_xy
  1641                           ;!     _LCD_command
  1642                           ;!     _LCD_string
  1643                           ;!       _LCD_char
  1644                           ;!       _LCD_command
  1645                           ;!   _L_init
  1646                           ;!   _M_init
  1647                           ;!     _M_stop
  1648                           ;!   _US_init
  1649                           ;!
  1650                           ;! _Rx_ISR (ROOT)
  1651                           ;!   _BT_rx_string
  1652                           ;!     _BT_rx_char
  1653                           ;!   _LCD_clear
  1654                           ;!     i1_LCD_command
  1655                           ;!   _L_turn_off
  1656                           ;!   _L_turn_on
  1657                           ;!   _M_anticlockwise_direction
  1658                           ;!   _M_backward_direction
  1659                           ;!   _M_clockwise_direction
  1660                           ;!   _M_foward_direction
  1661                           ;!   _M_set_DC
  1662                           ;!   _US_send_pulse
  1663                           ;!     _US_print_distance
  1664                           ;!       _itoa4D
  1665                           ;!         ___lwdiv
  1666                           ;!         ___lwmod
  1667                           ;!           ___lwdiv (ARG)
  1668                           ;!       i1_BT_tx_char
  1669                           ;!       i1_BT_tx_string
  1670                           ;!         i1_BT_tx_char
  1671                           ;!       i1_LCD_command
  1672                           ;!       i1_LCD_string_xy
  1673                           ;!         i1_LCD_command
  1674                           ;!         i1_LCD_string
  1675                           ;!           i1_LCD_char
  1676                           ;!           i1_LCD_command
  1677                           ;!     ___aldiv
  1678                           ;!       ___lmul (ARG)
  1679                           ;!     ___lmul
  1680                           ;!     _itoa4D
  1681                           ;!       ___lwdiv
  1682                           ;!       ___lwmod
  1683                           ;!         ___lwdiv (ARG)
  1684                           ;!   ___lldiv
  1685                           ;!     ___lmul (ARG)
  1686                           ;!   ___lmul
  1687                           ;!   _atoi4D
  1688                           ;!     ___wmul
  1689                           ;!   _itoa4D
  1690                           ;!     ___lwdiv
  1691                           ;!     ___lwmod
  1692                           ;!       ___lwdiv (ARG)
  1693                           ;!   i1_BT_tx_string
  1694                           ;!     i1_BT_tx_char
  1695                           ;!   i1_LCD_string_xy
  1696                           ;!     i1_LCD_command
  1697                           ;!     i1_LCD_string
  1698                           ;!       i1_LCD_char
  1699                           ;!       i1_LCD_command
  1700                           ;!   i1_M_stop
  1701                           ;!
  1702                           
  1703                           ;! Address spaces:
  1704                           
  1705                           ;!Name               Size   Autos  Total    Cost      Usage
  1706                           ;!BIGRAM             5F3      0       0      16        0.0%
  1707                           ;!EEDATA             100      0       0       0        0.0%
  1708                           ;!BITBANK4           100      0       0      11        0.0%
  1709                           ;!BANK4              100      0       0      12        0.0%
  1710                           ;!BITBANK3           100      0       0       9        0.0%
  1711                           ;!BANK3              100      0       0      10        0.0%
  1712                           ;!BITBANK2           100      0       0       7        0.0%
  1713                           ;!BANK2              100      0       0       8        0.0%
  1714                           ;!BITBANK1           100      0       0       5        0.0%
  1715                           ;!BANK1              100      0       0       6        0.0%
  1716                           ;!BITBANK5            F4      0       0      15        0.0%
  1717                           ;!BANK5               F4      0       0      13        0.0%
  1718                           ;!BITBANK0            80      0       0       3        0.0%
  1719                           ;!BANK0               80      E      2E       4       35.9%
  1720                           ;!BITCOMRAM           7E      0       0       0        0.0%
  1721                           ;!COMRAM              7E     5F      69       1       83.3%
  1722                           ;!BITSFR_5             0      0       0     200        0.0%
  1723                           ;!SFR_5                0      0       0     200        0.0%
  1724                           ;!BITSFR_4             0      0       0     200        0.0%
  1725                           ;!SFR_4                0      0       0     200        0.0%
  1726                           ;!BITSFR_3             0      0       0     200        0.0%
  1727                           ;!SFR_3                0      0       0     200        0.0%
  1728                           ;!BITSFR_2             0      0       0     200        0.0%
  1729                           ;!SFR_2                0      0       0     200        0.0%
  1730                           ;!BITSFR_1             0      0       0     200        0.0%
  1731                           ;!SFR_1                0      0       0     200        0.0%
  1732                           ;!BITSFR               0      0       0     200        0.0%
  1733                           ;!SFR                  0      0       0     200        0.0%
  1734                           ;!STACK                0      0       0       2        0.0%
  1735                           ;!NULL                 0      0       0       0        0.0%
  1736                           ;!ABS                  0      0      97      14        0.0%
  1737                           ;!DATA                 0      0      97      17        0.0%
  1738                           ;!CODE                 0      0       0       0        0.0%
  1739                           
  1740                           	global	_main
  1741                           
  1742 ;; *************** function _main *****************
  1743 ;; Defined at:
  1744 ;;		line 157 in file "main.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;		None
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;		None
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1758 ;;      Params:         0       0       0       0       0       0       0
  1759 ;;      Locals:         0       0       0       0       0       0       0
  1760 ;;      Temps:          0       2       0       0       0       0       0
  1761 ;;      Totals:         0       2       0       0       0       0       0
  1762 ;;Total ram usage:        2 bytes
  1763 ;; Hardware stack levels required when called:    9
  1764 ;; This function calls:
  1765 ;;		_BT_init
  1766 ;;		_BT_tx_char
  1767 ;;		_BT_tx_string
  1768 ;;		_LCD_command
  1769 ;;		_LCD_init
  1770 ;;		_LCD_string_xy
  1771 ;;		_L_init
  1772 ;;		_M_init
  1773 ;;		_US_init
  1774 ;; This function is called by:
  1775 ;;		Startup code after reset
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1779                           	file	"main.c"
  1780                           	line	157
  1781                           global __ptext0
  1782                           __ptext0:
  1783  000B5C                     psect	text0
  1784                           	file	"main.c"
  1785                           	line	157
  1786                           	global	__size_of_main
  1787                           	__size_of_main	equ	__end_of_main-_main
  1788  0000                     	
  1789                           _main:
  1790  000B5C                     ;incstack = 0
  1791                           	opt	stack 22
  1792                           	line	159
  1793                           	
  1794                           l2348:
  1795  000B5C                     ;main.c: 159:     BT_init();
  1796                           	call	_BT_init	;wreg free
  1797  000B5C  ECE5  F00B         	line	160
  1798                           	
  1799                           l2350:
  1800  000B60                     ;main.c: 160:     LCD_init();
  1801                           	call	_LCD_init	;wreg free
  1802  000B60  EC6A  F00A         	line	161
  1803                           	
  1804                           l2352:
  1805  000B64                     ;main.c: 161:     L_init();
  1806                           	call	_L_init	;wreg free
  1807  000B64  EC1E  F00C         	line	162
  1808                           	
  1809                           l2354:
  1810  000B68                     ;main.c: 162:     BT_tx_char('\n');
  1811                           	movlw	(0Ah)&0ffh
  1812  000B68  0E0A               	
  1813                           	call	_BT_tx_char
  1814  000B6A  ECF9  F00B         	line	163
  1815                           	
  1816                           l2356:
  1817  000B6E                     ;main.c: 163:     LCD_string_xy(1,1,"LCD connected");
  1818                           	movlw	low(01h)
  1819  000B6E  0E01               	movlb	0	; () banked
  1820  000B70  0100               	movwf	((LCD_string_xy@pos))&0ffh
  1821  000B72  6FA6               		movlw	low(STR_1)
  1822  000B74  0E8E               	movwf	((LCD_string_xy@msg))&0ffh
  1823  000B76  6FA7               	movlw	high(STR_1)
  1824  000B78  0E7D               	movwf	((LCD_string_xy@msg+1))&0ffh
  1825  000B7A  6FA8               
  1826                           	movlw	(01h)&0ffh
  1827  000B7C  0E01               	
  1828                           	call	_LCD_string_xy
  1829  000B7E  ECAF  F009         	line	164
  1830                           	
  1831                           l2358:
  1832  000B82                     ;main.c: 164:     BT_tx_string("LCD connected\n");
  1833                           		movlw	low(STR_2)
  1834  000B82  0E62               	movlb	0	; () banked
  1835  000B84  0100               	movwf	((BT_tx_string@msg))&0ffh
  1836  000B86  6FA1               	movlw	high(STR_2)
  1837  000B88  0E7D               	movwf	((BT_tx_string@msg+1))&0ffh
  1838  000B8A  6FA2               
  1839                           	call	_BT_tx_string	;wreg free
  1840  000B8C  EC48  F009         	line	165
  1841                           	
  1842                           l2360:
  1843  000B90                     ;main.c: 165:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1844                           	opt asmopt_push
  1845                           opt asmopt_off
  1846                           movlw  26
  1847  000B90  0E1A               	movlb	0	; () banked
  1848  000B92  0100               movwf	(??_main+0+0+1)&0ffh,f
  1849  000B94  6FAD               movlw	94
  1850  000B96  0E5E               movwf	(??_main+0+0)&0ffh,f
  1851  000B98  6FAC               	movlw	110
  1852  000B9A  0E6E               u2227:
  1853  000B9C                     decfsz	wreg,f
  1854  000B9C  2EE8               	bra	u2227
  1855  000B9E  D7FE               	decfsz	(??_main+0+0)&0ffh,f
  1856  000BA0  2FAC               	bra	u2227
  1857  000BA2  D7FC               	decfsz	(??_main+0+0+1)&0ffh,f
  1858  000BA4  2FAD               	bra	u2227
  1859  000BA6  D7FA               	nop
  1860  000BA8  F000               opt asmopt_pop
  1861                           
  1862                           	line	166
  1863                           	
  1864                           l2362:
  1865  000BAA                     ;main.c: 166:     M_init();
  1866                           	call	_M_init	;wreg free
  1867  000BAA  EC3F  F00A         	line	167
  1868                           	
  1869                           l2364:
  1870  000BAE                     ;main.c: 167:     LCD_string_xy(2,1,"Motor connected");
  1871                           	movlw	low(01h)
  1872  000BAE  0E01               	movlb	0	; () banked
  1873  000BB0  0100               	movwf	((LCD_string_xy@pos))&0ffh
  1874  000BB2  6FA6               		movlw	low(STR_3)
  1875  000BB4  0E52               	movwf	((LCD_string_xy@msg))&0ffh
  1876  000BB6  6FA7               	movlw	high(STR_3)
  1877  000BB8  0E7D               	movwf	((LCD_string_xy@msg+1))&0ffh
  1878  000BBA  6FA8               
  1879                           	movlw	(02h)&0ffh
  1880  000BBC  0E02               	
  1881                           	call	_LCD_string_xy
  1882  000BBE  ECAF  F009         	line	168
  1883                           	
  1884                           l2366:
  1885  000BC2                     ;main.c: 168:     BT_tx_string("Motor connected\n");
  1886                           		movlw	low(STR_4)
  1887  000BC2  0E31               	movlb	0	; () banked
  1888  000BC4  0100               	movwf	((BT_tx_string@msg))&0ffh
  1889  000BC6  6FA1               	movlw	high(STR_4)
  1890  000BC8  0E7D               	movwf	((BT_tx_string@msg+1))&0ffh
  1891  000BCA  6FA2               
  1892                           	call	_BT_tx_string	;wreg free
  1893  000BCC  EC48  F009         	line	169
  1894                           ;main.c: 169:     US_init();
  1895                           	call	_US_init	;wreg free
  1896  000BD0  EC82  F00B         	line	170
  1897                           	
  1898                           l2368:
  1899  000BD4                     ;main.c: 170:     LCD_string_xy(1,1,"US connected");
  1900                           	movlw	low(01h)
  1901  000BD4  0E01               	movlb	0	; () banked
  1902  000BD6  0100               	movwf	((LCD_string_xy@pos))&0ffh
  1903  000BD8  6FA6               		movlw	low(STR_5)
  1904  000BDA  0E9C               	movwf	((LCD_string_xy@msg))&0ffh
  1905  000BDC  6FA7               	movlw	high(STR_5)
  1906  000BDE  0E7D               	movwf	((LCD_string_xy@msg+1))&0ffh
  1907  000BE0  6FA8               
  1908                           	movlw	(01h)&0ffh
  1909  000BE2  0E01               	
  1910                           	call	_LCD_string_xy
  1911  000BE4  ECAF  F009         	line	171
  1912                           	
  1913                           l2370:
  1914  000BE8                     ;main.c: 171:     BT_tx_string("US connected\n");
  1915                           		movlw	low(STR_6)
  1916  000BE8  0E80               	movlb	0	; () banked
  1917  000BEA  0100               	movwf	((BT_tx_string@msg))&0ffh
  1918  000BEC  6FA1               	movlw	high(STR_6)
  1919  000BEE  0E7D               	movwf	((BT_tx_string@msg+1))&0ffh
  1920  000BF0  6FA2               
  1921                           	call	_BT_tx_string	;wreg free
  1922  000BF2  EC48  F009         	line	172
  1923                           	
  1924                           l2372:
  1925  000BF6                     ;main.c: 172:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1926                           	opt asmopt_push
  1927                           opt asmopt_off
  1928                           movlw  26
  1929  000BF6  0E1A               	movlb	0	; () banked
  1930  000BF8  0100               movwf	(??_main+0+0+1)&0ffh,f
  1931  000BFA  6FAD               movlw	94
  1932  000BFC  0E5E               movwf	(??_main+0+0)&0ffh,f
  1933  000BFE  6FAC               	movlw	110
  1934  000C00  0E6E               u2237:
  1935  000C02                     decfsz	wreg,f
  1936  000C02  2EE8               	bra	u2237
  1937  000C04  D7FE               	decfsz	(??_main+0+0)&0ffh,f
  1938  000C06  2FAC               	bra	u2237
  1939  000C08  D7FC               	decfsz	(??_main+0+0+1)&0ffh,f
  1940  000C0A  2FAD               	bra	u2237
  1941  000C0C  D7FA               	nop
  1942  000C0E  F000               opt asmopt_pop
  1943                           
  1944                           	line	173
  1945                           	
  1946                           l2374:
  1947  000C10                     ;main.c: 173:     LCD_command(0x01);
  1948                           	movlw	(01h)&0ffh
  1949  000C10  0E01               	
  1950                           	call	_LCD_command
  1951  000C12  EC21  F008         	line	174
  1952                           ;main.c: 174:     while(1);
  1953                           	
  1954                           l179:
  1955  000C16                     	
  1956                           l180:
  1957  000C16                     	goto	l179
  1958  000C16  EF0B  F006         	
  1959                           l181:
  1960  000C1A                     	line	176
  1961                           ;main.c: 175:     return;
  1962                           	
  1963                           l182:
  1964  000C1A                     	global	start
  1965                           	goto	start
  1966  000C1A  EF0C  F003         	opt stack 0
  1967                           GLOBAL	__end_of_main
  1968                           	__end_of_main:
  1969  000C1E                     	signat	_main,89
  1970                           	global	_US_init
  1971                           
  1972 ;; *************** function _US_init *****************
  1973 ;; Defined at:
  1974 ;;		line 289 in file "main.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;		None
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;		None
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      void 
  1981 ;; Registers used:
  1982 ;;		wreg, status,2
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1988 ;;      Params:         0       0       0       0       0       0       0
  1989 ;;      Locals:         0       0       0       0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0
  1991 ;;      Totals:         0       0       0       0       0       0       0
  1992 ;;Total ram usage:        0 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:    6
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_main
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           psect	text1,class=CODE,space=0,reloc=2,group=0
  2002                           	line	289
  2003                           global __ptext1
  2004                           __ptext1:
  2005  001704                     psect	text1
  2006                           	file	"main.c"
  2007                           	line	289
  2008                           	global	__size_of_US_init
  2009                           	__size_of_US_init	equ	__end_of_US_init-_US_init
  2010  0000                     	
  2011                           _US_init:
  2012  001704                     ;incstack = 0
  2013                           	opt	stack 24
  2014                           	line	291
  2015                           	
  2016                           l2208:
  2017  001704                     ;main.c: 291:     RBIE=1;
  2018                           	bsf	c:(32659/8),(32659)&7	;volatile
  2019  001704  86F2               	line	292
  2020                           ;main.c: 292:     RBIF=0;
  2021                           	bcf	c:(32656/8),(32656)&7	;volatile
  2022  001706  90F2               	line	293
  2023                           ;main.c: 293:     LATDbits.LD0=0;
  2024                           	bcf	((c:3980)),c,0	;volatile
  2025  001708  908C               	line	294
  2026                           ;main.c: 294:     TRISDbits.RD0=0;
  2027                           	bcf	((c:3989)),c,0	;volatile
  2028  00170A  9095               	line	295
  2029                           ;main.c: 295:     TRISDbits.RD1=1;
  2030                           	bsf	((c:3989)),c,1	;volatile
  2031  00170C  8295               	line	296
  2032                           ;main.c: 296:     TMR0ON=0;
  2033                           	bcf	c:(32431/8),(32431)&7	;volatile
  2034  00170E  9ED5               	line	297
  2035                           ;main.c: 297:     T08BIT=0;
  2036                           	bcf	c:(32430/8),(32430)&7	;volatile
  2037  001710  9CD5               	line	298
  2038                           ;main.c: 298:     T0SE=1;
  2039                           	bsf	c:(32428/8),(32428)&7	;volatile
  2040  001712  88D5               	line	299
  2041                           ;main.c: 299:     PSA=0;
  2042                           	bcf	c:(32427/8),(32427)&7	;volatile
  2043  001714  96D5               	line	300
  2044                           ;main.c: 300:     T0PS2=1;
  2045                           	bsf	c:(32426/8),(32426)&7	;volatile
  2046  001716  84D5               	line	301
  2047                           ;main.c: 301:     T0PS1=0;
  2048                           	bcf	c:(32425/8),(32425)&7	;volatile
  2049  001718  92D5               	line	302
  2050                           ;main.c: 302:     T0PS0=0;
  2051                           	bcf	c:(32424/8),(32424)&7	;volatile
  2052  00171A  90D5               	line	303
  2053                           ;main.c: 303:     T0CS=0;
  2054                           	bcf	c:(32429/8),(32429)&7	;volatile
  2055  00171C  9AD5               	line	304
  2056                           ;main.c: 304:     TMR0IF=0;
  2057                           	bcf	c:(32658/8),(32658)&7	;volatile
  2058  00171E  94F2               	line	305
  2059                           ;main.c: 305:     RBIF=0;
  2060                           	bcf	c:(32656/8),(32656)&7	;volatile
  2061  001720  90F2               	line	306
  2062                           ;main.c: 306:     GIE=1;
  2063                           	bsf	c:(32663/8),(32663)&7	;volatile
  2064  001722  8EF2               	line	307
  2065                           ;main.c: 307:     PEIE=1;
  2066                           	bsf	c:(32662/8),(32662)&7	;volatile
  2067  001724  8CF2               	line	308
  2068                           ;main.c: 308:     TMR0IE=1;
  2069                           	bsf	c:(32661/8),(32661)&7	;volatile
  2070  001726  8AF2               	line	309
  2071                           ;main.c: 309:     INT0IE=0;
  2072                           	bcf	c:(32660/8),(32660)&7	;volatile
  2073  001728  98F2               	line	310
  2074                           ;main.c: 310:     TMR0IF=0;
  2075                           	bcf	c:(32658/8),(32658)&7	;volatile
  2076  00172A  94F2               	line	311
  2077                           	
  2078                           l2210:
  2079  00172C                     ;main.c: 311:     TMR0=26472;
  2080                           	movlw	high(06768h)
  2081  00172C  0E67               	movwf	((c:4054+1)),c	;volatile
  2082  00172E  6ED7               	movlw	low(06768h)
  2083  001730  0E68               	movwf	((c:4054)),c	;volatile
  2084  001732  6ED6               	goto	l212
  2085  001734  EF9C  F00B         	line	312
  2086                           	
  2087                           l2212:
  2088  001738                     	line	313
  2089                           ;main.c: 312:     return;
  2090                           	
  2091                           l212:
  2092  001738                     	return	;funcret
  2093  001738  0012               	opt stack 0
  2094                           GLOBAL	__end_of_US_init
  2095                           	__end_of_US_init:
  2096  00173A                     	signat	_US_init,89
  2097                           	global	_M_init
  2098                           
  2099 ;; *************** function _M_init *****************
  2100 ;; Defined at:
  2101 ;;		line 375 in file "main.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;		None
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		wreg, status,2, status,0, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2115 ;;      Params:         0       0       0       0       0       0       0
  2116 ;;      Locals:         0       0       0       0       0       0       0
  2117 ;;      Temps:          0       0       0       0       0       0       0
  2118 ;;      Totals:         0       0       0       0       0       0       0
  2119 ;;Total ram usage:        0 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; Hardware stack levels required when called:    7
  2122 ;; This function calls:
  2123 ;;		_M_stop
  2124 ;; This function is called by:
  2125 ;;		_main
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           psect	text2,class=CODE,space=0,reloc=2,group=0
  2129                           	line	375
  2130                           global __ptext2
  2131                           __ptext2:
  2132  00147E                     psect	text2
  2133                           	file	"main.c"
  2134                           	line	375
  2135                           	global	__size_of_M_init
  2136                           	__size_of_M_init	equ	__end_of_M_init-_M_init
  2137  0000                     	
  2138                           _M_init:
  2139  00147E                     ;incstack = 0
  2140                           	opt	stack 23
  2141                           	line	377
  2142                           	
  2143                           l2204:
  2144  00147E                     ;main.c: 377:     LATDbits.LD4=0;LATDbits.LD5=0;LATDbits.LD6=1;LATDbits.LD7=0;
  2145                           	bcf	((c:3980)),c,4	;volatile
  2146  00147E  988C               	bcf	((c:3980)),c,5	;volatile
  2147  001480  9A8C               	bsf	((c:3980)),c,6	;volatile
  2148  001482  8C8C               	bcf	((c:3980)),c,7	;volatile
  2149  001484  9E8C               	line	378
  2150                           ;main.c: 378:     TRISCbits.RC2=1;TRISCbits.RC1=1;TRISDbits.RD4=0;TRISDbits.RD5=0;TRISDb
                                 its.RD6=0;TRISDbits.RD7=0;
  2151                           	bsf	((c:3988)),c,2	;volatile
  2152  001486  8494               	bsf	((c:3988)),c,1	;volatile
  2153  001488  8294               	bcf	((c:3989)),c,4	;volatile
  2154  00148A  9895               	bcf	((c:3989)),c,5	;volatile
  2155  00148C  9A95               	bcf	((c:3989)),c,6	;volatile
  2156  00148E  9C95               	bcf	((c:3989)),c,7	;volatile
  2157  001490  9E95               	line	379
  2158                           ;main.c: 379:     PR2=0xFF;
  2159                           	setf	((c:4043)),c	;volatile
  2160  001492  68CB               	line	380
  2161                           ;main.c: 380:     CCP1M3=1;
  2162                           	bsf	c:(32235/8),(32235)&7	;volatile
  2163  001494  86BD               	line	381
  2164                           ;main.c: 381:     CCP1M2=1;
  2165                           	bsf	c:(32234/8),(32234)&7	;volatile
  2166  001496  84BD               	line	382
  2167                           ;main.c: 382:     CCP1M1=0;
  2168                           	bcf	c:(32233/8),(32233)&7	;volatile
  2169  001498  92BD               	line	383
  2170                           ;main.c: 383:     CCP1M0=0;
  2171                           	bcf	c:(32232/8),(32232)&7	;volatile
  2172  00149A  90BD               	line	384
  2173                           ;main.c: 384:     CCP2M3=1;
  2174                           	bsf	c:(32211/8),(32211)&7	;volatile
  2175  00149C  86BA               	line	385
  2176                           ;main.c: 385:     CCP2M2=1;
  2177                           	bsf	c:(32210/8),(32210)&7	;volatile
  2178  00149E  84BA               	line	386
  2179                           ;main.c: 386:     CCP2M1=0;
  2180                           	bcf	c:(32209/8),(32209)&7	;volatile
  2181  0014A0  92BA               	line	387
  2182                           ;main.c: 387:     CCP2M0=0;
  2183                           	bcf	c:(32208/8),(32208)&7	;volatile
  2184  0014A2  90BA               	line	388
  2185                           ;main.c: 388:     CCPR1L=0xFF;
  2186                           	setf	((c:4030)),c	;volatile
  2187  0014A4  68BE               	line	389
  2188                           ;main.c: 389:     DC1B1=1;
  2189                           	bsf	c:(32237/8),(32237)&7	;volatile
  2190  0014A6  8ABD               	line	390
  2191                           ;main.c: 390:     DC1B0=1;
  2192                           	bsf	c:(32236/8),(32236)&7	;volatile
  2193  0014A8  88BD               	line	391
  2194                           ;main.c: 391:     CCPR2L=0xFF;
  2195                           	setf	((c:4027)),c	;volatile
  2196  0014AA  68BB               	line	392
  2197                           ;main.c: 392:     DC2B1=1;
  2198                           	bsf	c:(32213/8),(32213)&7	;volatile
  2199  0014AC  8ABA               	line	393
  2200                           ;main.c: 393:     DC2B0=1;
  2201                           	bsf	c:(32212/8),(32212)&7	;volatile
  2202  0014AE  88BA               	line	394
  2203                           ;main.c: 394:     TMR2IF=0;
  2204                           	bcf	c:(31985/8),(31985)&7	;volatile
  2205  0014B0  929E               	line	395
  2206                           ;main.c: 395:     T2CKPS1=1;
  2207                           	bsf	c:(32337/8),(32337)&7	;volatile
  2208  0014B2  82CA               	line	396
  2209                           ;main.c: 396:     T2CKPS0=1;
  2210                           	bsf	c:(32336/8),(32336)&7	;volatile
  2211  0014B4  80CA               	line	397
  2212                           ;main.c: 397:     TMR2ON=1;
  2213                           	bsf	c:(32338/8),(32338)&7	;volatile
  2214  0014B6  84CA               	line	398
  2215                           ;main.c: 398:     while(!TMR2IF);
  2216                           	goto	l236
  2217  0014B8  EF5E  F00A         	
  2218                           l237:
  2219  0014BC                     	
  2220                           l236:
  2221  0014BC                     	btfss	c:(31985/8),(31985)&7	;volatile
  2222  0014BC  A29E               	goto	u1541
  2223  0014BE  EF63  F00A         	goto	u1540
  2224  0014C2  EF65  F00A         u1541:
  2225  0014C6                     	goto	l236
  2226  0014C6  EF5E  F00A         u1540:
  2227  0014CA                     	
  2228                           l238:
  2229  0014CA                     	line	399
  2230                           ;main.c: 399:     TRISCbits.RC2=0;TRISCbits.RC1=0;
  2231                           	bcf	((c:3988)),c,2	;volatile
  2232  0014CA  9494               	bcf	((c:3988)),c,1	;volatile
  2233  0014CC  9294               	line	400
  2234                           	
  2235                           l2206:
  2236  0014CE                     ;main.c: 400:     M_stop();
  2237                           	call	_M_stop	;wreg free
  2238  0014CE  EC93  F00A         	line	401
  2239                           	
  2240                           l239:
  2241  0014D2                     	return	;funcret
  2242  0014D2  0012               	opt stack 0
  2243                           GLOBAL	__end_of_M_init
  2244                           	__end_of_M_init:
  2245  0014D4                     	signat	_M_init,89
  2246                           	global	_M_stop
  2247                           
  2248 ;; *************** function _M_stop *****************
  2249 ;; Defined at:
  2250 ;;		line 447 in file "main.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;		None
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, status,2, status,0
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2264 ;;      Params:         0       0       0       0       0       0       0
  2265 ;;      Locals:         0       0       0       0       0       0       0
  2266 ;;      Temps:          0       0       0       0       0       0       0
  2267 ;;      Totals:         0       0       0       0       0       0       0
  2268 ;;Total ram usage:        0 bytes
  2269 ;; Hardware stack levels used:    1
  2270 ;; Hardware stack levels required when called:    6
  2271 ;; This function calls:
  2272 ;;		Nothing
  2273 ;; This function is called by:
  2274 ;;		_M_init
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           psect	text3,class=CODE,space=0,reloc=2,group=0
  2278                           	line	447
  2279                           global __ptext3
  2280                           __ptext3:
  2281  001526                     psect	text3
  2282                           	file	"main.c"
  2283                           	line	447
  2284                           	global	__size_of_M_stop
  2285                           	__size_of_M_stop	equ	__end_of_M_stop-_M_stop
  2286  0000                     	
  2287                           _M_stop:
  2288  001526                     ;incstack = 0
  2289                           	opt	stack 23
  2290                           	line	449
  2291                           	
  2292                           l2074:
  2293  001526                     ;main.c: 449:     LATDbits.LD4=0;LATDbits.LD6=0;LATDbits.LD5=0;LATDbits.LD7=0;
  2294                           	bcf	((c:3980)),c,4	;volatile
  2295  001526  988C               	bcf	((c:3980)),c,6	;volatile
  2296  001528  9C8C               	bcf	((c:3980)),c,5	;volatile
  2297  00152A  9A8C               	bcf	((c:3980)),c,7	;volatile
  2298  00152C  9E8C               	line	450
  2299                           	
  2300                           l2076:
  2301  00152E                     ;main.c: 450:     if(CCPR1L!=CCPR2L)
  2302                           	movf	((c:4027)),c,w	;volatile
  2303  00152E  50BB               xorwf	((c:4030)),c,w	;volatile
  2304  001530  18BE               	btfsc	status,2
  2305  001532  B4D8               	goto	u1351
  2306  001534  EF9E  F00A         	goto	u1350
  2307  001538  EFA0  F00A         
  2308                           u1351:
  2309  00153C                     	goto	l259
  2310  00153C  EFB6  F00A         u1350:
  2311  001540                     	line	452
  2312                           	
  2313                           l2078:
  2314  001540                     ;main.c: 451:     {;main.c: 452:         CCPR2L=CCPR1L;
  2315                           	movff	(c:4030),(c:4027)	;volatile
  2316  001540  CFBE FFBB          	line	453
  2317                           ;main.c: 453:         DC2B1=DC1B1;
  2318                           	btfsc	c:(32237/8),(32237)&7	;volatile
  2319  001544  BABD               	goto	u1361
  2320  001546  EFA7  F00A         	goto	u1360
  2321  00154A  EFAA  F00A         u1361:
  2322  00154E                     	bsf	c:(32213/8),(32213)&7	;volatile
  2323  00154E  8ABA               	goto	u1375
  2324  001550  EFAB  F00A         u1360:
  2325  001554                     	bcf	c:(32213/8),(32213)&7	;volatile
  2326  001554  9ABA               u1375:
  2327  001556                     	line	454
  2328                           ;main.c: 454:         DC2B0=DC1B0;
  2329                           	btfsc	c:(32236/8),(32236)&7	;volatile
  2330  001556  B8BD               	goto	u1381
  2331  001558  EFB0  F00A         	goto	u1380
  2332  00155C  EFB3  F00A         u1381:
  2333  001560                     	bsf	c:(32212/8),(32212)&7	;volatile
  2334  001560  88BA               	goto	u1395
  2335  001562  EFB4  F00A         u1380:
  2336  001566                     	bcf	c:(32212/8),(32212)&7	;volatile
  2337  001566  98BA               u1395:
  2338  001568                     	goto	l259
  2339  001568  EFB6  F00A         	line	455
  2340                           ;main.c: 455:     }
  2341                           	
  2342                           l258:
  2343  00156C                     	line	456
  2344                           	
  2345                           l259:
  2346  00156C                     	return	;funcret
  2347  00156C  0012               	opt stack 0
  2348                           GLOBAL	__end_of_M_stop
  2349                           	__end_of_M_stop:
  2350  00156E                     	signat	_M_stop,89
  2351                           	global	_L_init
  2352                           
  2353 ;; *************** function _L_init *****************
  2354 ;; Defined at:
  2355 ;;		line 350 in file "main.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;		None
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;		None
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		None
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2369 ;;      Params:         0       0       0       0       0       0       0
  2370 ;;      Locals:         0       0       0       0       0       0       0
  2371 ;;      Temps:          0       0       0       0       0       0       0
  2372 ;;      Totals:         0       0       0       0       0       0       0
  2373 ;;Total ram usage:        0 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    6
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		_main
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           psect	text4,class=CODE,space=0,reloc=2,group=0
  2383                           	line	350
  2384                           global __ptext4
  2385                           __ptext4:
  2386  00183C                     psect	text4
  2387                           	file	"main.c"
  2388                           	line	350
  2389                           	global	__size_of_L_init
  2390                           	__size_of_L_init	equ	__end_of_L_init-_L_init
  2391  0000                     	
  2392                           _L_init:
  2393  00183C                     ;incstack = 0
  2394                           	opt	stack 24
  2395                           	line	352
  2396                           	
  2397                           l2178:
  2398  00183C                     ;main.c: 352:     TRISCbits.RC3=0;
  2399                           	bcf	((c:3988)),c,3	;volatile
  2400  00183C  9694               	line	353
  2401                           ;main.c: 353:     TRISCbits.RC4=0;
  2402                           	bcf	((c:3988)),c,4	;volatile
  2403  00183E  9894               	line	354
  2404                           ;main.c: 354:     TRISCbits.RC5=0;
  2405                           	bcf	((c:3988)),c,5	;volatile
  2406  001840  9A94               	line	356
  2407                           ;main.c: 355:     return;
  2408                           	
  2409                           l227:
  2410  001842                     	return	;funcret
  2411  001842  0012               	opt stack 0
  2412                           GLOBAL	__end_of_L_init
  2413                           	__end_of_L_init:
  2414  001844                     	signat	_L_init,89
  2415                           	global	_LCD_string_xy
  2416                           
  2417 ;; *************** function _LCD_string_xy *****************
  2418 ;; Defined at:
  2419 ;;		line 262 in file "main.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  row             1    wreg     unsigned char 
  2422 ;;  pos             1    6[BANK0 ] unsigned char 
  2423 ;;  msg             2    7[BANK0 ] PTR const unsigned char 
  2424 ;;		 -> STR_11(5), Rx_ISR@RxMessage(32), STR_7(15), US_print_distance@dist4D(5), 
  2425 ;;		 -> STR_5(13), STR_3(16), STR_1(14), 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  row             1   10[BANK0 ] unsigned char 
  2428 ;;  location        1   11[BANK0 ] unsigned char 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2438 ;;      Params:         0       3       0       0       0       0       0
  2439 ;;      Locals:         0       2       0       0       0       0       0
  2440 ;;      Temps:          0       1       0       0       0       0       0
  2441 ;;      Totals:         0       6       0       0       0       0       0
  2442 ;;Total ram usage:        6 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; Hardware stack levels required when called:    8
  2445 ;; This function calls:
  2446 ;;		_LCD_command
  2447 ;;		_LCD_string
  2448 ;; This function is called by:
  2449 ;;		_main
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           psect	text5,class=CODE,space=0,reloc=2,group=0
  2453                           	line	262
  2454                           global __ptext5
  2455                           __ptext5:
  2456  00135E                     psect	text5
  2457                           	file	"main.c"
  2458                           	line	262
  2459                           	global	__size_of_LCD_string_xy
  2460                           	__size_of_LCD_string_xy	equ	__end_of_LCD_string_xy-_LCD_string_xy
  2461  0000                     	
  2462                           _LCD_string_xy:
  2463  00135E                     ;incstack = 0
  2464                           	opt	stack 22
  2465                           ;LCD_string_xy@row stored from wreg
  2466                           	movlb	0	; () banked
  2467  00135E  0100               	movwf	((LCD_string_xy@row))&0ffh
  2468  001360  6FAA               	line	264
  2469                           	
  2470                           l2180:
  2471  001362                     ;main.c: 262: void LCD_string_xy(char row,char pos,const char *msg);main.c: 263: {;main.
                                 c: 264:     char location=0;
  2472                           	movlw	low(0)
  2473  001362  0E00               	movlb	0	; () banked
  2474  001364  0100               	movwf	((LCD_string_xy@location))&0ffh
  2475  001366  6FAB               	line	265
  2476                           	
  2477                           l2182:; BSR set to: 0
  2478  001368                     
  2479                           ;main.c: 265:     if(row<=1)
  2480                           		movlw	02h-0
  2481  001368  0E02               	cpfslt	((LCD_string_xy@row))&0ffh
  2482  00136A  61AA               	goto	u1501
  2483  00136C  EFBA  F009         	goto	u1500
  2484  001370  EFBC  F009         
  2485                           u1501:
  2486  001374                     	goto	l2188
  2487  001374  EFC9  F009         u1500:
  2488  001378                     	line	267
  2489                           	
  2490                           l2184:; BSR set to: 0
  2491  001378                     
  2492                           ;main.c: 266:     {;main.c: 267:         location=((0x80) | ((pos) & 0x0f))-1;
  2493                           	movff	(LCD_string_xy@pos),??_LCD_string_xy+0+0
  2494  001378  C0A6  F0A9         	movlw	0Fh
  2495  00137C  0E0F               	andwf	(??_LCD_string_xy+0+0)&0ffh
  2496  00137E  17A9               	movlw	080h
  2497  001380  0E80               	iorwf	(??_LCD_string_xy+0+0)&0ffh
  2498  001382  13A9               	decf	(??_LCD_string_xy+0+0)&0ffh,w
  2499  001384  05A9               	movwf	((LCD_string_xy@location))&0ffh
  2500  001386  6FAB               	line	268
  2501                           	
  2502                           l2186:; BSR set to: 0
  2503  001388                     
  2504                           ;main.c: 268:         LCD_command(location);
  2505                           	movf	((LCD_string_xy@location))&0ffh,w
  2506  001388  51AB               	
  2507                           	call	_LCD_command
  2508  00138A  EC21  F008         	line	269
  2509                           ;main.c: 269:     }
  2510                           	goto	l2192
  2511  00138E  EFD7  F009         	line	270
  2512                           ;main.c: 270:     else
  2513                           	
  2514                           l204:
  2515  001392                     	line	272
  2516                           	
  2517                           l2188:
  2518  001392                     ;main.c: 271:     {;main.c: 272:         location=((0xC0) | ((pos) & 0x0f))-1;
  2519                           	movff	(LCD_string_xy@pos),??_LCD_string_xy+0+0
  2520  001392  C0A6  F0A9         	movlw	0Fh
  2521  001396  0E0F               	movlb	0	; () banked
  2522  001398  0100               	andwf	(??_LCD_string_xy+0+0)&0ffh
  2523  00139A  17A9               	movlw	0C0h
  2524  00139C  0EC0               	iorwf	(??_LCD_string_xy+0+0)&0ffh
  2525  00139E  13A9               	decf	(??_LCD_string_xy+0+0)&0ffh,w
  2526  0013A0  05A9               	movwf	((LCD_string_xy@location))&0ffh
  2527  0013A2  6FAB               	line	273
  2528                           	
  2529                           l2190:; BSR set to: 0
  2530  0013A4                     
  2531                           ;main.c: 273:         LCD_command(location);
  2532                           	movf	((LCD_string_xy@location))&0ffh,w
  2533  0013A4  51AB               	
  2534                           	call	_LCD_command
  2535  0013A6  EC21  F008         	goto	l2192
  2536  0013AA  EFD7  F009         	line	274
  2537                           ;main.c: 274:     }
  2538                           	
  2539                           l205:
  2540  0013AE                     	line	275
  2541                           	
  2542                           l2192:
  2543  0013AE                     ;main.c: 275:     LCD_string(msg);
  2544                           		movff	(LCD_string_xy@msg),(LCD_string@msg)
  2545  0013AE  C0A7  F0A3         	movff	(LCD_string_xy@msg+1),(LCD_string@msg+1)
  2546  0013B2  C0A8  F0A4         
  2547                           	call	_LCD_string	;wreg free
  2548  0013B6  EC15  F007         	goto	l206
  2549  0013BA  EFDF  F009         	line	276
  2550                           	
  2551                           l2194:
  2552  0013BE                     	line	277
  2553                           ;main.c: 276:     return;
  2554                           	
  2555                           l206:
  2556  0013BE                     	return	;funcret
  2557  0013BE  0012               	opt stack 0
  2558                           GLOBAL	__end_of_LCD_string_xy
  2559                           	__end_of_LCD_string_xy:
  2560  0013C0                     	signat	_LCD_string_xy,12409
  2561                           	global	_LCD_string
  2562                           
  2563 ;; *************** function _LCD_string *****************
  2564 ;; Defined at:
  2565 ;;		line 249 in file "main.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  msg             2    3[BANK0 ] PTR const unsigned char 
  2568 ;;		 -> STR_11(5), Rx_ISR@RxMessage(32), STR_7(15), US_print_distance@dist4D(5), 
  2569 ;;		 -> STR_5(13), STR_3(16), STR_1(14), 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  i               1    5[BANK0 ] unsigned char 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  1    wreg      void 
  2574 ;; Registers used:
  2575 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2581 ;;      Params:         0       2       0       0       0       0       0
  2582 ;;      Locals:         0       1       0       0       0       0       0
  2583 ;;      Temps:          0       0       0       0       0       0       0
  2584 ;;      Totals:         0       3       0       0       0       0       0
  2585 ;;Total ram usage:        3 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:    7
  2588 ;; This function calls:
  2589 ;;		_LCD_char
  2590 ;;		_LCD_command
  2591 ;; This function is called by:
  2592 ;;		_LCD_string_xy
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           psect	text6,class=CODE,space=0,reloc=2,group=0
  2596                           	line	249
  2597                           global __ptext6
  2598                           __ptext6:
  2599  000E2A                     psect	text6
  2600                           	file	"main.c"
  2601                           	line	249
  2602                           	global	__size_of_LCD_string
  2603                           	__size_of_LCD_string	equ	__end_of_LCD_string-_LCD_string
  2604  0000                     	
  2605                           _LCD_string:
  2606  000E2A                     ;incstack = 0
  2607                           	opt	stack 22
  2608                           	line	251
  2609                           	
  2610                           l2044:
  2611  000E2A                     ;main.c: 249: void LCD_string(const char *msg);main.c: 250: {;main.c: 251:     unsigned 
                                 char i=0;
  2612                           	movlw	low(0)
  2613  000E2A  0E00               	movlb	0	; () banked
  2614  000E2C  0100               	movwf	((LCD_string@i))&0ffh
  2615  000E2E  6FA5               	line	252
  2616                           ;main.c: 252:     while((*msg)!=0)
  2617                           	goto	l2056
  2618  000E30  EF40  F007         	
  2619                           l198:; BSR set to: 0
  2620  000E34                     
  2621                           	line	254
  2622                           	
  2623                           l2046:
  2624  000E34                     ;main.c: 253:     {;main.c: 254:         LCD_char(*msg);
  2625                           	movff	(LCD_string@msg),tblptrl
  2626  000E34  C0A3  FFF6         	movff	(LCD_string@msg+1),tblptrh
  2627  000E38  C0A4  FFF7         	clrf	tblptru
  2628  000E3C  6AF8               	
  2629                           	movlw	high __ramtop-1
  2630  000E3E  0E05               	cpfsgt	tblptrh
  2631  000E40  64F7               	bra	u1317
  2632  000E42  D003               	tblrd	*
  2633  000E44  0008               	
  2634                           	movf	tablat,w
  2635  000E46  50F5               	bra	u1310
  2636  000E48  D005               u1317:
  2637  000E4A                     	movff	tblptrl,fsr0l
  2638  000E4A  CFF6 FFE9          	movff	tblptrh,fsr0h
  2639  000E4E  CFF7 FFEA          	movf	indf0,w
  2640  000E52  50EF               u1310:
  2641  000E54                     	
  2642                           	call	_LCD_char
  2643  000E54  ECE3  F007         	line	255
  2644                           	
  2645                           l2048:
  2646  000E58                     ;main.c: 255:         msg++;
  2647                           	movlb	0	; () banked
  2648  000E58  0100               	infsnz	((LCD_string@msg))&0ffh
  2649  000E5A  4BA3               	incf	((LCD_string@msg+1))&0ffh
  2650  000E5C  2BA4               	line	256
  2651                           	
  2652                           l2050:; BSR set to: 0
  2653  000E5E                     
  2654                           ;main.c: 256:         i++;
  2655                           	incf	((LCD_string@i))&0ffh
  2656  000E5E  2BA5               	line	257
  2657                           	
  2658                           l2052:; BSR set to: 0
  2659  000E60                     
  2660                           ;main.c: 257:         if(i==16) LCD_command(0xC0);
  2661                           		movlw	16
  2662  000E60  0E10               	xorwf	((LCD_string@i))&0ffh,w
  2663  000E62  19A5               	btfss	status,2
  2664  000E64  A4D8               	goto	u1321
  2665  000E66  EF37  F007         	goto	u1320
  2666  000E6A  EF39  F007         
  2667                           u1321:
  2668  000E6E                     	goto	l2056
  2669  000E6E  EF40  F007         u1320:
  2670  000E72                     	
  2671                           l2054:; BSR set to: 0
  2672  000E72                     
  2673                           	movlw	(0C0h)&0ffh
  2674  000E72  0EC0               	
  2675                           	call	_LCD_command
  2676  000E74  EC21  F008         	goto	l2056
  2677  000E78  EF40  F007         	
  2678                           l199:
  2679  000E7C                     	goto	l2056
  2680  000E7C  EF40  F007         	line	258
  2681                           ;main.c: 258:     }
  2682                           	
  2683                           l197:
  2684  000E80                     	line	252
  2685                           	
  2686                           l2056:
  2687  000E80                     ;main.c: 252:     while((*msg)!=0)
  2688                           	movff	(LCD_string@msg),tblptrl
  2689  000E80  C0A3  FFF6         	movff	(LCD_string@msg+1),tblptrh
  2690  000E84  C0A4  FFF7         	clrf	tblptru
  2691  000E88  6AF8               	
  2692                           	movlw	high __ramtop-1
  2693  000E8A  0E05               	cpfsgt	tblptrh
  2694  000E8C  64F7               	bra	u1337
  2695  000E8E  D003               	tblrd	*
  2696  000E90  0008               	
  2697                           	movf	tablat,w
  2698  000E92  50F5               	bra	u1330
  2699  000E94  D005               u1337:
  2700  000E96                     	movff	tblptrl,fsr0l
  2701  000E96  CFF6 FFE9          	movff	tblptrh,fsr0h
  2702  000E9A  CFF7 FFEA          	movf	indf0,w
  2703  000E9E  50EF               u1330:
  2704  000EA0                     	iorlw	0
  2705  000EA0  0900               	btfss	status,2
  2706  000EA2  A4D8               	goto	u1341
  2707  000EA4  EF56  F007         	goto	u1340
  2708  000EA8  EF58  F007         u1341:
  2709  000EAC                     	goto	l2046
  2710  000EAC  EF1A  F007         u1340:
  2711  000EB0                     	goto	l201
  2712  000EB0  EF5A  F007         	
  2713                           l200:
  2714  000EB4                     	line	260
  2715                           ;main.c: 259:     return;
  2716                           	
  2717                           l201:
  2718  000EB4                     	return	;funcret
  2719  000EB4  0012               	opt stack 0
  2720                           GLOBAL	__end_of_LCD_string
  2721                           	__end_of_LCD_string:
  2722  000EB6                     	signat	_LCD_string,4217
  2723                           	global	_LCD_char
  2724                           
  2725 ;; *************** function _LCD_char *****************
  2726 ;; Defined at:
  2727 ;;		line 228 in file "main.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  dat             1    wreg     unsigned char 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  dat             1    2[BANK0 ] unsigned char 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      void 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2741 ;;      Params:         0       0       0       0       0       0       0
  2742 ;;      Locals:         0       1       0       0       0       0       0
  2743 ;;      Temps:          0       2       0       0       0       0       0
  2744 ;;      Totals:         0       3       0       0       0       0       0
  2745 ;;Total ram usage:        3 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    6
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_LCD_string
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           psect	text7,class=CODE,space=0,reloc=2,group=0
  2755                           	line	228
  2756                           global __ptext7
  2757                           __ptext7:
  2758  000FC6                     psect	text7
  2759                           	file	"main.c"
  2760                           	line	228
  2761                           	global	__size_of_LCD_char
  2762                           	__size_of_LCD_char	equ	__end_of_LCD_char-_LCD_char
  2763  0000                     	
  2764                           _LCD_char:
  2765  000FC6                     ;incstack = 0
  2766                           	opt	stack 22
  2767                           ;LCD_char@dat stored from wreg
  2768                           	movlb	0	; () banked
  2769  000FC6  0100               	movwf	((LCD_char@dat))&0ffh
  2770  000FC8  6FA2               	line	230
  2771                           	
  2772                           l1950:
  2773  000FCA                     ;main.c: 228: void LCD_char(unsigned char dat);main.c: 229: {;main.c: 230:     nibble=da
                                 t;
  2774                           	movff	(LCD_char@dat),(c:_nibble)	;volatile
  2775  000FCA  C0A2  F067         	line	231
  2776                           	
  2777                           l1952:
  2778  000FCE                     ;main.c: 231:     LATB = (0xF0 & nibble)>>2;
  2779                           	rrncf	((c:_nibble)),c,w	;volatile
  2780  000FCE  4067               	rrncf	wreg
  2781  000FD0  42E8               	andlw	(0ffh shr 2) & 0ffh
  2782  000FD2  0B3F               	andlw	low(03Ch)
  2783  000FD4  0B3C               	movwf	((c:3978)),c	;volatile
  2784  000FD6  6E8A               	line	232
  2785                           	
  2786                           l1954:
  2787  000FD8                     ;main.c: 232:     LATBbits.LB0 = 1;
  2788                           	bsf	((c:3978)),c,0	;volatile
  2789  000FD8  808A               	line	233
  2790                           	
  2791                           l1956:
  2792  000FDA                     ;main.c: 233:     __nop();
  2793                           	opt	asmopt_push
  2794                           	opt	asmopt_off
  2795                           	nop
  2796  000FDA  F000               	opt	asmopt_pop
  2797                           	line	234
  2798                           	
  2799                           l1958:
  2800  000FDC                     ;main.c: 234:     LATBbits.LB1 = 1;
  2801                           	bsf	((c:3978)),c,1	;volatile
  2802  000FDC  828A               	line	235
  2803                           	
  2804                           l1960:
  2805  000FDE                     ;main.c: 235:     __nop();
  2806                           	opt	asmopt_push
  2807                           	opt	asmopt_off
  2808                           	nop
  2809  000FDE  F000               	opt	asmopt_pop
  2810                           	line	236
  2811                           	
  2812                           l1962:
  2813  000FE0                     ;main.c: 236:     LATBbits.LB1 = 0;
  2814                           	bcf	((c:3978)),c,1	;volatile
  2815  000FE0  928A               	line	237
  2816                           	
  2817                           l1964:
  2818  000FE2                     ;main.c: 237:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2819                           	opt asmopt_push
  2820                           opt asmopt_off
  2821                           movlw	7
  2822  000FE2  0E07               	movlb	0	; () banked
  2823  000FE4  0100               movwf	(??_LCD_char+0+0)&0ffh,f
  2824  000FE6  6FA0               	movlw	125
  2825  000FE8  0E7D               u2247:
  2826  000FEA                     decfsz	wreg,f
  2827  000FEA  2EE8               	bra	u2247
  2828  000FEC  D7FE               	decfsz	(??_LCD_char+0+0)&0ffh,f
  2829  000FEE  2FA0               	bra	u2247
  2830  000FF0  D7FC               opt asmopt_pop
  2831                           
  2832                           	line	238
  2833                           	
  2834                           l1966:
  2835  000FF2                     ;main.c: 238:     nibble=dat;
  2836                           	movff	(LCD_char@dat),(c:_nibble)	;volatile
  2837  000FF2  C0A2  F067         	line	239
  2838                           ;main.c: 239:     LATB = (nibble<<4)>>2;
  2839                           	movf	((c:_nibble)),c,w	;volatile
  2840  000FF6  5067               	movlb	0	; () banked
  2841  000FF8  0100               	movwf	(??_LCD_char+0+0)&0ffh
  2842  000FFA  6FA0               	clrf	(??_LCD_char+0+0+1)&0ffh
  2843  000FFC  6BA1               
  2844                           	swapf	(??_LCD_char+0+0)&0ffh
  2845  000FFE  3BA0               	swapf	(??_LCD_char+0+1)&0ffh
  2846  001000  3BA1               	movlw	0f0h
  2847  001002  0EF0               	andwf	(??_LCD_char+0+1)&0ffh
  2848  001004  17A1               	movf	(??_LCD_char+0+0)&0ffh,w
  2849  001006  51A0               	andlw	0fh
  2850  001008  0B0F               	iorwf	(??_LCD_char+0+1)&0ffh
  2851  00100A  13A1               	movlw	0f0h
  2852  00100C  0EF0               	andwf	(??_LCD_char+0+0)&0ffh
  2853  00100E  17A0               	rlcf	(??_LCD_char+0+1)&0ffh,w
  2854  001010  35A1               	rrcf	(??_LCD_char+0+1)&0ffh
  2855  001012  33A1               	rrcf	(??_LCD_char+0+0)&0ffh
  2856  001014  33A0               	rlcf	(??_LCD_char+0+1)&0ffh,w
  2857  001016  35A1               	rrcf	(??_LCD_char+0+1)&0ffh
  2858  001018  33A1               	rrcf	(??_LCD_char+0+0)&0ffh
  2859  00101A  33A0               	movf	(??_LCD_char+0+0)&0ffh,w
  2860  00101C  51A0               	movwf	((c:3978)),c	;volatile
  2861  00101E  6E8A               	line	240
  2862                           	
  2863                           l1968:; BSR set to: 0
  2864  001020                     
  2865                           ;main.c: 240:     LATBbits.LB0=1;
  2866                           	bsf	((c:3978)),c,0	;volatile
  2867  001020  808A               	line	241
  2868                           	
  2869                           l1970:; BSR set to: 0
  2870  001022                     
  2871                           ;main.c: 241:     __nop();
  2872                           	opt	asmopt_push
  2873                           	opt	asmopt_off
  2874                           	nop
  2875  001022  F000               	opt	asmopt_pop
  2876                           	line	242
  2877                           	
  2878                           l1972:
  2879  001024                     ;main.c: 242:     LATBbits.LB1 = 1;
  2880                           	bsf	((c:3978)),c,1	;volatile
  2881  001024  828A               	line	243
  2882                           	
  2883                           l1974:
  2884  001026                     ;main.c: 243:     __nop();
  2885                           	opt	asmopt_push
  2886                           	opt	asmopt_off
  2887                           	nop
  2888  001026  F000               	opt	asmopt_pop
  2889                           	line	244
  2890                           	
  2891                           l1976:
  2892  001028                     ;main.c: 244:     LATBbits.LB1 = 0;
  2893                           	bcf	((c:3978)),c,1	;volatile
  2894  001028  928A               	line	245
  2895                           	
  2896                           l1978:
  2897  00102A                     ;main.c: 245:     _delay((unsigned long)((2)*(20000000/4000.0)));
  2898                           	opt asmopt_push
  2899                           opt asmopt_off
  2900                           movlw	13
  2901  00102A  0E0D               	movlb	0	; () banked
  2902  00102C  0100               movwf	(??_LCD_char+0+0)&0ffh,f
  2903  00102E  6FA0               	movlw	251
  2904  001030  0EFB               u2257:
  2905  001032                     decfsz	wreg,f
  2906  001032  2EE8               	bra	u2257
  2907  001034  D7FE               	decfsz	(??_LCD_char+0+0)&0ffh,f
  2908  001036  2FA0               	bra	u2257
  2909  001038  D7FC               	nop2
  2910  00103A  D000               opt asmopt_pop
  2911                           
  2912                           	goto	l194
  2913  00103C  EF20  F008         	line	246
  2914                           	
  2915                           l1980:
  2916  001040                     	line	247
  2917                           ;main.c: 246:     return;
  2918                           	
  2919                           l194:
  2920  001040                     	return	;funcret
  2921  001040  0012               	opt stack 0
  2922                           GLOBAL	__end_of_LCD_char
  2923                           	__end_of_LCD_char:
  2924  001042                     	signat	_LCD_char,4217
  2925                           	global	_LCD_init
  2926                           
  2927 ;; *************** function _LCD_init *****************
  2928 ;; Defined at:
  2929 ;;		line 179 in file "main.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;		None
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;		None
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  1    wreg      void 
  2936 ;; Registers used:
  2937 ;;		wreg, status,2, status,0, cstack
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2943 ;;      Params:         0       0       0       0       0       0       0
  2944 ;;      Locals:         0       0       0       0       0       0       0
  2945 ;;      Temps:          0       2       0       0       0       0       0
  2946 ;;      Totals:         0       2       0       0       0       0       0
  2947 ;;Total ram usage:        2 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    7
  2950 ;; This function calls:
  2951 ;;		_LCD_command
  2952 ;;		_LCD_hcommand
  2953 ;; This function is called by:
  2954 ;;		_main
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           psect	text8,class=CODE,space=0,reloc=2,group=0
  2958                           	line	179
  2959                           global __ptext8
  2960                           __ptext8:
  2961  0014D4                     psect	text8
  2962                           	file	"main.c"
  2963                           	line	179
  2964                           	global	__size_of_LCD_init
  2965                           	__size_of_LCD_init	equ	__end_of_LCD_init-_LCD_init
  2966  0000                     	
  2967                           _LCD_init:
  2968  0014D4                     ;incstack = 0
  2969                           	opt	stack 23
  2970                           	line	181
  2971                           	
  2972                           l2158:
  2973  0014D4                     ;main.c: 181:     LATB=0x00;
  2974                           	movlw	low(0)
  2975  0014D4  0E00               	movwf	((c:3978)),c	;volatile
  2976  0014D6  6E8A               	line	182
  2977                           ;main.c: 182:     TRISB=0x00;
  2978                           	movlw	low(0)
  2979  0014D8  0E00               	movwf	((c:3987)),c	;volatile
  2980  0014DA  6E93               	line	183
  2981                           	
  2982                           l2160:
  2983  0014DC                     ;main.c: 183:     _delay((unsigned long)((50)*(20000000/4000.0)));
  2984                           	opt asmopt_push
  2985                           opt asmopt_off
  2986                           movlw  2
  2987  0014DC  0E02               	movlb	0	; () banked
  2988  0014DE  0100               movwf	(??_LCD_init+0+0+1)&0ffh,f
  2989  0014E0  6FA4               movlw	69
  2990  0014E2  0E45               movwf	(??_LCD_init+0+0)&0ffh,f
  2991  0014E4  6FA3               	movlw	169
  2992  0014E6  0EA9               u2267:
  2993  0014E8                     decfsz	wreg,f
  2994  0014E8  2EE8               	bra	u2267
  2995  0014EA  D7FE               	decfsz	(??_LCD_init+0+0)&0ffh,f
  2996  0014EC  2FA3               	bra	u2267
  2997  0014EE  D7FC               	decfsz	(??_LCD_init+0+0+1)&0ffh,f
  2998  0014F0  2FA4               	bra	u2267
  2999  0014F2  D7FA               	nop2
  3000  0014F4  D000               opt asmopt_pop
  3001                           
  3002                           	line	184
  3003                           	
  3004                           l2162:
  3005  0014F6                     ;main.c: 184:     LCD_hcommand(0x30);
  3006                           	movlw	(030h)&0ffh
  3007  0014F6  0E30               	
  3008                           	call	_LCD_hcommand
  3009  0014F8  EC9D  F00B         	line	185
  3010                           	
  3011                           l2164:
  3012  0014FC                     ;main.c: 185:     LCD_command(0x28);
  3013                           	movlw	(028h)&0ffh
  3014  0014FC  0E28               	
  3015                           	call	_LCD_command
  3016  0014FE  EC21  F008         	line	186
  3017                           	
  3018                           l2166:
  3019  001502                     ;main.c: 186:     LCD_command(0x28);
  3020                           	movlw	(028h)&0ffh
  3021  001502  0E28               	
  3022                           	call	_LCD_command
  3023  001504  EC21  F008         	line	187
  3024                           	
  3025                           l2168:
  3026  001508                     ;main.c: 187:     LCD_command(0x0C);
  3027                           	movlw	(0Ch)&0ffh
  3028  001508  0E0C               	
  3029                           	call	_LCD_command
  3030  00150A  EC21  F008         	line	188
  3031                           	
  3032                           l2170:
  3033  00150E                     ;main.c: 188:     LCD_command(0x01);
  3034                           	movlw	(01h)&0ffh
  3035  00150E  0E01               	
  3036                           	call	_LCD_command
  3037  001510  EC21  F008         	line	189
  3038                           	
  3039                           l2172:
  3040  001514                     ;main.c: 189:     LCD_command(0x06);
  3041                           	movlw	(06h)&0ffh
  3042  001514  0E06               	
  3043                           	call	_LCD_command
  3044  001516  EC21  F008         	line	190
  3045                           	
  3046                           l2174:
  3047  00151A                     ;main.c: 190:     LCD_command(0x02);
  3048                           	movlw	(02h)&0ffh
  3049  00151A  0E02               	
  3050                           	call	_LCD_command
  3051  00151C  EC21  F008         	goto	l185
  3052  001520  EF92  F00A         	line	191
  3053                           	
  3054                           l2176:
  3055  001524                     	line	192
  3056                           ;main.c: 191:     return;
  3057                           	
  3058                           l185:
  3059  001524                     	return	;funcret
  3060  001524  0012               	opt stack 0
  3061                           GLOBAL	__end_of_LCD_init
  3062                           	__end_of_LCD_init:
  3063  001526                     	signat	_LCD_init,89
  3064                           	global	_LCD_hcommand
  3065                           
  3066 ;; *************** function _LCD_hcommand *****************
  3067 ;; Defined at:
  3068 ;;		line 194 in file "main.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  cmd             1    wreg     unsigned char 
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  cmd             1    1[BANK0 ] unsigned char 
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2, status,0
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3082 ;;      Params:         0       0       0       0       0       0       0
  3083 ;;      Locals:         0       1       0       0       0       0       0
  3084 ;;      Temps:          0       1       0       0       0       0       0
  3085 ;;      Totals:         0       2       0       0       0       0       0
  3086 ;;Total ram usage:        2 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; Hardware stack levels required when called:    6
  3089 ;; This function calls:
  3090 ;;		Nothing
  3091 ;; This function is called by:
  3092 ;;		_LCD_init
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           psect	text9,class=CODE,space=0,reloc=2,group=0
  3096                           	line	194
  3097                           global __ptext9
  3098                           __ptext9:
  3099  00173A                     psect	text9
  3100                           	file	"main.c"
  3101                           	line	194
  3102                           	global	__size_of_LCD_hcommand
  3103                           	__size_of_LCD_hcommand	equ	__end_of_LCD_hcommand-_LCD_hcommand
  3104  0000                     	
  3105                           _LCD_hcommand:
  3106  00173A                     ;incstack = 0
  3107                           	opt	stack 23
  3108                           ;LCD_hcommand@cmd stored from wreg
  3109                           	movlb	0	; () banked
  3110  00173A  0100               	movwf	((LCD_hcommand@cmd))&0ffh
  3111  00173C  6FA1               	line	196
  3112                           	
  3113                           l2026:
  3114  00173E                     ;main.c: 194: void LCD_hcommand(unsigned char cmd );main.c: 195: {;main.c: 196:     nibb
                                 le=cmd;
  3115                           	movff	(LCD_hcommand@cmd),(c:_nibble)	;volatile
  3116  00173E  C0A1  F067         	line	197
  3117                           	
  3118                           l2028:
  3119  001742                     ;main.c: 197:     LATB = (0xF0 & nibble)>>2;
  3120                           	rrncf	((c:_nibble)),c,w	;volatile
  3121  001742  4067               	rrncf	wreg
  3122  001744  42E8               	andlw	(0ffh shr 2) & 0ffh
  3123  001746  0B3F               	andlw	low(03Ch)
  3124  001748  0B3C               	movwf	((c:3978)),c	;volatile
  3125  00174A  6E8A               	line	198
  3126                           	
  3127                           l2030:
  3128  00174C                     ;main.c: 198:     LATBbits.LB0 = 0;
  3129                           	bcf	((c:3978)),c,0	;volatile
  3130  00174C  908A               	line	199
  3131                           	
  3132                           l2032:
  3133  00174E                     ;main.c: 199:     __nop();
  3134                           	opt	asmopt_push
  3135                           	opt	asmopt_off
  3136                           	nop
  3137  00174E  F000               	opt	asmopt_pop
  3138                           	line	200
  3139                           	
  3140                           l2034:
  3141  001750                     ;main.c: 200:     LATBbits.LB1 = 1;
  3142                           	bsf	((c:3978)),c,1	;volatile
  3143  001750  828A               	line	201
  3144                           	
  3145                           l2036:
  3146  001752                     ;main.c: 201:     __nop();
  3147                           	opt	asmopt_push
  3148                           	opt	asmopt_off
  3149                           	nop
  3150  001752  F000               	opt	asmopt_pop
  3151                           	line	202
  3152                           	
  3153                           l2038:
  3154  001754                     ;main.c: 202:     LATBbits.LB1 = 0;
  3155                           	bcf	((c:3978)),c,1	;volatile
  3156  001754  928A               	line	203
  3157                           	
  3158                           l2040:
  3159  001756                     ;main.c: 203:     _delay((unsigned long)((3)*(20000000/4000.0)));
  3160                           	opt asmopt_push
  3161                           opt asmopt_off
  3162                           movlw	20
  3163  001756  0E14               	movlb	0	; () banked
  3164  001758  0100               movwf	(??_LCD_hcommand+0+0)&0ffh,f
  3165  00175A  6FA0               	movlw	121
  3166  00175C  0E79               u2277:
  3167  00175E                     decfsz	wreg,f
  3168  00175E  2EE8               	bra	u2277
  3169  001760  D7FE               	decfsz	(??_LCD_hcommand+0+0)&0ffh,f
  3170  001762  2FA0               	bra	u2277
  3171  001764  D7FC               	nop2
  3172  001766  D000               opt asmopt_pop
  3173                           
  3174                           	goto	l188
  3175  001768  EFB6  F00B         	line	204
  3176                           	
  3177                           l2042:
  3178  00176C                     	line	205
  3179                           ;main.c: 204:     return;
  3180                           	
  3181                           l188:
  3182  00176C                     	return	;funcret
  3183  00176C  0012               	opt stack 0
  3184                           GLOBAL	__end_of_LCD_hcommand
  3185                           	__end_of_LCD_hcommand:
  3186  00176E                     	signat	_LCD_hcommand,4217
  3187                           	global	_LCD_command
  3188                           
  3189 ;; *************** function _LCD_command *****************
  3190 ;; Defined at:
  3191 ;;		line 207 in file "main.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  cmd             1    wreg     unsigned char 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  cmd             1    2[BANK0 ] unsigned char 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3205 ;;      Params:         0       0       0       0       0       0       0
  3206 ;;      Locals:         0       1       0       0       0       0       0
  3207 ;;      Temps:          0       2       0       0       0       0       0
  3208 ;;      Totals:         0       3       0       0       0       0       0
  3209 ;;Total ram usage:        3 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    6
  3212 ;; This function calls:
  3213 ;;		Nothing
  3214 ;; This function is called by:
  3215 ;;		_main
  3216 ;;		_LCD_init
  3217 ;;		_LCD_string
  3218 ;;		_LCD_string_xy
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           psect	text10,class=CODE,space=0,reloc=2,group=0
  3222                           	line	207
  3223                           global __ptext10
  3224                           __ptext10:
  3225  001042                     psect	text10
  3226                           	file	"main.c"
  3227                           	line	207
  3228                           	global	__size_of_LCD_command
  3229                           	__size_of_LCD_command	equ	__end_of_LCD_command-_LCD_command
  3230  0000                     	
  3231                           _LCD_command:
  3232  001042                     ;incstack = 0
  3233                           	opt	stack 22
  3234                           ;LCD_command@cmd stored from wreg
  3235                           	movlb	0	; () banked
  3236  001042  0100               	movwf	((LCD_command@cmd))&0ffh
  3237  001044  6FA2               	line	209
  3238                           	
  3239                           l1918:
  3240  001046                     ;main.c: 207: void LCD_command(unsigned char cmd );main.c: 208: {;main.c: 209:     nibbl
                                 e=cmd;
  3241                           	movff	(LCD_command@cmd),(c:_nibble)	;volatile
  3242  001046  C0A2  F067         	line	210
  3243                           	
  3244                           l1920:
  3245  00104A                     ;main.c: 210:     LATB = (0xF0 & nibble)>>2;
  3246                           	rrncf	((c:_nibble)),c,w	;volatile
  3247  00104A  4067               	rrncf	wreg
  3248  00104C  42E8               	andlw	(0ffh shr 2) & 0ffh
  3249  00104E  0B3F               	andlw	low(03Ch)
  3250  001050  0B3C               	movwf	((c:3978)),c	;volatile
  3251  001052  6E8A               	line	211
  3252                           	
  3253                           l1922:
  3254  001054                     ;main.c: 211:     LATBbits.LB0 = 0;
  3255                           	bcf	((c:3978)),c,0	;volatile
  3256  001054  908A               	line	212
  3257                           	
  3258                           l1924:
  3259  001056                     ;main.c: 212:     __nop();
  3260                           	opt	asmopt_push
  3261                           	opt	asmopt_off
  3262                           	nop
  3263  001056  F000               	opt	asmopt_pop
  3264                           	line	213
  3265                           	
  3266                           l1926:
  3267  001058                     ;main.c: 213:     LATBbits.LB1 = 1;
  3268                           	bsf	((c:3978)),c,1	;volatile
  3269  001058  828A               	line	214
  3270                           	
  3271                           l1928:
  3272  00105A                     ;main.c: 214:     __nop();
  3273                           	opt	asmopt_push
  3274                           	opt	asmopt_off
  3275                           	nop
  3276  00105A  F000               	opt	asmopt_pop
  3277                           	line	215
  3278                           	
  3279                           l1930:
  3280  00105C                     ;main.c: 215:     LATBbits.LB1 = 0;
  3281                           	bcf	((c:3978)),c,1	;volatile
  3282  00105C  928A               	line	216
  3283                           	
  3284                           l1932:
  3285  00105E                     ;main.c: 216:     _delay((unsigned long)((1)*(20000000/4000.0)));
  3286                           	opt asmopt_push
  3287                           opt asmopt_off
  3288                           movlw	7
  3289  00105E  0E07               	movlb	0	; () banked
  3290  001060  0100               movwf	(??_LCD_command+0+0)&0ffh,f
  3291  001062  6FA0               	movlw	125
  3292  001064  0E7D               u2287:
  3293  001066                     decfsz	wreg,f
  3294  001066  2EE8               	bra	u2287
  3295  001068  D7FE               	decfsz	(??_LCD_command+0+0)&0ffh,f
  3296  00106A  2FA0               	bra	u2287
  3297  00106C  D7FC               opt asmopt_pop
  3298                           
  3299                           	line	217
  3300                           	
  3301                           l1934:
  3302  00106E                     ;main.c: 217:     nibble=cmd;
  3303                           	movff	(LCD_command@cmd),(c:_nibble)	;volatile
  3304  00106E  C0A2  F067         	line	218
  3305                           ;main.c: 218:     LATB = (nibble<<4)>>2;
  3306                           	movf	((c:_nibble)),c,w	;volatile
  3307  001072  5067               	movlb	0	; () banked
  3308  001074  0100               	movwf	(??_LCD_command+0+0)&0ffh
  3309  001076  6FA0               	clrf	(??_LCD_command+0+0+1)&0ffh
  3310  001078  6BA1               
  3311                           	swapf	(??_LCD_command+0+0)&0ffh
  3312  00107A  3BA0               	swapf	(??_LCD_command+0+1)&0ffh
  3313  00107C  3BA1               	movlw	0f0h
  3314  00107E  0EF0               	andwf	(??_LCD_command+0+1)&0ffh
  3315  001080  17A1               	movf	(??_LCD_command+0+0)&0ffh,w
  3316  001082  51A0               	andlw	0fh
  3317  001084  0B0F               	iorwf	(??_LCD_command+0+1)&0ffh
  3318  001086  13A1               	movlw	0f0h
  3319  001088  0EF0               	andwf	(??_LCD_command+0+0)&0ffh
  3320  00108A  17A0               	rlcf	(??_LCD_command+0+1)&0ffh,w
  3321  00108C  35A1               	rrcf	(??_LCD_command+0+1)&0ffh
  3322  00108E  33A1               	rrcf	(??_LCD_command+0+0)&0ffh
  3323  001090  33A0               	rlcf	(??_LCD_command+0+1)&0ffh,w
  3324  001092  35A1               	rrcf	(??_LCD_command+0+1)&0ffh
  3325  001094  33A1               	rrcf	(??_LCD_command+0+0)&0ffh
  3326  001096  33A0               	movf	(??_LCD_command+0+0)&0ffh,w
  3327  001098  51A0               	movwf	((c:3978)),c	;volatile
  3328  00109A  6E8A               	line	219
  3329                           	
  3330                           l1936:; BSR set to: 0
  3331  00109C                     
  3332                           ;main.c: 219:     LATBbits.LB0=0;
  3333                           	bcf	((c:3978)),c,0	;volatile
  3334  00109C  908A               	line	220
  3335                           	
  3336                           l1938:; BSR set to: 0
  3337  00109E                     
  3338                           ;main.c: 220:     __nop();
  3339                           	opt	asmopt_push
  3340                           	opt	asmopt_off
  3341                           	nop
  3342  00109E  F000               	opt	asmopt_pop
  3343                           	line	221
  3344                           	
  3345                           l1940:
  3346  0010A0                     ;main.c: 221:     LATBbits.LB1 = 1;
  3347                           	bsf	((c:3978)),c,1	;volatile
  3348  0010A0  828A               	line	222
  3349                           	
  3350                           l1942:
  3351  0010A2                     ;main.c: 222:     __nop();
  3352                           	opt	asmopt_push
  3353                           	opt	asmopt_off
  3354                           	nop
  3355  0010A2  F000               	opt	asmopt_pop
  3356                           	line	223
  3357                           	
  3358                           l1944:
  3359  0010A4                     ;main.c: 223:     LATBbits.LB1 = 0;
  3360                           	bcf	((c:3978)),c,1	;volatile
  3361  0010A4  928A               	line	224
  3362                           	
  3363                           l1946:
  3364  0010A6                     ;main.c: 224:     _delay((unsigned long)((3)*(20000000/4000.0)));
  3365                           	opt asmopt_push
  3366                           opt asmopt_off
  3367                           movlw	20
  3368  0010A6  0E14               	movlb	0	; () banked
  3369  0010A8  0100               movwf	(??_LCD_command+0+0)&0ffh,f
  3370  0010AA  6FA0               	movlw	121
  3371  0010AC  0E79               u2297:
  3372  0010AE                     decfsz	wreg,f
  3373  0010AE  2EE8               	bra	u2297
  3374  0010B0  D7FE               	decfsz	(??_LCD_command+0+0)&0ffh,f
  3375  0010B2  2FA0               	bra	u2297
  3376  0010B4  D7FC               	nop2
  3377  0010B6  D000               opt asmopt_pop
  3378                           
  3379                           	goto	l191
  3380  0010B8  EF5E  F008         	line	225
  3381                           	
  3382                           l1948:
  3383  0010BC                     	line	226
  3384                           ;main.c: 225:     return;
  3385                           	
  3386                           l191:
  3387  0010BC                     	return	;funcret
  3388  0010BC  0012               	opt stack 0
  3389                           GLOBAL	__end_of_LCD_command
  3390                           	__end_of_LCD_command:
  3391  0010BE                     	signat	_LCD_command,4217
  3392                           	global	_BT_tx_string
  3393                           
  3394 ;; *************** function _BT_tx_string *****************
  3395 ;; Defined at:
  3396 ;;		line 517 in file "main.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  msg             2    1[BANK0 ] PTR const unsigned char 
  3399 ;;		 -> STR_16(16), STR_15(27), STR_14(73), STR_13(39), 
  3400 ;;		 -> STR_12(8), STR_10(17), STR_9(9), Rx_ISR@DuCyT(5), 
  3401 ;;		 -> STR_8(15), US_print_distance@dist4D(5), STR_6(14), STR_4(17), 
  3402 ;;		 -> STR_2(15), 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;		None
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  1    wreg      void 
  3407 ;; Registers used:
  3408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3414 ;;      Params:         0       2       0       0       0       0       0
  3415 ;;      Locals:         0       0       0       0       0       0       0
  3416 ;;      Temps:          0       0       0       0       0       0       0
  3417 ;;      Totals:         0       2       0       0       0       0       0
  3418 ;;Total ram usage:        2 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; Hardware stack levels required when called:    7
  3421 ;; This function calls:
  3422 ;;		_BT_tx_char
  3423 ;; This function is called by:
  3424 ;;		_main
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           psect	text11,class=CODE,space=0,reloc=2,group=0
  3428                           	line	517
  3429                           global __ptext11
  3430                           __ptext11:
  3431  001290                     psect	text11
  3432                           	file	"main.c"
  3433                           	line	517
  3434                           	global	__size_of_BT_tx_string
  3435                           	__size_of_BT_tx_string	equ	__end_of_BT_tx_string-_BT_tx_string
  3436  0000                     	
  3437                           _BT_tx_string:
  3438  001290                     ;incstack = 0
  3439                           	opt	stack 23
  3440                           	line	519
  3441                           	
  3442                           l2196:
  3443  001290                     ;main.c: 517: void BT_tx_string(const unsigned char *msg);main.c: 518: {;main.c: 519:   
                                   while((*msg)!=0)
  3444                           	goto	l2202
  3445  001290  EF61  F009         	
  3446                           l283:
  3447  001294                     	line	521
  3448                           	
  3449                           l2198:
  3450  001294                     ;main.c: 520:     {;main.c: 521:         BT_tx_char(*msg);
  3451                           	movff	(BT_tx_string@msg),tblptrl
  3452  001294  C0A1  FFF6         	movff	(BT_tx_string@msg+1),tblptrh
  3453  001298  C0A2  FFF7         	clrf	tblptru
  3454  00129C  6AF8               	
  3455                           	movlw	high __ramtop-1
  3456  00129E  0E05               	cpfsgt	tblptrh
  3457  0012A0  64F7               	bra	u1517
  3458  0012A2  D003               	tblrd	*
  3459  0012A4  0008               	
  3460                           	movf	tablat,w
  3461  0012A6  50F5               	bra	u1510
  3462  0012A8  D005               u1517:
  3463  0012AA                     	movff	tblptrl,fsr0l
  3464  0012AA  CFF6 FFE9          	movff	tblptrh,fsr0h
  3465  0012AE  CFF7 FFEA          	movf	indf0,w
  3466  0012B2  50EF               u1510:
  3467  0012B4                     	
  3468                           	call	_BT_tx_char
  3469  0012B4  ECF9  F00B         	line	522
  3470                           	
  3471                           l2200:
  3472  0012B8                     ;main.c: 522:  msg++;
  3473                           	movlb	0	; () banked
  3474  0012B8  0100               	infsnz	((BT_tx_string@msg))&0ffh
  3475  0012BA  4BA1               	incf	((BT_tx_string@msg+1))&0ffh
  3476  0012BC  2BA2               	goto	l2202
  3477  0012BE  EF61  F009         	line	523
  3478                           ;main.c: 523:     }
  3479                           	
  3480                           l282:; BSR set to: 0
  3481  0012C2                     
  3482                           	line	519
  3483                           	
  3484                           l2202:
  3485  0012C2                     ;main.c: 519:     while((*msg)!=0)
  3486                           	movff	(BT_tx_string@msg),tblptrl
  3487  0012C2  C0A1  FFF6         	movff	(BT_tx_string@msg+1),tblptrh
  3488  0012C6  C0A2  FFF7         	clrf	tblptru
  3489  0012CA  6AF8               	
  3490                           	movlw	high __ramtop-1
  3491  0012CC  0E05               	cpfsgt	tblptrh
  3492  0012CE  64F7               	bra	u1527
  3493  0012D0  D003               	tblrd	*
  3494  0012D2  0008               	
  3495                           	movf	tablat,w
  3496  0012D4  50F5               	bra	u1520
  3497  0012D6  D005               u1527:
  3498  0012D8                     	movff	tblptrl,fsr0l
  3499  0012D8  CFF6 FFE9          	movff	tblptrh,fsr0h
  3500  0012DC  CFF7 FFEA          	movf	indf0,w
  3501  0012E0  50EF               u1520:
  3502  0012E2                     	iorlw	0
  3503  0012E2  0900               	btfss	status,2
  3504  0012E4  A4D8               	goto	u1531
  3505  0012E6  EF77  F009         	goto	u1530
  3506  0012EA  EF79  F009         u1531:
  3507  0012EE                     	goto	l2198
  3508  0012EE  EF4A  F009         u1530:
  3509  0012F2                     	goto	l285
  3510  0012F2  EF7B  F009         	
  3511                           l284:
  3512  0012F6                     	line	525
  3513                           ;main.c: 524:     return;
  3514                           	
  3515                           l285:
  3516  0012F6                     	return	;funcret
  3517  0012F6  0012               	opt stack 0
  3518                           GLOBAL	__end_of_BT_tx_string
  3519                           	__end_of_BT_tx_string:
  3520  0012F8                     	signat	_BT_tx_string,4217
  3521                           	global	_BT_tx_char
  3522                           
  3523 ;; *************** function _BT_tx_char *****************
  3524 ;; Defined at:
  3525 ;;		line 511 in file "main.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  Tx              1    wreg     unsigned char 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  Tx              1    0[BANK0 ] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3539 ;;      Params:         0       0       0       0       0       0       0
  3540 ;;      Locals:         0       1       0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0
  3542 ;;      Totals:         0       1       0       0       0       0       0
  3543 ;;Total ram usage:        1 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    6
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_main
  3550 ;;		_BT_tx_string
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           psect	text12,class=CODE,space=0,reloc=2,group=0
  3554                           	line	511
  3555                           global __ptext12
  3556                           __ptext12:
  3557  0017F2                     psect	text12
  3558                           	file	"main.c"
  3559                           	line	511
  3560                           	global	__size_of_BT_tx_char
  3561                           	__size_of_BT_tx_char	equ	__end_of_BT_tx_char-_BT_tx_char
  3562  0000                     	
  3563                           _BT_tx_char:
  3564  0017F2                     ;incstack = 0
  3565                           	opt	stack 23
  3566                           ;BT_tx_char@Tx stored from wreg
  3567                           	movlb	0	; () banked
  3568  0017F2  0100               	movwf	((BT_tx_char@Tx))&0ffh
  3569  0017F4  6FA0               	line	513
  3570                           	
  3571                           l2022:
  3572  0017F6                     ;main.c: 511: void BT_tx_char(unsigned char Tx);main.c: 512: {;main.c: 513:     while(!T
                                 XIF);
  3573                           	goto	l276
  3574  0017F6  EFFD  F00B         	
  3575                           l277:
  3576  0017FA                     	
  3577                           l276:
  3578  0017FA                     	btfss	c:(31988/8),(31988)&7	;volatile
  3579  0017FA  A89E               	goto	u1301
  3580  0017FC  EF02  F00C         	goto	u1300
  3581  001800  EF04  F00C         u1301:
  3582  001804                     	goto	l276
  3583  001804  EFFD  F00B         u1300:
  3584  001808                     	goto	l2024
  3585  001808  EF06  F00C         	
  3586                           l278:
  3587  00180C                     	line	514
  3588                           	
  3589                           l2024:
  3590  00180C                     ;main.c: 514:     TXREG=Tx;
  3591                           	movff	(BT_tx_char@Tx),(c:4013)	;volatile
  3592  00180C  C0A0  FFAD         	line	515
  3593                           	
  3594                           l279:
  3595  001810                     	return	;funcret
  3596  001810  0012               	opt stack 0
  3597                           GLOBAL	__end_of_BT_tx_char
  3598                           	__end_of_BT_tx_char:
  3599  001812                     	signat	_BT_tx_char,4217
  3600                           	global	_BT_init
  3601                           
  3602 ;; *************** function _BT_init *****************
  3603 ;; Defined at:
  3604 ;;		line 485 in file "main.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;		None
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;		None
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg, status,2
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3618 ;;      Params:         0       0       0       0       0       0       0
  3619 ;;      Locals:         0       0       0       0       0       0       0
  3620 ;;      Temps:          0       0       0       0       0       0       0
  3621 ;;      Totals:         0       0       0       0       0       0       0
  3622 ;;Total ram usage:        0 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; Hardware stack levels required when called:    6
  3625 ;; This function calls:
  3626 ;;		Nothing
  3627 ;; This function is called by:
  3628 ;;		_main
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           psect	text13,class=CODE,space=0,reloc=2,group=0
  3632                           	line	485
  3633                           global __ptext13
  3634                           __ptext13:
  3635  0017CA                     psect	text13
  3636                           	file	"main.c"
  3637                           	line	485
  3638                           	global	__size_of_BT_init
  3639                           	__size_of_BT_init	equ	__end_of_BT_init-_BT_init
  3640  0000                     	
  3641                           _BT_init:
  3642  0017CA                     ;incstack = 0
  3643                           	opt	stack 24
  3644                           	line	487
  3645                           	
  3646                           l2148:
  3647  0017CA                     ;main.c: 487:     TRISCbits.RC6=0;
  3648                           	bcf	((c:3988)),c,6	;volatile
  3649  0017CA  9C94               	line	488
  3650                           ;main.c: 488:     TRISCbits.RC7=1;
  3651                           	bsf	((c:3988)),c,7	;volatile
  3652  0017CC  8E94               	line	490
  3653                           ;main.c: 490:     TX9=0;
  3654                           	bcf	c:(32102/8),(32102)&7	;volatile
  3655  0017CE  9CAC               	line	491
  3656                           ;main.c: 491:     TXEN=1;
  3657                           	bsf	c:(32101/8),(32101)&7	;volatile
  3658  0017D0  8AAC               	line	492
  3659                           ;main.c: 492:     SYNC=0;
  3660                           	bcf	c:(32100/8),(32100)&7	;volatile
  3661  0017D2  98AC               	line	493
  3662                           ;main.c: 493:     SENDB=0;
  3663                           	bcf	c:(32099/8),(32099)&7	;volatile
  3664  0017D4  96AC               	line	494
  3665                           ;main.c: 494:     BRGH=1;
  3666                           	bsf	c:(32098/8),(32098)&7	;volatile
  3667  0017D6  84AC               	line	496
  3668                           ;main.c: 496:     SPEN=1;
  3669                           	bsf	c:(32095/8),(32095)&7	;volatile
  3670  0017D8  8EAB               	line	497
  3671                           ;main.c: 497:     RX9=0;
  3672                           	bcf	c:(32094/8),(32094)&7	;volatile
  3673  0017DA  9CAB               	line	498
  3674                           ;main.c: 498:     CREN=1;
  3675                           	bsf	c:(32092/8),(32092)&7	;volatile
  3676  0017DC  88AB               	line	499
  3677                           ;main.c: 499:     ADDEN=1;
  3678                           	bsf	c:(32091/8),(32091)&7	;volatile
  3679  0017DE  86AB               	line	501
  3680                           ;main.c: 501:     BRG16=0;
  3681                           	bcf	c:(32195/8),(32195)&7	;volatile
  3682  0017E0  96B8               	line	502
  3683                           ;main.c: 502:     WUE=0;
  3684                           	bcf	c:(32193/8),(32193)&7	;volatile
  3685  0017E2  92B8               	line	503
  3686                           ;main.c: 503:     ABDEN=0;
  3687                           	bcf	c:(32192/8),(32192)&7	;volatile
  3688  0017E4  90B8               	line	505
  3689                           	
  3690                           l2150:
  3691  0017E6                     ;main.c: 505:     SPBRG=130;
  3692                           	movlw	low(082h)
  3693  0017E6  0E82               	movwf	((c:4015)),c	;volatile
  3694  0017E8  6EAF               	line	506
  3695                           	
  3696                           l2152:
  3697  0017EA                     ;main.c: 506:     PEIE=1;
  3698                           	bsf	c:(32662/8),(32662)&7	;volatile
  3699  0017EA  8CF2               	line	507
  3700                           	
  3701                           l2154:
  3702  0017EC                     ;main.c: 507:     RCIE=1;
  3703                           	bsf	c:(31981/8),(31981)&7	;volatile
  3704  0017EC  8A9D               	line	508
  3705                           	
  3706                           l2156:
  3707  0017EE                     ;main.c: 508:     GIE=1;
  3708                           	bsf	c:(32663/8),(32663)&7	;volatile
  3709  0017EE  8EF2               	line	509
  3710                           	
  3711                           l273:
  3712  0017F0                     	return	;funcret
  3713  0017F0  0012               	opt stack 0
  3714                           GLOBAL	__end_of_BT_init
  3715                           	__end_of_BT_init:
  3716  0017F2                     	signat	_BT_init,89
  3717                           	global	_Rx_ISR
  3718                           
  3719 ;; *************** function _Rx_ISR *****************
  3720 ;; Defined at:
  3721 ;;		line 551 in file "main.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;		None
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  RxMessage      32   53[COMRAM] unsigned char [32]
  3726 ;;  DuCyT           5   85[COMRAM] unsigned char [5]
  3727 ;;  DuCy            4   91[COMRAM] unsigned long 
  3728 ;;  motor           1   90[COMRAM] unsigned char 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      void 
  3731 ;; Registers used:
  3732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack

  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3738 ;;      Params:         0       0       0       0       0       0       0
  3739 ;;      Locals:        42       0       0       0       0       0       0
  3740 ;;      Temps:         17       0       0       0       0       0       0
  3741 ;;      Totals:        59       0       0       0       0       0       0
  3742 ;;Total ram usage:       59 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    5
  3745 ;; This function calls:
  3746 ;;		_BT_rx_string
  3747 ;;		_LCD_clear
  3748 ;;		_L_turn_off
  3749 ;;		_L_turn_on
  3750 ;;		_M_anticlockwise_direction
  3751 ;;		_M_backward_direction
  3752 ;;		_M_clockwise_direction
  3753 ;;		_M_foward_direction
  3754 ;;		_M_set_DC
  3755 ;;		_US_send_pulse
  3756 ;;		___lldiv
  3757 ;;		___lmul
  3758 ;;		_atoi4D
  3759 ;;		_itoa4D
  3760 ;;		i1_BT_tx_string
  3761 ;;		i1_LCD_string_xy
  3762 ;;		i1_M_stop
  3763 ;; This function is called by:
  3764 ;;		Interrupt level 1
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           psect	intcodelo,class=CODE,space=0,reloc=2
  3768                           global __pintcodelo
  3769                           __pintcodelo:
  3770  000018                     psect	intcodelo
  3771                           	file	"main.c"
  3772                           	line	551
  3773                           	global	__size_of_Rx_ISR
  3774                           	__size_of_Rx_ISR	equ	__end_of_Rx_ISR-_Rx_ISR
  3775  0000                     	
  3776                           _Rx_ISR:
  3777  000018                     ;incstack = 0
  3778                           	opt	stack 22
  3779                           	bsf int$flags,0,c ;set compiler interrupt flag (level 1)
  3780  000018  806A               	movff	status+0,??_Rx_ISR+2
  3781  00001A  CFD8 F027          	movff	wreg+0,??_Rx_ISR+3
  3782  00001E  CFE8 F028          	movff	bsr+0,??_Rx_ISR+4
  3783  000022  CFE0 F029          	movff	fsr0l+0,??_Rx_ISR+5
  3784  000026  CFE9 F02A          	movff	fsr0h+0,??_Rx_ISR+6
  3785  00002A  CFEA F02B          	movff	fsr1l+0,??_Rx_ISR+7
  3786  00002E  CFE1 F02C          	movff	fsr1h+0,??_Rx_ISR+8
  3787  000032  CFE2 F02D          	movff	fsr2l+0,??_Rx_ISR+9
  3788  000036  CFD9 F02E          	movff	fsr2h+0,??_Rx_ISR+10
  3789  00003A  CFDA F02F          	movff	prodl+0,??_Rx_ISR+11
  3790  00003E  CFF3 F030          	movff	prodh+0,??_Rx_ISR+12
  3791  000042  CFF4 F031          	movff	tblptrl+0,??_Rx_ISR+13
  3792  000046  CFF6 F032          	movff	tblptrh+0,??_Rx_ISR+14
  3793  00004A  CFF7 F033          	movff	tblptru+0,??_Rx_ISR+15
  3794  00004E  CFF8 F034          	movff	tablat+0,??_Rx_ISR+16
  3795  000052  CFF5 F035          	line	553
  3796                           	
  3797                           i1l2376:
  3798  000056                     ;main.c: 553:     RCIE=0;
  3799                           	bcf	c:(31981/8),(31981)&7	;volatile
  3800  000056  9A9D               	line	554
  3801                           	
  3802                           i1l2378:
  3803  000058                     ;main.c: 554:     unsigned char RxMessage[32]={},DuCyT[5]={};
  3804                           	lfsr	2,(Rx_ISR@F2577)
  3805  000058  EE20  F080         	lfsr	1,(Rx_ISR@RxMessage)
  3806  00005C  EE10  F036         	movlw	32-1
  3807  000060  0E1F               i1u208_21:
  3808  000062                     	movff	plusw2,plusw1
  3809  000062  CFDB FFE3          	decf	wreg
  3810  000066  06E8               	bc	i1u208_21
  3811  000068  E2FC               
  3812                           	lfsr	2,(Rx_ISR@F2579)
  3813  00006A  EE20  F060         	lfsr	1,(Rx_ISR@DuCyT)
  3814  00006E  EE10  F056         	movlw	5-1
  3815  000072  0E04               i1u209_21:
  3816  000074                     	movff	plusw2,plusw1
  3817  000074  CFDB FFE3          	decf	wreg
  3818  000078  06E8               	bc	i1u209_21
  3819  00007A  E2FC               
  3820                           	line	555
  3821                           	
  3822                           i1l2380:
  3823  00007C                     ;main.c: 555:     unsigned char motor=0;
  3824                           	movlw	low(0)
  3825  00007C  0E00               	movwf	((c:Rx_ISR@motor)),c
  3826  00007E  6E5B               	line	556
  3827                           	
  3828                           i1l2382:
  3829  000080                     ;main.c: 556:     unsigned long int DuCy=0;
  3830                           	movlw	low(0)
  3831  000080  0E00               	movwf	((c:Rx_ISR@DuCy)),c
  3832  000082  6E5C               	movlw	high(0)
  3833  000084  0E00               	movwf	((c:Rx_ISR@DuCy+1)),c
  3834  000086  6E5D               	movlw	low highword(0)
  3835  000088  0E00               	movwf	((c:Rx_ISR@DuCy+2)),c
  3836  00008A  6E5E               	movlw	high highword(0)
  3837  00008C  0E00               	movwf	((c:Rx_ISR@DuCy+3)),c
  3838  00008E  6E5F               	line	557
  3839                           	
  3840                           i1l2384:
  3841  000090                     ;main.c: 557:     BT_rx_string(RxMessage);
  3842                           		movlw	low(Rx_ISR@RxMessage)
  3843  000090  0E36               	movwf	((c:BT_rx_string@RxStr)),c
  3844  000092  6E01               	movlw	high(Rx_ISR@RxMessage)
  3845  000094  0E00               	movwf	((c:BT_rx_string@RxStr+1)),c
  3846  000096  6E02               
  3847                           	call	_BT_rx_string	;wreg free
  3848  000098  EC6B  F006         	line	558
  3849                           ;main.c: 558:     switch(RxMessage[0])
  3850                           	goto	i1l2506
  3851  00009C  EF7A  F002         	line	560
  3852                           ;main.c: 559:     {;main.c: 560:         case 'P':
  3853                           	
  3854                           i1l309:
  3855  0000A0                     	line	561
  3856                           	
  3857                           i1l2386:
  3858  0000A0                     ;main.c: 561:             BT_tx_string("Parking\n");
  3859                           		movlw	low(STR_9)
  3860  0000A0  0EA9               	movwf	((c:i1BT_tx_string@msg)),c
  3861  0000A2  6E02               	movlw	high(STR_9)
  3862  0000A4  0E7D               	movwf	((c:i1BT_tx_string@msg+1)),c
  3863  0000A6  6E03               
  3864                           	call	i1_BT_tx_string	;wreg free
  3865  0000A8  EC7C  F009         	line	562
  3866                           	
  3867                           i1l2388:
  3868  0000AC                     ;main.c: 562:             M_foward_direction();
  3869                           	call	_M_foward_direction	;wreg free
  3870  0000AC  ECDB  F00A         	line	563
  3871                           	
  3872                           i1l2390:
  3873  0000B0                     ;main.c: 563:             M_set_DC(60,3);
  3874                           	movlw	high(03Ch)
  3875  0000B0  0E00               	movwf	((c:M_set_DC@DutyCycle+1)),c
  3876  0000B2  6E02               	movlw	low(03Ch)
  3877  0000B4  0E3C               	movwf	((c:M_set_DC@DutyCycle)),c
  3878  0000B6  6E01               	movlw	low(03h)
  3879  0000B8  0E03               	movwf	((c:M_set_DC@motor)),c
  3880  0000BA  6E03               	call	_M_set_DC	;wreg free
  3881  0000BC  EC0E  F003         	line	564
  3882                           ;main.c: 564:             while(distance!=ParkingDistance)
  3883                           	goto	i1l2408
  3884  0000C0  EFA4  F000         	
  3885                           i1l311:
  3886  0000C4                     	line	566
  3887                           ;main.c: 565:             {;main.c: 566:                 if(RCIF)
  3888                           	btfss	c:(31989/8),(31989)&7	;volatile
  3889  0000C4  AA9E               	goto	i1u210_21
  3890  0000C6  EF67  F000         	goto	i1u210_20
  3891  0000CA  EF69  F000         i1u210_21:
  3892  0000CE                     	goto	i1l2398
  3893  0000CE  EF82  F000         i1u210_20:
  3894  0000D2                     	line	568
  3895                           	
  3896                           i1l2392:
  3897  0000D2                     ;main.c: 567:                 {;main.c: 568:                     BT_rx_string(RxMessage)
                                 ;
  3898                           		movlw	low(Rx_ISR@RxMessage)
  3899  0000D2  0E36               	movwf	((c:BT_rx_string@RxStr)),c
  3900  0000D4  6E01               	movlw	high(Rx_ISR@RxMessage)
  3901  0000D6  0E00               	movwf	((c:BT_rx_string@RxStr+1)),c
  3902  0000D8  6E02               
  3903                           	call	_BT_rx_string	;wreg free
  3904  0000DA  EC6B  F006         	line	569
  3905                           	
  3906                           i1l2394:
  3907  0000DE                     ;main.c: 569:                     if(RxMessage[0]=='S')
  3908                           		movlw	83
  3909  0000DE  0E53               	xorwf	((c:Rx_ISR@RxMessage)),c,w
  3910  0000E0  1836               	btfss	status,2
  3911  0000E2  A4D8               	goto	i1u211_21
  3912  0000E4  EF76  F000         	goto	i1u211_20
  3913  0000E8  EF78  F000         
  3914                           i1u211_21:
  3915  0000EC                     	goto	i1l2398
  3916  0000EC  EF82  F000         i1u211_20:
  3917  0000F0                     	line	571
  3918                           	
  3919                           i1l2396:
  3920  0000F0                     ;main.c: 570:                     {;main.c: 571:                         BT_tx_string("P
                                 arking stopped\n");
  3921                           		movlw	low(STR_10)
  3922  0000F0  0E20               	movwf	((c:i1BT_tx_string@msg)),c
  3923  0000F2  6E02               	movlw	high(STR_10)
  3924  0000F4  0E7D               	movwf	((c:i1BT_tx_string@msg+1)),c
  3925  0000F6  6E03               
  3926                           	call	i1_BT_tx_string	;wreg free
  3927  0000F8  EC7C  F009         	line	572
  3928                           ;main.c: 572:                         break;
  3929                           	goto	i1l2410
  3930  0000FC  EFB2  F000         	line	573
  3931                           ;main.c: 573:                     }
  3932                           	
  3933                           i1l313:
  3934  000100                     	goto	i1l2398
  3935  000100  EF82  F000         	line	574
  3936                           ;main.c: 574:                 }
  3937                           	
  3938                           i1l312:
  3939  000104                     	line	575
  3940                           	
  3941                           i1l2398:
  3942  000104                     ;main.c: 575:                 if(ParkingDistance>distance)M_foward_direction();
  3943                           		movf	((c:_ParkingDistance)),c,w	;volatile
  3944  000104  5068               	subwf	((c:_distance)),c,w	;volatile
  3945  000106  5C65               	movf	((c:_ParkingDistance+1)),c,w	;volatile
  3946  000108  5069               	subwfb	((c:_distance+1)),c,w	;volatile
  3947  00010A  5866               	btfsc	status,0
  3948  00010C  B0D8               	goto	i1u212_21
  3949  00010E  EF8B  F000         	goto	i1u212_20
  3950  000112  EF8D  F000         
  3951                           i1u212_21:
  3952  000116                     	goto	i1l2402
  3953  000116  EF91  F000         i1u212_20:
  3954  00011A                     	
  3955                           i1l2400:
  3956  00011A                     	call	_M_foward_direction	;wreg free
  3957  00011A  ECDB  F00A         	goto	i1l2402
  3958  00011E  EF91  F000         	
  3959                           i1l315:
  3960  000122                     	line	576
  3961                           	
  3962                           i1l2402:
  3963  000122                     ;main.c: 576:                 US_send_pulse();
  3964                           	call	_US_send_pulse	;wreg free
  3965  000122  EC3C  F005         	line	577
  3966                           	
  3967                           i1l2404:
  3968  000126                     ;main.c: 577:                 if(distance<=ParkingDistance)break;
  3969                           		movf	((c:_distance)),c,w	;volatile
  3970  000126  5065               	subwf	((c:_ParkingDistance)),c,w	;volatile
  3971  000128  5C68               	movf	((c:_distance+1)),c,w	;volatile
  3972  00012A  5066               	subwfb	((c:_ParkingDistance+1)),c,w	;volatile
  3973  00012C  5869               	btfss	status,0
  3974  00012E  A0D8               	goto	i1u213_21
  3975  000130  EF9C  F000         	goto	i1u213_20
  3976  000134  EF9E  F000         
  3977                           i1u213_21:
  3978  000138                     	goto	i1l2408
  3979  000138  EFA4  F000         i1u213_20:
  3980  00013C                     	goto	i1l2410
  3981  00013C  EFB2  F000         	
  3982                           i1l2406:
  3983  000140                     	goto	i1l2410
  3984  000140  EFB2  F000         	
  3985                           i1l316:
  3986  000144                     	goto	i1l2408
  3987  000144  EFA4  F000         	line	578
  3988                           ;main.c: 578:             }
  3989                           	
  3990                           i1l310:
  3991  000148                     	line	564
  3992                           	
  3993                           i1l2408:
  3994  000148                     ;main.c: 564:             while(distance!=ParkingDistance)
  3995                           	movf	((c:_ParkingDistance)),c,w	;volatile
  3996  000148  5068               xorwf	((c:_distance)),c,w	;volatile
  3997  00014A  1865               	bnz	i1u214_21
  3998  00014C  E107               movf	((c:_ParkingDistance+1)),c,w	;volatile
  3999  00014E  5069               xorwf	((c:_distance+1)),c,w	;volatile
  4000  000150  1866               	btfss	status,2
  4001  000152  A4D8               	goto	i1u214_21
  4002  000154  EFAE  F000         	goto	i1u214_20
  4003  000158  EFB0  F000         
  4004                           i1u214_21:
  4005  00015C                     	goto	i1l311
  4006  00015C  EF62  F000         i1u214_20:
  4007  000160                     	goto	i1l2410
  4008  000160  EFB2  F000         	
  4009                           i1l314:
  4010  000164                     	line	579
  4011                           	
  4012                           i1l2410:
  4013  000164                     ;main.c: 579:             M_stop();
  4014                           	call	i1_M_stop	;wreg free
  4015  000164  ECB7  F00A         	line	580
  4016                           ;main.c: 580:             LCD_clear();
  4017                           	call	_LCD_clear	;wreg free
  4018  000168  EC18  F00C         	line	581
  4019                           	
  4020                           i1l2412:
  4021  00016C                     ;main.c: 581:             if(distance<=ParkingDistance)
  4022                           		movf	((c:_distance)),c,w	;volatile
  4023  00016C  5065               	subwf	((c:_ParkingDistance)),c,w	;volatile
  4024  00016E  5C68               	movf	((c:_distance+1)),c,w	;volatile
  4025  000170  5066               	subwfb	((c:_ParkingDistance+1)),c,w	;volatile
  4026  000172  5869               	btfss	status,0
  4027  000174  A0D8               	goto	i1u215_21
  4028  000176  EFBF  F000         	goto	i1u215_20
  4029  00017A  EFC1  F000         
  4030                           i1u215_21:
  4031  00017E                     	goto	i1l318
  4032  00017E  EFEB  F002         i1u215_20:
  4033  000182                     	line	583
  4034                           	
  4035                           i1l2414:
  4036  000182                     ;main.c: 582:             {;main.c: 583:                 LCD_string_xy(1,7,"DONE");
  4037                           	movlw	low(07h)
  4038  000182  0E07               	movwf	((c:i1LCD_string_xy@pos)),c
  4039  000184  6E07               		movlw	low(STR_11)
  4040  000186  0EBA               	movwf	((c:i1LCD_string_xy@msg)),c
  4041  000188  6E08               	movlw	high(STR_11)
  4042  00018A  0E7D               	movwf	((c:i1LCD_string_xy@msg+1)),c
  4043  00018C  6E09               
  4044                           	movlw	(01h)&0ffh
  4045  00018E  0E01               	
  4046                           	call	i1_LCD_string_xy
  4047  000190  EC11  F00A         	line	584
  4048                           ;main.c: 584:                 BT_tx_string("DONE!!\n");
  4049                           		movlw	low(STR_12)
  4050  000194  0EB2               	movwf	((c:i1BT_tx_string@msg)),c
  4051  000196  6E02               	movlw	high(STR_12)
  4052  000198  0E7D               	movwf	((c:i1BT_tx_string@msg+1)),c
  4053  00019A  6E03               
  4054                           	call	i1_BT_tx_string	;wreg free
  4055  00019C  EC7C  F009         	goto	i1l318
  4056  0001A0  EFEB  F002         	line	585
  4057                           ;main.c: 585:             }
  4058                           	
  4059                           i1l317:
  4060  0001A4                     	line	586
  4061                           ;main.c: 586:             break;
  4062                           	goto	i1l318
  4063  0001A4  EFEB  F002         	line	587
  4064                           ;main.c: 587:         case 'F':
  4065                           	
  4066                           i1l319:
  4067  0001A8                     	line	588
  4068                           	
  4069                           i1l2416:
  4070  0001A8                     ;main.c: 588:             M_foward_direction();
  4071                           	call	_M_foward_direction	;wreg free
  4072  0001A8  ECDB  F00A         	line	589
  4073                           ;main.c: 589:             break;
  4074                           	goto	i1l318
  4075  0001AC  EFEB  F002         	line	590
  4076                           ;main.c: 590:         case 'B':
  4077                           	
  4078                           i1l320:
  4079  0001B0                     	line	591
  4080                           	
  4081                           i1l2418:
  4082  0001B0                     ;main.c: 591:             M_backward_direction();
  4083                           	call	_M_backward_direction	;wreg free
  4084  0001B0  EC1F  F00B         	line	592
  4085                           ;main.c: 592:             break;
  4086                           	goto	i1l318
  4087  0001B4  EFEB  F002         	line	593
  4088                           ;main.c: 593:         case 'S':
  4089                           	
  4090                           i1l321:
  4091  0001B8                     	line	594
  4092                           	
  4093                           i1l2420:
  4094  0001B8                     ;main.c: 594:             M_stop();
  4095                           	call	i1_M_stop	;wreg free
  4096  0001B8  ECB7  F00A         	line	595
  4097                           ;main.c: 595:             break;
  4098                           	goto	i1l318
  4099  0001BC  EFEB  F002         	line	596
  4100                           ;main.c: 596:         case 'D':
  4101                           	
  4102                           i1l322:
  4103  0001C0                     	line	597
  4104                           	
  4105                           i1l2422:
  4106  0001C0                     ;main.c: 597:             US_send_pulse();
  4107                           	call	_US_send_pulse	;wreg free
  4108  0001C0  EC3C  F005         	line	598
  4109                           ;main.c: 598:             break;
  4110                           	goto	i1l318
  4111  0001C4  EFEB  F002         	line	599
  4112                           ;main.c: 599:         case 'T':
  4113                           	
  4114                           i1l323:
  4115  0001C8                     	line	600
  4116                           	
  4117                           i1l2424:
  4118  0001C8                     ;main.c: 600:             M_stop();
  4119                           	call	i1_M_stop	;wreg free
  4120  0001C8  ECB7  F00A         	line	601
  4121                           	
  4122                           i1l2426:
  4123  0001CC                     ;main.c: 601:             BT_tx_string("Write what you want to see on the LCD\n");
  4124                           		movlw	low(STR_13)
  4125  0001CC  0EDE               	movwf	((c:i1BT_tx_string@msg)),c
  4126  0001CE  6E02               	movlw	high(STR_13)
  4127  0001D0  0E7C               	movwf	((c:i1BT_tx_string@msg+1)),c
  4128  0001D2  6E03               
  4129                           	call	i1_BT_tx_string	;wreg free
  4130  0001D4  EC7C  F009         	line	602
  4131                           	
  4132                           i1l2428:
  4133  0001D8                     ;main.c: 602:             BT_rx_string(RxMessage);
  4134                           		movlw	low(Rx_ISR@RxMessage)
  4135  0001D8  0E36               	movwf	((c:BT_rx_string@RxStr)),c
  4136  0001DA  6E01               	movlw	high(Rx_ISR@RxMessage)
  4137  0001DC  0E00               	movwf	((c:BT_rx_string@RxStr+1)),c
  4138  0001DE  6E02               
  4139                           	call	_BT_rx_string	;wreg free
  4140  0001E0  EC6B  F006         	line	603
  4141                           	
  4142                           i1l2430:
  4143  0001E4                     ;main.c: 603:             LCD_clear();
  4144                           	call	_LCD_clear	;wreg free
  4145  0001E4  EC18  F00C         	line	604
  4146                           	
  4147                           i1l2432:
  4148  0001E8                     ;main.c: 604:             LCD_string_xy(1,1,RxMessage);
  4149                           	movlw	low(01h)
  4150  0001E8  0E01               	movwf	((c:i1LCD_string_xy@pos)),c
  4151  0001EA  6E07               		movlw	low(Rx_ISR@RxMessage)
  4152  0001EC  0E36               	movwf	((c:i1LCD_string_xy@msg)),c
  4153  0001EE  6E08               	movlw	high(Rx_ISR@RxMessage)
  4154  0001F0  0E00               	movwf	((c:i1LCD_string_xy@msg+1)),c
  4155  0001F2  6E09               
  4156                           	movlw	(01h)&0ffh
  4157  0001F4  0E01               	
  4158                           	call	i1_LCD_string_xy
  4159  0001F6  EC11  F00A         	line	605
  4160                           ;main.c: 605:             break;
  4161                           	goto	i1l318
  4162  0001FA  EFEB  F002         	line	606
  4163                           ;main.c: 606:         case 'I':
  4164                           	
  4165                           i1l324:
  4166  0001FE                     	line	607
  4167                           # 607 "main.c"
  4168                           reset ;# 
  4169  0001FE  00FF               psect	intcodelo
  4170                           	line	608
  4171                           ;main.c: 608:             break;
  4172                           	goto	i1l318
  4173  000200  EFEB  F002         	line	609
  4174                           ;main.c: 609:         case 'C':
  4175                           	
  4176                           i1l325:
  4177  000204                     	line	610
  4178                           	
  4179                           i1l2434:
  4180  000204                     ;main.c: 610:             M_clockwise_direction();
  4181                           	call	_M_clockwise_direction	;wreg free
  4182  000204  ECFD  F00A         	line	611
  4183                           ;main.c: 611:             break;
  4184                           	goto	i1l318
  4185  000208  EFEB  F002         	line	612
  4186                           ;main.c: 612:         case 'A':
  4187                           	
  4188                           i1l326:
  4189  00020C                     	line	613
  4190                           	
  4191                           i1l2436:
  4192  00020C                     ;main.c: 613:             M_anticlockwise_direction();
  4193                           	call	_M_anticlockwise_direction	;wreg free
  4194  00020C  EC41  F00B         	line	614
  4195                           ;main.c: 614:             break;
  4196                           	goto	i1l318
  4197  000210  EFEB  F002         	line	615
  4198                           ;main.c: 615:         case '1':
  4199                           	
  4200                           i1l327:
  4201  000214                     	line	616
  4202                           	
  4203                           i1l2438:
  4204  000214                     ;main.c: 616:             M_set_DC(102,3);
  4205                           	movlw	high(066h)
  4206  000214  0E00               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4207  000216  6E02               	movlw	low(066h)
  4208  000218  0E66               	movwf	((c:M_set_DC@DutyCycle)),c
  4209  00021A  6E01               	movlw	low(03h)
  4210  00021C  0E03               	movwf	((c:M_set_DC@motor)),c
  4211  00021E  6E03               	call	_M_set_DC	;wreg free
  4212  000220  EC0E  F003         	line	617
  4213                           ;main.c: 617:             break;
  4214                           	goto	i1l318
  4215  000224  EFEB  F002         	line	618
  4216                           ;main.c: 618:         case '2':
  4217                           	
  4218                           i1l328:
  4219  000228                     	line	619
  4220                           	
  4221                           i1l2440:
  4222  000228                     ;main.c: 619:             M_set_DC(205,3);
  4223                           	movlw	high(0CDh)
  4224  000228  0E00               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4225  00022A  6E02               	movlw	low(0CDh)
  4226  00022C  0ECD               	movwf	((c:M_set_DC@DutyCycle)),c
  4227  00022E  6E01               	movlw	low(03h)
  4228  000230  0E03               	movwf	((c:M_set_DC@motor)),c
  4229  000232  6E03               	call	_M_set_DC	;wreg free
  4230  000234  EC0E  F003         	line	620
  4231                           ;main.c: 620:             break;
  4232                           	goto	i1l318
  4233  000238  EFEB  F002         	line	621
  4234                           ;main.c: 621:         case '3':
  4235                           	
  4236                           i1l329:
  4237  00023C                     	line	622
  4238                           	
  4239                           i1l2442:
  4240  00023C                     ;main.c: 622:             M_set_DC(307,3);
  4241                           	movlw	high(0133h)
  4242  00023C  0E01               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4243  00023E  6E02               	movlw	low(0133h)
  4244  000240  0E33               	movwf	((c:M_set_DC@DutyCycle)),c
  4245  000242  6E01               	movlw	low(03h)
  4246  000244  0E03               	movwf	((c:M_set_DC@motor)),c
  4247  000246  6E03               	call	_M_set_DC	;wreg free
  4248  000248  EC0E  F003         	line	623
  4249                           ;main.c: 623:             break;
  4250                           	goto	i1l318
  4251  00024C  EFEB  F002         	line	624
  4252                           ;main.c: 624:         case '4':
  4253                           	
  4254                           i1l330:
  4255  000250                     	line	625
  4256                           	
  4257                           i1l2444:
  4258  000250                     ;main.c: 625:             M_set_DC(409,3);
  4259                           	movlw	high(0199h)
  4260  000250  0E01               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4261  000252  6E02               	movlw	low(0199h)
  4262  000254  0E99               	movwf	((c:M_set_DC@DutyCycle)),c
  4263  000256  6E01               	movlw	low(03h)
  4264  000258  0E03               	movwf	((c:M_set_DC@motor)),c
  4265  00025A  6E03               	call	_M_set_DC	;wreg free
  4266  00025C  EC0E  F003         	line	626
  4267                           ;main.c: 626:             break;
  4268                           	goto	i1l318
  4269  000260  EFEB  F002         	line	627
  4270                           ;main.c: 627:         case '5':
  4271                           	
  4272                           i1l331:
  4273  000264                     	line	628
  4274                           	
  4275                           i1l2446:
  4276  000264                     ;main.c: 628:             M_set_DC(512,3);
  4277                           	movlw	high(0200h)
  4278  000264  0E02               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4279  000266  6E02               	movlw	low(0200h)
  4280  000268  0E00               	movwf	((c:M_set_DC@DutyCycle)),c
  4281  00026A  6E01               	movlw	low(03h)
  4282  00026C  0E03               	movwf	((c:M_set_DC@motor)),c
  4283  00026E  6E03               	call	_M_set_DC	;wreg free
  4284  000270  EC0E  F003         	line	629
  4285                           ;main.c: 629:             break;
  4286                           	goto	i1l318
  4287  000274  EFEB  F002         	line	630
  4288                           ;main.c: 630:         case '6':
  4289                           	
  4290                           i1l332:
  4291  000278                     	line	631
  4292                           	
  4293                           i1l2448:
  4294  000278                     ;main.c: 631:             M_set_DC(614,3);
  4295                           	movlw	high(0266h)
  4296  000278  0E02               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4297  00027A  6E02               	movlw	low(0266h)
  4298  00027C  0E66               	movwf	((c:M_set_DC@DutyCycle)),c
  4299  00027E  6E01               	movlw	low(03h)
  4300  000280  0E03               	movwf	((c:M_set_DC@motor)),c
  4301  000282  6E03               	call	_M_set_DC	;wreg free
  4302  000284  EC0E  F003         	line	632
  4303                           ;main.c: 632:             break;
  4304                           	goto	i1l318
  4305  000288  EFEB  F002         	line	633
  4306                           ;main.c: 633:         case '7':
  4307                           	
  4308                           i1l333:
  4309  00028C                     	line	634
  4310                           	
  4311                           i1l2450:
  4312  00028C                     ;main.c: 634:             M_set_DC(716,3);
  4313                           	movlw	high(02CCh)
  4314  00028C  0E02               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4315  00028E  6E02               	movlw	low(02CCh)
  4316  000290  0ECC               	movwf	((c:M_set_DC@DutyCycle)),c
  4317  000292  6E01               	movlw	low(03h)
  4318  000294  0E03               	movwf	((c:M_set_DC@motor)),c
  4319  000296  6E03               	call	_M_set_DC	;wreg free
  4320  000298  EC0E  F003         	line	635
  4321                           ;main.c: 635:             break;
  4322                           	goto	i1l318
  4323  00029C  EFEB  F002         	line	636
  4324                           ;main.c: 636:         case '8':
  4325                           	
  4326                           i1l334:
  4327  0002A0                     	line	637
  4328                           	
  4329                           i1l2452:
  4330  0002A0                     ;main.c: 637:             M_set_DC(818,3);
  4331                           	movlw	high(0332h)
  4332  0002A0  0E03               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4333  0002A2  6E02               	movlw	low(0332h)
  4334  0002A4  0E32               	movwf	((c:M_set_DC@DutyCycle)),c
  4335  0002A6  6E01               	movlw	low(03h)
  4336  0002A8  0E03               	movwf	((c:M_set_DC@motor)),c
  4337  0002AA  6E03               	call	_M_set_DC	;wreg free
  4338  0002AC  EC0E  F003         	line	638
  4339                           ;main.c: 638:             break;
  4340                           	goto	i1l318
  4341  0002B0  EFEB  F002         	line	639
  4342                           ;main.c: 639:         case '9':
  4343                           	
  4344                           i1l335:
  4345  0002B4                     	line	640
  4346                           	
  4347                           i1l2454:
  4348  0002B4                     ;main.c: 640:             M_set_DC(921,3);
  4349                           	movlw	high(0399h)
  4350  0002B4  0E03               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4351  0002B6  6E02               	movlw	low(0399h)
  4352  0002B8  0E99               	movwf	((c:M_set_DC@DutyCycle)),c
  4353  0002BA  6E01               	movlw	low(03h)
  4354  0002BC  0E03               	movwf	((c:M_set_DC@motor)),c
  4355  0002BE  6E03               	call	_M_set_DC	;wreg free
  4356  0002C0  EC0E  F003         	line	641
  4357                           ;main.c: 641:             break;
  4358                           	goto	i1l318
  4359  0002C4  EFEB  F002         	line	642
  4360                           ;main.c: 642:         case '0':
  4361                           	
  4362                           i1l336:
  4363  0002C8                     	line	643
  4364                           	
  4365                           i1l2456:
  4366  0002C8                     ;main.c: 643:             M_set_DC(1023,3);
  4367                           	movlw	high(03FFh)
  4368  0002C8  0E03               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4369  0002CA  6E02               	setf	((c:M_set_DC@DutyCycle)),c
  4370  0002CC  6801               	movlw	low(03h)
  4371  0002CE  0E03               	movwf	((c:M_set_DC@motor)),c
  4372  0002D0  6E03               	call	_M_set_DC	;wreg free
  4373  0002D2  EC0E  F003         	line	644
  4374                           ;main.c: 644:             break;
  4375                           	goto	i1l318
  4376  0002D6  EFEB  F002         	line	645
  4377                           ;main.c: 645:         case 'W':
  4378                           	
  4379                           i1l337:
  4380  0002DA                     	line	646
  4381                           	
  4382                           i1l2458:
  4383  0002DA                     ;main.c: 646:             M_stop();
  4384                           	call	i1_M_stop	;wreg free
  4385  0002DA  ECB7  F00A         	line	647
  4386                           ;main.c: 647:             M_foward_direction();
  4387                           	call	_M_foward_direction	;wreg free
  4388  0002DE  ECDB  F00A         	line	648
  4389                           ;main.c: 648:             M_set_DC(512,1);
  4390                           	movlw	high(0200h)
  4391  0002E2  0E02               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4392  0002E4  6E02               	movlw	low(0200h)
  4393  0002E6  0E00               	movwf	((c:M_set_DC@DutyCycle)),c
  4394  0002E8  6E01               	movlw	low(01h)
  4395  0002EA  0E01               	movwf	((c:M_set_DC@motor)),c
  4396  0002EC  6E03               	call	_M_set_DC	;wreg free
  4397  0002EE  EC0E  F003         	line	649
  4398                           ;main.c: 649:             M_set_DC(1023,2);
  4399                           	movlw	high(03FFh)
  4400  0002F2  0E03               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4401  0002F4  6E02               	setf	((c:M_set_DC@DutyCycle)),c
  4402  0002F6  6801               	movlw	low(02h)
  4403  0002F8  0E02               	movwf	((c:M_set_DC@motor)),c
  4404  0002FA  6E03               	call	_M_set_DC	;wreg free
  4405  0002FC  EC0E  F003         	line	650
  4406                           ;main.c: 650:             break;
  4407                           	goto	i1l318
  4408  000300  EFEB  F002         	line	651
  4409                           ;main.c: 651:         case 'X':
  4410                           	
  4411                           i1l338:
  4412  000304                     	line	652
  4413                           	
  4414                           i1l2460:
  4415  000304                     ;main.c: 652:             M_stop();
  4416                           	call	i1_M_stop	;wreg free
  4417  000304  ECB7  F00A         	line	653
  4418                           ;main.c: 653:             M_foward_direction();
  4419                           	call	_M_foward_direction	;wreg free
  4420  000308  ECDB  F00A         	line	654
  4421                           ;main.c: 654:             M_set_DC(1023,1);
  4422                           	movlw	high(03FFh)
  4423  00030C  0E03               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4424  00030E  6E02               	setf	((c:M_set_DC@DutyCycle)),c
  4425  000310  6801               	movlw	low(01h)
  4426  000312  0E01               	movwf	((c:M_set_DC@motor)),c
  4427  000314  6E03               	call	_M_set_DC	;wreg free
  4428  000316  EC0E  F003         	line	655
  4429                           ;main.c: 655:             M_set_DC(512,2);
  4430                           	movlw	high(0200h)
  4431  00031A  0E02               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4432  00031C  6E02               	movlw	low(0200h)
  4433  00031E  0E00               	movwf	((c:M_set_DC@DutyCycle)),c
  4434  000320  6E01               	movlw	low(02h)
  4435  000322  0E02               	movwf	((c:M_set_DC@motor)),c
  4436  000324  6E03               	call	_M_set_DC	;wreg free
  4437  000326  EC0E  F003         	line	656
  4438                           ;main.c: 656:             break;
  4439                           	goto	i1l318
  4440  00032A  EFEB  F002         	line	657
  4441                           ;main.c: 657:         case 'Y':
  4442                           	
  4443                           i1l339:
  4444  00032E                     	line	658
  4445                           	
  4446                           i1l2462:
  4447  00032E                     ;main.c: 658:             M_stop();
  4448                           	call	i1_M_stop	;wreg free
  4449  00032E  ECB7  F00A         	line	659
  4450                           ;main.c: 659:             M_backward_direction();
  4451                           	call	_M_backward_direction	;wreg free
  4452  000332  EC1F  F00B         	line	660
  4453                           ;main.c: 660:             M_set_DC(512,1);
  4454                           	movlw	high(0200h)
  4455  000336  0E02               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4456  000338  6E02               	movlw	low(0200h)
  4457  00033A  0E00               	movwf	((c:M_set_DC@DutyCycle)),c
  4458  00033C  6E01               	movlw	low(01h)
  4459  00033E  0E01               	movwf	((c:M_set_DC@motor)),c
  4460  000340  6E03               	call	_M_set_DC	;wreg free
  4461  000342  EC0E  F003         	line	661
  4462                           ;main.c: 661:             M_set_DC(1023,2);
  4463                           	movlw	high(03FFh)
  4464  000346  0E03               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4465  000348  6E02               	setf	((c:M_set_DC@DutyCycle)),c
  4466  00034A  6801               	movlw	low(02h)
  4467  00034C  0E02               	movwf	((c:M_set_DC@motor)),c
  4468  00034E  6E03               	call	_M_set_DC	;wreg free
  4469  000350  EC0E  F003         	line	662
  4470                           ;main.c: 662:             break;
  4471                           	goto	i1l318
  4472  000354  EFEB  F002         	line	663
  4473                           ;main.c: 663:         case 'Z':
  4474                           	
  4475                           i1l340:
  4476  000358                     	line	664
  4477                           	
  4478                           i1l2464:
  4479  000358                     ;main.c: 664:             M_stop();
  4480                           	call	i1_M_stop	;wreg free
  4481  000358  ECB7  F00A         	line	665
  4482                           ;main.c: 665:             M_backward_direction();
  4483                           	call	_M_backward_direction	;wreg free
  4484  00035C  EC1F  F00B         	line	666
  4485                           ;main.c: 666:             M_set_DC(1023,1);
  4486                           	movlw	high(03FFh)
  4487  000360  0E03               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4488  000362  6E02               	setf	((c:M_set_DC@DutyCycle)),c
  4489  000364  6801               	movlw	low(01h)
  4490  000366  0E01               	movwf	((c:M_set_DC@motor)),c
  4491  000368  6E03               	call	_M_set_DC	;wreg free
  4492  00036A  EC0E  F003         	line	667
  4493                           ;main.c: 667:             M_set_DC(512,2);
  4494                           	movlw	high(0200h)
  4495  00036E  0E02               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4496  000370  6E02               	movlw	low(0200h)
  4497  000372  0E00               	movwf	((c:M_set_DC@DutyCycle)),c
  4498  000374  6E01               	movlw	low(02h)
  4499  000376  0E02               	movwf	((c:M_set_DC@motor)),c
  4500  000378  6E03               	call	_M_set_DC	;wreg free
  4501  00037A  EC0E  F003         	line	668
  4502                           ;main.c: 668:             break;
  4503                           	goto	i1l318
  4504  00037E  EFEB  F002         	line	669
  4505                           ;main.c: 669:         case 'L':
  4506                           	
  4507                           i1l341:
  4508  000382                     	line	670
  4509                           ;main.c: 670:             if(!(LATCbits.LC3&&LATCbits.LC4&&LATCbits.LC5))L_turn_on();
  4510                           	btfss	((c:3979)),c,3	;volatile
  4511  000382  A68B               	goto	i1u216_21
  4512  000384  EFC6  F001         	goto	i1u216_20
  4513  000388  EFC8  F001         i1u216_21:
  4514  00038C                     	goto	i1l2470
  4515  00038C  EFD8  F001         i1u216_20:
  4516  000390                     	
  4517                           i1l2466:
  4518  000390                     	btfss	((c:3979)),c,4	;volatile
  4519  000390  A88B               	goto	i1u217_21
  4520  000392  EFCD  F001         	goto	i1u217_20
  4521  000396  EFCF  F001         i1u217_21:
  4522  00039A                     	goto	i1l2470
  4523  00039A  EFD8  F001         i1u217_20:
  4524  00039E                     	
  4525                           i1l2468:
  4526  00039E                     	btfsc	((c:3979)),c,5	;volatile
  4527  00039E  BA8B               	goto	i1u218_21
  4528  0003A0  EFD4  F001         	goto	i1u218_20
  4529  0003A4  EFD6  F001         i1u218_21:
  4530  0003A8                     	goto	i1l2472
  4531  0003A8  EFDC  F001         i1u218_20:
  4532  0003AC                     	goto	i1l2470
  4533  0003AC  EFD8  F001         	
  4534                           i1l344:
  4535  0003B0                     	
  4536                           i1l2470:
  4537  0003B0                     	call	_L_turn_on	;wreg free
  4538  0003B0  EC22  F00C         	goto	i1l318
  4539  0003B4  EFEB  F002         	line	671
  4540                           ;main.c: 671:             else L_turn_off();
  4541                           	
  4542                           i1l342:
  4543  0003B8                     	
  4544                           i1l2472:
  4545  0003B8                     	call	_L_turn_off	;wreg free
  4546  0003B8  EC26  F00C         	goto	i1l318
  4547  0003BC  EFEB  F002         	
  4548                           i1l345:
  4549  0003C0                     	line	672
  4550                           ;main.c: 672:             break;
  4551                           	goto	i1l318
  4552  0003C0  EFEB  F002         	line	673
  4553                           ;main.c: 673:         case 'd':
  4554                           	
  4555                           i1l346:
  4556  0003C4                     	line	674
  4557                           	
  4558                           i1l2474:
  4559  0003C4                     ;main.c: 674:             M_stop();
  4560                           	call	i1_M_stop	;wreg free
  4561  0003C4  ECB7  F00A         	line	675
  4562                           	
  4563                           i1l2476:
  4564  0003C8                     ;main.c: 675:             BT_tx_string("Which motor do you want to set DC? Motor 1 (1), 
                                 Motor 2 (2) or both (3)\n");
  4565                           		movlw	low(STR_14)
  4566  0003C8  0E95               	movwf	((c:i1BT_tx_string@msg)),c
  4567  0003CA  6E02               	movlw	high(STR_14)
  4568  0003CC  0E7C               	movwf	((c:i1BT_tx_string@msg+1)),c
  4569  0003CE  6E03               
  4570                           	call	i1_BT_tx_string	;wreg free
  4571  0003D0  EC7C  F009         	line	676
  4572                           	
  4573                           i1l2478:
  4574  0003D4                     ;main.c: 676:             BT_rx_string(RxMessage);
  4575                           		movlw	low(Rx_ISR@RxMessage)
  4576  0003D4  0E36               	movwf	((c:BT_rx_string@RxStr)),c
  4577  0003D6  6E01               	movlw	high(Rx_ISR@RxMessage)
  4578  0003D8  0E00               	movwf	((c:BT_rx_string@RxStr+1)),c
  4579  0003DA  6E02               
  4580                           	call	_BT_rx_string	;wreg free
  4581  0003DC  EC6B  F006         	line	677
  4582                           	
  4583                           i1l2480:
  4584  0003E0                     ;main.c: 677:             if(RxMessage[0]=='1'||RxMessage[0]=='2'||RxMessage[0]=='3')
  4585                           		movlw	49
  4586  0003E0  0E31               	xorwf	((c:Rx_ISR@RxMessage)),c,w
  4587  0003E2  1836               	btfsc	status,2
  4588  0003E4  B4D8               	goto	i1u219_21
  4589  0003E6  EFF7  F001         	goto	i1u219_20
  4590  0003EA  EFF9  F001         
  4591                           i1u219_21:
  4592  0003EE                     	goto	i1l2486
  4593  0003EE  EF0D  F002         i1u219_20:
  4594  0003F2                     	
  4595                           i1l2482:
  4596  0003F2                     		movlw	50
  4597  0003F2  0E32               	xorwf	((c:Rx_ISR@RxMessage)),c,w
  4598  0003F4  1836               	btfsc	status,2
  4599  0003F6  B4D8               	goto	i1u220_21
  4600  0003F8  EF00  F002         	goto	i1u220_20
  4601  0003FC  EF02  F002         
  4602                           i1u220_21:
  4603  000400                     	goto	i1l2486
  4604  000400  EF0D  F002         i1u220_20:
  4605  000404                     	
  4606                           i1l2484:
  4607  000404                     		movlw	51
  4608  000404  0E33               	xorwf	((c:Rx_ISR@RxMessage)),c,w
  4609  000406  1836               	btfss	status,2
  4610  000408  A4D8               	goto	i1u221_21
  4611  00040A  EF09  F002         	goto	i1u221_20
  4612  00040E  EF0B  F002         
  4613                           i1u221_21:
  4614  000412                     	goto	i1l2502
  4615  000412  EF6E  F002         i1u221_20:
  4616  000416                     	goto	i1l2486
  4617  000416  EF0D  F002         	
  4618                           i1l349:
  4619  00041A                     	line	679
  4620                           	
  4621                           i1l2486:
  4622  00041A                     ;main.c: 678:             {;main.c: 679:                 motor=RxMessage[0]&0x0F;
  4623                           	movf	((c:Rx_ISR@RxMessage)),c,w
  4624  00041A  5036               	andlw	low(0Fh)
  4625  00041C  0B0F               	movwf	((c:Rx_ISR@motor)),c
  4626  00041E  6E5B               	line	680
  4627                           	
  4628                           i1l2488:
  4629  000420                     ;main.c: 680:                 BT_tx_string("Please enter DC value (%)\n");
  4630                           		movlw	low(STR_15)
  4631  000420  0E05               	movwf	((c:i1BT_tx_string@msg)),c
  4632  000422  6E02               	movlw	high(STR_15)
  4633  000424  0E7D               	movwf	((c:i1BT_tx_string@msg+1)),c
  4634  000426  6E03               
  4635                           	call	i1_BT_tx_string	;wreg free
  4636  000428  EC7C  F009         	line	681
  4637                           	
  4638                           i1l2490:
  4639  00042C                     ;main.c: 681:                 BT_rx_string(RxMessage);
  4640                           		movlw	low(Rx_ISR@RxMessage)
  4641  00042C  0E36               	movwf	((c:BT_rx_string@RxStr)),c
  4642  00042E  6E01               	movlw	high(Rx_ISR@RxMessage)
  4643  000430  0E00               	movwf	((c:BT_rx_string@RxStr+1)),c
  4644  000432  6E02               
  4645                           	call	_BT_rx_string	;wreg free
  4646  000434  EC6B  F006         	line	682
  4647                           	
  4648                           i1l2492:
  4649  000438                     ;main.c: 682:                 DuCy=atoi4D(RxMessage);
  4650                           		movlw	low(Rx_ISR@RxMessage)
  4651  000438  0E36               	movwf	((c:atoi4D@arr)),c
  4652  00043A  6E07               	movlw	high(Rx_ISR@RxMessage)
  4653  00043C  0E00               	movwf	((c:atoi4D@arr+1)),c
  4654  00043E  6E08               
  4655                           	call	_atoi4D	;wreg free
  4656  000440  ECC7  F006         	movff	0+?_atoi4D,(c:Rx_ISR@DuCy)
  4657  000444  C007  F05C         	movff	1+?_atoi4D,(c:Rx_ISR@DuCy+1)
  4658  000448  C008  F05D         	clrf	((c:Rx_ISR@DuCy+2)),c
  4659  00044C  6A5E               	clrf	((c:Rx_ISR@DuCy+3)),c
  4660  00044E  6A5F               
  4661                           	line	683
  4662                           	
  4663                           i1l2494:
  4664  000450                     ;main.c: 683:                 DuCy=DuCy*1023/100;
  4665                           	movff	(c:Rx_ISR@DuCy),(c:___lmul@multiplier)
  4666  000450  C05C  F001         	movff	(c:Rx_ISR@DuCy+1),(c:___lmul@multiplier+1)
  4667  000454  C05D  F002         	movff	(c:Rx_ISR@DuCy+2),(c:___lmul@multiplier+2)
  4668  000458  C05E  F003         	movff	(c:Rx_ISR@DuCy+3),(c:___lmul@multiplier+3)
  4669  00045C  C05F  F004         	movlw	low(03FFh)
  4670  000460  0EFF               	movwf	((c:___lmul@multiplicand)),c
  4671  000462  6E05               	movlw	high(03FFh)
  4672  000464  0E03               	movwf	((c:___lmul@multiplicand+1)),c
  4673  000466  6E06               	movlw	low highword(03FFh)
  4674  000468  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  4675  00046A  6E07               	movlw	high highword(03FFh)
  4676  00046C  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  4677  00046E  6E08               	call	___lmul	;wreg free
  4678  000470  EC0F  F009         	movff	0+?___lmul,(c:___lldiv@dividend)
  4679  000474  C001  F00D         	movff	1+?___lmul,(c:___lldiv@dividend+1)
  4680  000478  C002  F00E         	movff	2+?___lmul,(c:___lldiv@dividend+2)
  4681  00047C  C003  F00F         	movff	3+?___lmul,(c:___lldiv@dividend+3)
  4682  000480  C004  F010         	
  4683                           	movlw	low(064h)
  4684  000484  0E64               	movwf	((c:___lldiv@divisor)),c
  4685  000486  6E11               	movlw	high(064h)
  4686  000488  0E00               	movwf	((c:___lldiv@divisor+1)),c
  4687  00048A  6E12               	movlw	low highword(064h)
  4688  00048C  0E00               	movwf	((c:___lldiv@divisor+2)),c
  4689  00048E  6E13               	movlw	high highword(064h)
  4690  000490  0E00               	movwf	((c:___lldiv@divisor+3)),c
  4691  000492  6E14               	call	___lldiv	;wreg free
  4692  000494  EC0F  F006         	movff	0+?___lldiv,(c:Rx_ISR@DuCy)
  4693  000498  C00D  F05C         	movff	1+?___lldiv,(c:Rx_ISR@DuCy+1)
  4694  00049C  C00E  F05D         	movff	2+?___lldiv,(c:Rx_ISR@DuCy+2)
  4695  0004A0  C00F  F05E         	movff	3+?___lldiv,(c:Rx_ISR@DuCy+3)
  4696  0004A4  C010  F05F         	
  4697                           	line	684
  4698                           	
  4699                           i1l2496:
  4700  0004A8                     ;main.c: 684:                 M_set_DC(DuCy,motor);
  4701                           	movff	(c:Rx_ISR@DuCy),(c:M_set_DC@DutyCycle)
  4702  0004A8  C05C  F001         	movff	(c:Rx_ISR@DuCy+1),(c:M_set_DC@DutyCycle+1)
  4703  0004AC  C05D  F002         	movff	(c:Rx_ISR@motor),(c:M_set_DC@motor)
  4704  0004B0  C05B  F003         	call	_M_set_DC	;wreg free
  4705  0004B4  EC0E  F003         	line	685
  4706                           	
  4707                           i1l2498:
  4708  0004B8                     ;main.c: 685:                 itoa4D(DuCyT,DuCy);
  4709                           		movlw	low(Rx_ISR@DuCyT)
  4710  0004B8  0E56               	movwf	((c:itoa4D@arr)),c
  4711  0004BA  6E0D               	movlw	high(Rx_ISR@DuCyT)
  4712  0004BC  0E00               	movwf	((c:itoa4D@arr+1)),c
  4713  0004BE  6E0E               
  4714                           	movff	(c:Rx_ISR@DuCy),(c:itoa4D@num)
  4715  0004C0  C05C  F00F         	movff	(c:Rx_ISR@DuCy+1),(c:itoa4D@num+1)
  4716  0004C4  C05D  F010         	call	_itoa4D	;wreg free
  4717  0004C8  ECE8  F003         	line	686
  4718                           	
  4719                           i1l2500:
  4720  0004CC                     ;main.c: 686:                 BT_tx_string(DuCyT);
  4721                           		movlw	low(Rx_ISR@DuCyT)
  4722  0004CC  0E56               	movwf	((c:i1BT_tx_string@msg)),c
  4723  0004CE  6E02               	movlw	high(Rx_ISR@DuCyT)
  4724  0004D0  0E00               	movwf	((c:i1BT_tx_string@msg+1)),c
  4725  0004D2  6E03               
  4726                           	call	i1_BT_tx_string	;wreg free
  4727  0004D4  EC7C  F009         	line	687
  4728                           ;main.c: 687:             }
  4729                           	goto	i1l318
  4730  0004D8  EFEB  F002         	line	688
  4731                           ;main.c: 688:             else BT_tx_string("Wrong Answer!!\n");
  4732                           	
  4733                           i1l347:
  4734  0004DC                     	
  4735                           i1l2502:
  4736  0004DC                     		movlw	low(STR_16)
  4737  0004DC  0E42               	movwf	((c:i1BT_tx_string@msg)),c
  4738  0004DE  6E02               	movlw	high(STR_16)
  4739  0004E0  0E7D               	movwf	((c:i1BT_tx_string@msg+1)),c
  4740  0004E2  6E03               
  4741                           	call	i1_BT_tx_string	;wreg free
  4742  0004E4  EC7C  F009         	goto	i1l318
  4743  0004E8  EFEB  F002         	
  4744                           i1l350:
  4745  0004EC                     	line	689
  4746                           ;main.c: 689:             break;
  4747                           	goto	i1l318
  4748  0004EC  EFEB  F002         	line	690
  4749                           	
  4750                           i1l2504:
  4751  0004F0                     ;main.c: 690:     }
  4752                           	goto	i1l318
  4753  0004F0  EFEB  F002         	
  4754                           i1l308:
  4755  0004F4                     	
  4756                           i1l2506:
  4757  0004F4                     	movf	((c:Rx_ISR@RxMessage)),c,w
  4758  0004F4  5036               	movwf	(??_Rx_ISR+0+0)&0ffh,c
  4759  0004F6  6E25               	clrf	(??_Rx_ISR+0+0+1)&0ffh,c
  4760  0004F8  6A26               
  4761                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4762                           ; Switch size 1, requested type "space"
  4763                           ; Number of cases is 1, Range of values is 0 to 0
  4764                           ; switch strategies available:
  4765                           ; Name         Instructions Cycles
  4766                           ; simple_byte            4     3 (average)
  4767                           ;	Chosen strategy is simple_byte
  4768                           
  4769                           	movf ??_Rx_ISR+0+1,c,w
  4770  0004FA  5026               	xorlw	0^0	; case 0
  4771  0004FC  0A00               	skipnz
  4772  0004FE  B4D8               	goto	i1l2552
  4773  000500  EF84  F002         	goto	i1l318
  4774  000504  EFEB  F002         	
  4775                           i1l2552:
  4776  000508                     ; Switch size 1, requested type "space"
  4777                           ; Number of cases is 25, Range of values is 48 to 100
  4778                           ; switch strategies available:
  4779                           ; Name         Instructions Cycles
  4780                           ; simple_byte           76    39 (average)
  4781                           ;	Chosen strategy is simple_byte
  4782                           
  4783                           	movf ??_Rx_ISR+0+0,c,w
  4784  000508  5025               	xorlw	48^0	; case 48
  4785  00050A  0A30               	skipnz
  4786  00050C  B4D8               	goto	i1l2456
  4787  00050E  EF64  F001         	xorlw	49^48	; case 49
  4788  000512  0A01               	skipnz
  4789  000514  B4D8               	goto	i1l2438
  4790  000516  EF0A  F001         	xorlw	50^49	; case 50
  4791  00051A  0A03               	skipnz
  4792  00051C  B4D8               	goto	i1l2440
  4793  00051E  EF14  F001         	xorlw	51^50	; case 51
  4794  000522  0A01               	skipnz
  4795  000524  B4D8               	goto	i1l2442
  4796  000526  EF1E  F001         	xorlw	52^51	; case 52
  4797  00052A  0A07               	skipnz
  4798  00052C  B4D8               	goto	i1l2444
  4799  00052E  EF28  F001         	xorlw	53^52	; case 53
  4800  000532  0A01               	skipnz
  4801  000534  B4D8               	goto	i1l2446
  4802  000536  EF32  F001         	xorlw	54^53	; case 54
  4803  00053A  0A03               	skipnz
  4804  00053C  B4D8               	goto	i1l2448
  4805  00053E  EF3C  F001         	xorlw	55^54	; case 55
  4806  000542  0A01               	skipnz
  4807  000544  B4D8               	goto	i1l2450
  4808  000546  EF46  F001         	xorlw	56^55	; case 56
  4809  00054A  0A0F               	skipnz
  4810  00054C  B4D8               	goto	i1l2452
  4811  00054E  EF50  F001         	xorlw	57^56	; case 57
  4812  000552  0A01               	skipnz
  4813  000554  B4D8               	goto	i1l2454
  4814  000556  EF5A  F001         	xorlw	65^57	; case 65
  4815  00055A  0A78               	skipnz
  4816  00055C  B4D8               	goto	i1l2436
  4817  00055E  EF06  F001         	xorlw	66^65	; case 66
  4818  000562  0A03               	skipnz
  4819  000564  B4D8               	goto	i1l2418
  4820  000566  EFD8  F000         	xorlw	67^66	; case 67
  4821  00056A  0A01               	skipnz
  4822  00056C  B4D8               	goto	i1l2434
  4823  00056E  EF02  F001         	xorlw	68^67	; case 68
  4824  000572  0A07               	skipnz
  4825  000574  B4D8               	goto	i1l2422
  4826  000576  EFE0  F000         	xorlw	70^68	; case 70
  4827  00057A  0A02               	skipnz
  4828  00057C  B4D8               	goto	i1l2416
  4829  00057E  EFD4  F000         	xorlw	73^70	; case 73
  4830  000582  0A0F               	skipnz
  4831  000584  B4D8               	goto	i1l324
  4832  000586  EFFF  F000         	xorlw	76^73	; case 76
  4833  00058A  0A05               	skipnz
  4834  00058C  B4D8               	goto	i1l341
  4835  00058E  EFC1  F001         	xorlw	80^76	; case 80
  4836  000592  0A1C               	skipnz
  4837  000594  B4D8               	goto	i1l2386
  4838  000596  EF50  F000         	xorlw	83^80	; case 83
  4839  00059A  0A03               	skipnz
  4840  00059C  B4D8               	goto	i1l2420
  4841  00059E  EFDC  F000         	xorlw	84^83	; case 84
  4842  0005A2  0A07               	skipnz
  4843  0005A4  B4D8               	goto	i1l2424
  4844  0005A6  EFE4  F000         	xorlw	87^84	; case 87
  4845  0005AA  0A03               	skipnz
  4846  0005AC  B4D8               	goto	i1l2458
  4847  0005AE  EF6D  F001         	xorlw	88^87	; case 88
  4848  0005B2  0A0F               	skipnz
  4849  0005B4  B4D8               	goto	i1l2460
  4850  0005B6  EF82  F001         	xorlw	89^88	; case 89
  4851  0005BA  0A01               	skipnz
  4852  0005BC  B4D8               	goto	i1l2462
  4853  0005BE  EF97  F001         	xorlw	90^89	; case 90
  4854  0005C2  0A03               	skipnz
  4855  0005C4  B4D8               	goto	i1l2464
  4856  0005C6  EFAC  F001         	xorlw	100^90	; case 100
  4857  0005CA  0A3E               	skipnz
  4858  0005CC  B4D8               	goto	i1l2474
  4859  0005CE  EFE2  F001         	goto	i1l318
  4860  0005D2  EFEB  F002         
  4861                           	
  4862                           i1l318:
  4863  0005D6                     	line	691
  4864                           ;main.c: 691:     RCIE=1;
  4865                           	bsf	c:(31981/8),(31981)&7	;volatile
  4866  0005D6  8A9D               	line	692
  4867                           	
  4868                           i1l351:
  4869  0005D8                     	movff	??_Rx_ISR+16,tablat+0
  4870  0005D8  C035  FFF5         	movff	??_Rx_ISR+15,tblptru+0
  4871  0005DC  C034  FFF8         	movff	??_Rx_ISR+14,tblptrh+0
  4872  0005E0  C033  FFF7         	movff	??_Rx_ISR+13,tblptrl+0
  4873  0005E4  C032  FFF6         	movff	??_Rx_ISR+12,prodh+0
  4874  0005E8  C031  FFF4         	movff	??_Rx_ISR+11,prodl+0
  4875  0005EC  C030  FFF3         	movff	??_Rx_ISR+10,fsr2h+0
  4876  0005F0  C02F  FFDA         	movff	??_Rx_ISR+9,fsr2l+0
  4877  0005F4  C02E  FFD9         	movff	??_Rx_ISR+8,fsr1h+0
  4878  0005F8  C02D  FFE2         	movff	??_Rx_ISR+7,fsr1l+0
  4879  0005FC  C02C  FFE1         	movff	??_Rx_ISR+6,fsr0h+0
  4880  000600  C02B  FFEA         	movff	??_Rx_ISR+5,fsr0l+0
  4881  000604  C02A  FFE9         	movff	??_Rx_ISR+4,bsr+0
  4882  000608  C029  FFE0         	movff	??_Rx_ISR+3,wreg+0
  4883  00060C  C028  FFE8         	movff	??_Rx_ISR+2,status+0
  4884  000610  C027  FFD8         	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  4885  000614  906A               	retfie
  4886  000616  0010               	opt stack 0
  4887                           GLOBAL	__end_of_Rx_ISR
  4888                           	__end_of_Rx_ISR:
  4889  000618                     	signat	_Rx_ISR,89
  4890                           	global	i1_M_stop
  4891                           
  4892 ;; *************** function i1_M_stop *****************
  4893 ;; Defined at:
  4894 ;;		line 447 in file "main.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;		None
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;		None
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		wreg, status,2, status,0
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4908 ;;      Params:         0       0       0       0       0       0       0
  4909 ;;      Locals:         0       0       0       0       0       0       0
  4910 ;;      Temps:          0       0       0       0       0       0       0
  4911 ;;      Totals:         0       0       0       0       0       0       0
  4912 ;;Total ram usage:        0 bytes
  4913 ;; Hardware stack levels used:    1
  4914 ;; This function calls:
  4915 ;;		Nothing
  4916 ;; This function is called by:
  4917 ;;		_Rx_ISR
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           psect	text15,class=CODE,space=0,reloc=2,group=0
  4921                           	line	447
  4922                           global __ptext15
  4923                           __ptext15:
  4924  00156E                     psect	text15
  4925                           	file	"main.c"
  4926                           	line	447
  4927                           	global	__size_ofi1_M_stop
  4928                           	__size_ofi1_M_stop	equ	__end_ofi1_M_stop-i1_M_stop
  4929  0000                     	
  4930                           i1_M_stop:
  4931  00156E                     ;incstack = 0
  4932                           	opt	stack 26
  4933                           	line	449
  4934                           	
  4935                           i1l2342:
  4936  00156E                     ;main.c: 449:     LATDbits.LD4=0;LATDbits.LD6=0;LATDbits.LD5=0;LATDbits.LD7=0;
  4937                           	bcf	((c:3980)),c,4	;volatile
  4938  00156E  988C               	bcf	((c:3980)),c,6	;volatile
  4939  001570  9C8C               	bcf	((c:3980)),c,5	;volatile
  4940  001572  9A8C               	bcf	((c:3980)),c,7	;volatile
  4941  001574  9E8C               	line	450
  4942                           	
  4943                           i1l2344:
  4944  001576                     ;main.c: 450:     if(CCPR1L!=CCPR2L)
  4945                           	movf	((c:4027)),c,w	;volatile
  4946  001576  50BB               xorwf	((c:4030)),c,w	;volatile
  4947  001578  18BE               	btfsc	status,2
  4948  00157A  B4D8               	goto	i1u203_21
  4949  00157C  EFC2  F00A         	goto	i1u203_20
  4950  001580  EFC4  F00A         
  4951                           i1u203_21:
  4952  001584                     	goto	i1l259
  4953  001584  EFDA  F00A         i1u203_20:
  4954  001588                     	line	452
  4955                           	
  4956                           i1l2346:
  4957  001588                     ;main.c: 451:     {;main.c: 452:         CCPR2L=CCPR1L;
  4958                           	movff	(c:4030),(c:4027)	;volatile
  4959  001588  CFBE FFBB          	line	453
  4960                           ;main.c: 453:         DC2B1=DC1B1;
  4961                           	btfsc	c:(32237/8),(32237)&7	;volatile
  4962  00158C  BABD               	goto	i1u204_21
  4963  00158E  EFCB  F00A         	goto	i1u204_20
  4964  001592  EFCE  F00A         i1u204_21:
  4965  001596                     	bsf	c:(32213/8),(32213)&7	;volatile
  4966  001596  8ABA               	goto	i1u205_25
  4967  001598  EFCF  F00A         i1u204_20:
  4968  00159C                     	bcf	c:(32213/8),(32213)&7	;volatile
  4969  00159C  9ABA               i1u205_25:
  4970  00159E                     	line	454
  4971                           ;main.c: 454:         DC2B0=DC1B0;
  4972                           	btfsc	c:(32236/8),(32236)&7	;volatile
  4973  00159E  B8BD               	goto	i1u206_21
  4974  0015A0  EFD4  F00A         	goto	i1u206_20
  4975  0015A4  EFD7  F00A         i1u206_21:
  4976  0015A8                     	bsf	c:(32212/8),(32212)&7	;volatile
  4977  0015A8  88BA               	goto	i1u207_25
  4978  0015AA  EFD8  F00A         i1u206_20:
  4979  0015AE                     	bcf	c:(32212/8),(32212)&7	;volatile
  4980  0015AE  98BA               i1u207_25:
  4981  0015B0                     	goto	i1l259
  4982  0015B0  EFDA  F00A         	line	455
  4983                           ;main.c: 455:     }
  4984                           	
  4985                           i1l258:
  4986  0015B4                     	line	456
  4987                           	
  4988                           i1l259:
  4989  0015B4                     	return	;funcret
  4990  0015B4  0012               	opt stack 0
  4991                           GLOBAL	__end_ofi1_M_stop
  4992                           	__end_ofi1_M_stop:
  4993  0015B6                     	signat	i1_M_stop,89
  4994                           	global	_atoi4D
  4995                           
  4996 ;; *************** function _atoi4D *****************
  4997 ;; Defined at:
  4998 ;;		line 724 in file "main.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  arr             2    6[COMRAM] PTR unsigned char 
  5001 ;;		 -> Rx_ISR@RxMessage(32), 
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;  num             2    9[COMRAM] unsigned int 
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  2    6[COMRAM] unsigned int 
  5006 ;; Registers used:
  5007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5013 ;;      Params:         2       0       0       0       0       0       0
  5014 ;;      Locals:         2       0       0       0       0       0       0
  5015 ;;      Temps:          1       0       0       0       0       0       0
  5016 ;;      Totals:         5       0       0       0       0       0       0
  5017 ;;Total ram usage:        5 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    1
  5020 ;; This function calls:
  5021 ;;		___wmul
  5022 ;; This function is called by:
  5023 ;;		_Rx_ISR
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           psect	text16,class=CODE,space=0,reloc=2,group=0
  5027                           	line	724
  5028                           global __ptext16
  5029                           __ptext16:
  5030  000D8E                     psect	text16
  5031                           	file	"main.c"
  5032                           	line	724
  5033                           	global	__size_of_atoi4D
  5034                           	__size_of_atoi4D	equ	__end_of_atoi4D-_atoi4D
  5035  0000                     	
  5036                           _atoi4D:
  5037  000D8E                     ;incstack = 0
  5038                           	opt	stack 25
  5039                           	line	726
  5040                           	
  5041                           i1l2306:
  5042  000D8E                     ;main.c: 724: unsigned int atoi4D(char arr[]);main.c: 725: {;main.c: 726:     unsigned i
                                 nt num=0;
  5043                           	movlw	high(0)
  5044  000D8E  0E00               	movwf	((c:atoi4D@num+1)),c
  5045  000D90  6E0B               	movlw	low(0)
  5046  000D92  0E00               	movwf	((c:atoi4D@num)),c
  5047  000D94  6E0A               	line	727
  5048                           	
  5049                           i1l2308:
  5050  000D96                     ;main.c: 727:     num=(arr[0]&0x0F)*1000;
  5051                           	movff	(c:atoi4D@arr),fsr2l
  5052  000D96  C007  FFD9         	movff	(c:atoi4D@arr+1),fsr2h
  5053  000D9A  C008  FFDA         	movf	indf2,w
  5054  000D9E  50DF               	movwf	(??_atoi4D+0+0)&0ffh,c
  5055  000DA0  6E09               	movlw	0Fh
  5056  000DA2  0E0F               	andwf	((??_atoi4D+0+0)),c
  5057  000DA4  1609               	movf	((??_atoi4D+0+0)),c,w
  5058  000DA6  5009               	movwf	((c:___wmul@multiplier)),c
  5059  000DA8  6E01               	clrf	((c:___wmul@multiplier+1)),c
  5060  000DAA  6A02               	movlw	high(03E8h)
  5061  000DAC  0E03               	movwf	((c:___wmul@multiplicand+1)),c
  5062  000DAE  6E04               	movlw	low(03E8h)
  5063  000DB0  0EE8               	movwf	((c:___wmul@multiplicand)),c
  5064  000DB2  6E03               	call	___wmul	;wreg free
  5065  000DB4  ECD0  F00B         	movff	0+?___wmul,(c:atoi4D@num)
  5066  000DB8  C001  F00A         	movff	1+?___wmul,(c:atoi4D@num+1)
  5067  000DBC  C002  F00B         	line	728
  5068                           	
  5069                           i1l2310:
  5070  000DC0                     ;main.c: 728:     num+=(arr[1]&0x0F)*100;
  5071                           	lfsr	2,01h
  5072  000DC0  EE20 F001          	movf	((c:atoi4D@arr)),c,w
  5073  000DC4  5007               	addwf	fsr2l
  5074  000DC6  26D9               	movf	((c:atoi4D@arr+1)),c,w
  5075  000DC8  5008               	addwfc	fsr2h
  5076  000DCA  22DA               	movf	indf2,w
  5077  000DCC  50DF               	movwf	(??_atoi4D+0+0)&0ffh,c
  5078  000DCE  6E09               	movlw	0Fh
  5079  000DD0  0E0F               	andwf	((??_atoi4D+0+0)),c
  5080  000DD2  1609               	movf	((??_atoi4D+0+0)),c,w
  5081  000DD4  5009               	mullw	064h
  5082  000DD6  0D64               	movf	(prodl),c,w
  5083  000DD8  50F3               	addwf	((c:atoi4D@num)),c
  5084  000DDA  260A               	movf	(prodh),c,w
  5085  000DDC  50F4               	addwfc	((c:atoi4D@num+1)),c
  5086  000DDE  220B               
  5087                           	line	729
  5088                           	
  5089                           i1l2312:
  5090  000DE0                     ;main.c: 729:     num+=(arr[2]&0x0F)*10;
  5091                           	lfsr	2,02h
  5092  000DE0  EE20 F002          	movf	((c:atoi4D@arr)),c,w
  5093  000DE4  5007               	addwf	fsr2l
  5094  000DE6  26D9               	movf	((c:atoi4D@arr+1)),c,w
  5095  000DE8  5008               	addwfc	fsr2h
  5096  000DEA  22DA               	movf	indf2,w
  5097  000DEC  50DF               	movwf	(??_atoi4D+0+0)&0ffh,c
  5098  000DEE  6E09               	movlw	0Fh
  5099  000DF0  0E0F               	andwf	((??_atoi4D+0+0)),c
  5100  000DF2  1609               	movf	((??_atoi4D+0+0)),c,w
  5101  000DF4  5009               	mullw	0Ah
  5102  000DF6  0D0A               	movf	(prodl),c,w
  5103  000DF8  50F3               	addwf	((c:atoi4D@num)),c
  5104  000DFA  260A               	movf	(prodh),c,w
  5105  000DFC  50F4               	addwfc	((c:atoi4D@num+1)),c
  5106  000DFE  220B               
  5107                           	line	730
  5108                           	
  5109                           i1l2314:
  5110  000E00                     ;main.c: 730:     num+=arr[3]&0x0F;
  5111                           	lfsr	2,03h
  5112  000E00  EE20 F003          	movf	((c:atoi4D@arr)),c,w
  5113  000E04  5007               	addwf	fsr2l
  5114  000E06  26D9               	movf	((c:atoi4D@arr+1)),c,w
  5115  000E08  5008               	addwfc	fsr2h
  5116  000E0A  22DA               	movf	indf2,w
  5117  000E0C  50DF               	movwf	(??_atoi4D+0+0)&0ffh,c
  5118  000E0E  6E09               	movlw	0Fh
  5119  000E10  0E0F               	andwf	((??_atoi4D+0+0)),c
  5120  000E12  1609               	movf	((??_atoi4D+0+0)),c,w
  5121  000E14  5009               	addwf	((c:atoi4D@num)),c
  5122  000E16  260A               	movlw	0
  5123  000E18  0E00               	addwfc	((c:atoi4D@num+1)),c
  5124  000E1A  220B               	line	731
  5125                           	
  5126                           i1l2316:
  5127  000E1C                     ;main.c: 731:     return num;
  5128                           	movff	(c:atoi4D@num),(c:?_atoi4D)
  5129  000E1C  C00A  F007         	movff	(c:atoi4D@num+1),(c:?_atoi4D+1)
  5130  000E20  C00B  F008         	goto	i1l366
  5131  000E24  EF14  F007         	
  5132                           i1l2318:
  5133  000E28                     	line	732
  5134                           	
  5135                           i1l366:
  5136  000E28                     	return	;funcret
  5137  000E28  0012               	opt stack 0
  5138                           GLOBAL	__end_of_atoi4D
  5139                           	__end_of_atoi4D:
  5140  000E2A                     	signat	_atoi4D,4218
  5141                           	global	___wmul
  5142                           
  5143 ;; *************** function ___wmul *****************
  5144 ;; Defined at:
  5145 ;;		line 15 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/Umul16.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;  multiplier      2    0[COMRAM] unsigned int 
  5148 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;  product         2    4[COMRAM] unsigned int 
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  2    0[COMRAM] unsigned int 
  5153 ;; Registers used:
  5154 ;;		wreg, status,2, status,0, prodl, prodh
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5160 ;;      Params:         4       0       0       0       0       0       0
  5161 ;;      Locals:         2       0       0       0       0       0       0
  5162 ;;      Temps:          0       0       0       0       0       0       0
  5163 ;;      Totals:         6       0       0       0       0       0       0
  5164 ;;Total ram usage:        6 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; This function calls:
  5167 ;;		Nothing
  5168 ;; This function is called by:
  5169 ;;		_atoi4D
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           psect	text17,class=CODE,space=0,reloc=2,group=1
  5173                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/Umul16.c"
  5174                           	line	15
  5175                           global __ptext17
  5176                           __ptext17:
  5177  0017A0                     psect	text17
  5178                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/Umul16.c"
  5179                           	line	15
  5180                           	global	__size_of___wmul
  5181                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  5182  0000                     	
  5183                           ___wmul:
  5184  0017A0                     ;incstack = 0
  5185                           	opt	stack 25
  5186                           	line	37
  5187                           	
  5188                           i1l2088:
  5189  0017A0                     	movf	((c:___wmul@multiplier)),c,w
  5190  0017A0  5001               	mulwf	((c:___wmul@multiplicand)),c
  5191  0017A2  0203               	movff	prodl,(c:___wmul@product)
  5192  0017A4  CFF3 F005          	movff	prodh,(c:___wmul@product+1)
  5193  0017A8  CFF4 F006          	line	38
  5194                           	movf	((c:___wmul@multiplier)),c,w
  5195  0017AC  5001               	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
  5196  0017AE  0204               	movf	(prodl),c,w
  5197  0017B0  50F3               	addwf	((c:___wmul@product+1)),c
  5198  0017B2  2606               
  5199                           	line	39
  5200                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
  5201  0017B4  5002               	mulwf	((c:___wmul@multiplicand)),c
  5202  0017B6  0203               	movf	(prodl),c,w
  5203  0017B8  50F3               	addwf	((c:___wmul@product+1)),c
  5204  0017BA  2606               
  5205                           	line	52
  5206                           	
  5207                           i1l2090:
  5208  0017BC                     	movff	(c:___wmul@product),(c:?___wmul)
  5209  0017BC  C005  F001         	movff	(c:___wmul@product+1),(c:?___wmul+1)
  5210  0017C0  C006  F002         	goto	i1l369
  5211  0017C4  EFE4  F00B         	
  5212                           i1l2092:
  5213  0017C8                     	line	53
  5214                           	
  5215                           i1l369:
  5216  0017C8                     	return	;funcret
  5217  0017C8  0012               	opt stack 0
  5218                           GLOBAL	__end_of___wmul
  5219                           	__end_of___wmul:
  5220  0017CA                     	signat	___wmul,8314
  5221                           	global	___lldiv
  5222                           
  5223 ;; *************** function ___lldiv *****************
  5224 ;; Defined at:
  5225 ;;		line 7 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/__lldiv.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  dividend        4   12[COMRAM] unsigned long 
  5228 ;;  divisor         4   16[COMRAM] unsigned long 
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;  quotient        4   20[COMRAM] unsigned long 
  5231 ;;  counter         1   24[COMRAM] unsigned char 
  5232 ;; Return value:  Size  Location     Type
  5233 ;;                  4   12[COMRAM] unsigned long 
  5234 ;; Registers used:
  5235 ;;		wreg, status,2, status,0
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5241 ;;      Params:         8       0       0       0       0       0       0
  5242 ;;      Locals:         5       0       0       0       0       0       0
  5243 ;;      Temps:          0       0       0       0       0       0       0
  5244 ;;      Totals:        13       0       0       0       0       0       0
  5245 ;;Total ram usage:       13 bytes
  5246 ;; Hardware stack levels used:    1
  5247 ;; This function calls:
  5248 ;;		Nothing
  5249 ;; This function is called by:
  5250 ;;		_Rx_ISR
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           psect	text18,class=CODE,space=0,reloc=2,group=1
  5254                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/__lldiv.c"
  5255                           	line	7
  5256                           global __ptext18
  5257                           __ptext18:
  5258  000C1E                     psect	text18
  5259                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/__lldiv.c"
  5260                           	line	7
  5261                           	global	__size_of___lldiv
  5262                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  5263  0000                     	
  5264                           ___lldiv:
  5265  000C1E                     ;incstack = 0
  5266                           	opt	stack 26
  5267                           	line	13
  5268                           	
  5269                           i1l2320:
  5270  000C1E                     	movlw	low(0)
  5271  000C1E  0E00               	movwf	((c:___lldiv@quotient)),c
  5272  000C20  6E15               	movlw	high(0)
  5273  000C22  0E00               	movwf	((c:___lldiv@quotient+1)),c
  5274  000C24  6E16               	movlw	low highword(0)
  5275  000C26  0E00               	movwf	((c:___lldiv@quotient+2)),c
  5276  000C28  6E17               	movlw	high highword(0)
  5277  000C2A  0E00               	movwf	((c:___lldiv@quotient+3)),c
  5278  000C2C  6E18               	line	14
  5279                           	
  5280                           i1l2322:
  5281  000C2E                     	movf	((c:___lldiv@divisor)),c,w
  5282  000C2E  5011               iorwf	((c:___lldiv@divisor+1)),c,w
  5283  000C30  1012               iorwf	((c:___lldiv@divisor+2)),c,w
  5284  000C32  1013               iorwf	((c:___lldiv@divisor+3)),c,w
  5285  000C34  1014               	btfsc	status,2
  5286  000C36  B4D8               	goto	i1u200_21
  5287  000C38  EF20  F006         	goto	i1u200_20
  5288  000C3C  EF22  F006         
  5289                           i1u200_21:
  5290  000C40                     	goto	i1l396
  5291  000C40  EF62  F006         i1u200_20:
  5292  000C44                     	line	15
  5293                           	
  5294                           i1l2324:
  5295  000C44                     	movlw	low(01h)
  5296  000C44  0E01               	movwf	((c:___lldiv@counter)),c
  5297  000C46  6E19               	line	16
  5298                           	goto	i1l2328
  5299  000C48  EF2E  F006         	
  5300                           i1l398:
  5301  000C4C                     	line	17
  5302                           	
  5303                           i1l2326:
  5304  000C4C                     	bcf	status,0
  5305  000C4C  90D8               	rlcf	((c:___lldiv@divisor)),c
  5306  000C4E  3611               	rlcf	((c:___lldiv@divisor+1)),c
  5307  000C50  3612               	rlcf	((c:___lldiv@divisor+2)),c
  5308  000C52  3613               	rlcf	((c:___lldiv@divisor+3)),c
  5309  000C54  3614               	line	18
  5310                           	incf	((c:___lldiv@counter)),c
  5311  000C56  2A19               	goto	i1l2328
  5312  000C58  EF2E  F006         	line	19
  5313                           	
  5314                           i1l397:
  5315  000C5C                     	line	16
  5316                           	
  5317                           i1l2328:
  5318  000C5C                     	
  5319                           	btfss	((c:___lldiv@divisor+3)),c,(31)&7
  5320  000C5C  AE14               	goto	i1u201_21
  5321  000C5E  EF33  F006         	goto	i1u201_20
  5322  000C62  EF35  F006         i1u201_21:
  5323  000C66                     	goto	i1l2326
  5324  000C66  EF26  F006         i1u201_20:
  5325  000C6A                     	goto	i1l2330
  5326  000C6A  EF39  F006         	
  5327                           i1l399:
  5328  000C6E                     	goto	i1l2330
  5329  000C6E  EF39  F006         	line	20
  5330                           	
  5331                           i1l400:
  5332  000C72                     	line	21
  5333                           	
  5334                           i1l2330:
  5335  000C72                     	bcf	status,0
  5336  000C72  90D8               	rlcf	((c:___lldiv@quotient)),c
  5337  000C74  3615               	rlcf	((c:___lldiv@quotient+1)),c
  5338  000C76  3616               	rlcf	((c:___lldiv@quotient+2)),c
  5339  000C78  3617               	rlcf	((c:___lldiv@quotient+3)),c
  5340  000C7A  3618               	line	22
  5341                           	
  5342                           i1l2332:
  5343  000C7C                     		movf	((c:___lldiv@divisor)),c,w
  5344  000C7C  5011               	subwf	((c:___lldiv@dividend)),c,w
  5345  000C7E  5C0D               	movf	((c:___lldiv@divisor+1)),c,w
  5346  000C80  5012               	subwfb	((c:___lldiv@dividend+1)),c,w
  5347  000C82  580E               	movf	((c:___lldiv@divisor+2)),c,w
  5348  000C84  5013               	subwfb	((c:___lldiv@dividend+2)),c,w
  5349  000C86  580F               	movf	((c:___lldiv@divisor+3)),c,w
  5350  000C88  5014               	subwfb	((c:___lldiv@dividend+3)),c,w
  5351  000C8A  5810               	btfss	status,0
  5352  000C8C  A0D8               	goto	i1u202_21
  5353  000C8E  EF4B  F006         	goto	i1u202_20
  5354  000C92  EF4D  F006         
  5355                           i1u202_21:
  5356  000C96                     	goto	i1l2338
  5357  000C96  EF58  F006         i1u202_20:
  5358  000C9A                     	line	23
  5359                           	
  5360                           i1l2334:
  5361  000C9A                     	movf	((c:___lldiv@divisor)),c,w
  5362  000C9A  5011               	subwf	((c:___lldiv@dividend)),c
  5363  000C9C  5E0D               	movf	((c:___lldiv@divisor+1)),c,w
  5364  000C9E  5012               	subwfb	((c:___lldiv@dividend+1)),c
  5365  000CA0  5A0E               	movf	((c:___lldiv@divisor+2)),c,w
  5366  000CA2  5013               	subwfb	((c:___lldiv@dividend+2)),c
  5367  000CA4  5A0F               	movf	((c:___lldiv@divisor+3)),c,w
  5368  000CA6  5014               	subwfb	((c:___lldiv@dividend+3)),c
  5369  000CA8  5A10               	line	24
  5370                           	
  5371                           i1l2336:
  5372  000CAA                     	bsf	(0+(0/8)+(c:___lldiv@quotient)),c,(0)&7
  5373  000CAA  8015               	goto	i1l2338
  5374  000CAC  EF58  F006         	line	25
  5375                           	
  5376                           i1l401:
  5377  000CB0                     	line	26
  5378                           	
  5379                           i1l2338:
  5380  000CB0                     	bcf	status,0
  5381  000CB0  90D8               	rrcf	((c:___lldiv@divisor+3)),c
  5382  000CB2  3214               	rrcf	((c:___lldiv@divisor+2)),c
  5383  000CB4  3213               	rrcf	((c:___lldiv@divisor+1)),c
  5384  000CB6  3212               	rrcf	((c:___lldiv@divisor)),c
  5385  000CB8  3211               	line	27
  5386                           	
  5387                           i1l2340:
  5388  000CBA                     	decfsz	((c:___lldiv@counter)),c
  5389  000CBA  2E19               	
  5390                           	goto	i1l2330
  5391  000CBC  EF39  F006         	goto	i1l396
  5392  000CC0  EF62  F006         	
  5393                           i1l402:
  5394  000CC4                     	line	28
  5395                           	
  5396                           i1l396:
  5397  000CC4                     	line	29
  5398                           	movff	(c:___lldiv@quotient),(c:?___lldiv)
  5399  000CC4  C015  F00D         	movff	(c:___lldiv@quotient+1),(c:?___lldiv+1)
  5400  000CC8  C016  F00E         	movff	(c:___lldiv@quotient+2),(c:?___lldiv+2)
  5401  000CCC  C017  F00F         	movff	(c:___lldiv@quotient+3),(c:?___lldiv+3)
  5402  000CD0  C018  F010         	line	30
  5403                           	
  5404                           i1l403:
  5405  000CD4                     	return	;funcret
  5406  000CD4  0012               	opt stack 0
  5407                           GLOBAL	__end_of___lldiv
  5408                           	__end_of___lldiv:
  5409  000CD6                     	signat	___lldiv,8316
  5410                           	global	_US_send_pulse
  5411                           
  5412 ;; *************** function _US_send_pulse *****************
  5413 ;; Defined at:
  5414 ;;		line 315 in file "main.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;		None
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;  dist            5   31[COMRAM] unsigned char [5]
  5419 ;;  i               1   30[COMRAM] unsigned char 
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  1    wreg      void 
  5422 ;; Registers used:
  5423 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5429 ;;      Params:         0       0       0       0       0       0       0
  5430 ;;      Locals:         6       0       0       0       0       0       0
  5431 ;;      Temps:          4       0       0       0       0       0       0
  5432 ;;      Totals:        10       0       0       0       0       0       0
  5433 ;;Total ram usage:       10 bytes
  5434 ;; Hardware stack levels used:    1
  5435 ;; Hardware stack levels required when called:    4
  5436 ;; This function calls:
  5437 ;;		_US_print_distance
  5438 ;;		___aldiv
  5439 ;;		___lmul
  5440 ;;		_itoa4D
  5441 ;; This function is called by:
  5442 ;;		_Rx_ISR
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           psect	text19,class=CODE,space=0,reloc=2,group=0
  5446                           	file	"main.c"
  5447                           	line	315
  5448                           global __ptext19
  5449                           __ptext19:
  5450  000A78                     psect	text19
  5451                           	file	"main.c"
  5452                           	line	315
  5453                           	global	__size_of_US_send_pulse
  5454                           	__size_of_US_send_pulse	equ	__end_of_US_send_pulse-_US_send_pulse
  5455  0000                     	
  5456                           _US_send_pulse:
  5457  000A78                     ;incstack = 0
  5458                           	opt	stack 22
  5459                           	line	317
  5460                           	
  5461                           i1l2218:
  5462  000A78                     ;main.c: 317:     char dist[5],i=0;
  5463                           	movlw	low(0)
  5464  000A78  0E00               	movwf	((c:US_send_pulse@i)),c
  5465  000A7A  6E1F               	line	318
  5466                           ;main.c: 318:     distance=0;
  5467                           	movlw	high(0)
  5468  000A7C  0E00               	movwf	((c:_distance+1)),c	;volatile
  5469  000A7E  6E66               	movlw	low(0)
  5470  000A80  0E00               	movwf	((c:_distance)),c	;volatile
  5471  000A82  6E65               	line	319
  5472                           	
  5473                           i1l2220:
  5474  000A84                     ;main.c: 319:     LATDbits.LD0=1;
  5475                           	bsf	((c:3980)),c,0	;volatile
  5476  000A84  808C               	line	320
  5477                           	
  5478                           i1l2222:
  5479  000A86                     ;main.c: 320:     _delay((unsigned long)((12)*(20000000/4000000.0)));
  5480                           	opt asmopt_push
  5481                           opt asmopt_off
  5482                           	movlw	20
  5483  000A86  0E14               i1u230_27:
  5484  000A88                     decfsz	wreg,f
  5485  000A88  2EE8               	bra	i1u230_27
  5486  000A8A  D7FE               opt asmopt_pop
  5487                           
  5488                           	line	321
  5489                           	
  5490                           i1l2224:
  5491  000A8C                     ;main.c: 321:     LATDbits.LD0=0;
  5492                           	bcf	((c:3980)),c,0	;volatile
  5493  000A8C  908C               	line	322
  5494                           ;main.c: 322:     while(!PORTDbits.RD1);
  5495                           	goto	i1l215
  5496  000A8E  EF49  F005         	
  5497                           i1l216:
  5498  000A92                     	
  5499                           i1l215:
  5500  000A92                     	btfss	((c:3971)),c,1	;volatile
  5501  000A92  A283               	goto	i1u155_21
  5502  000A94  EF4E  F005         	goto	i1u155_20
  5503  000A98  EF50  F005         i1u155_21:
  5504  000A9C                     	goto	i1l215
  5505  000A9C  EF49  F005         i1u155_20:
  5506  000AA0                     	
  5507                           i1l217:
  5508  000AA0                     	line	323
  5509                           ;main.c: 323:     TMR0ON=1;
  5510                           	bsf	c:(32431/8),(32431)&7	;volatile
  5511  000AA0  8ED5               	line	324
  5512                           ;main.c: 324:     while(PORTDbits.RD1);
  5513                           	goto	i1l218
  5514  000AA2  EF53  F005         	
  5515                           i1l219:
  5516  000AA6                     	
  5517                           i1l218:
  5518  000AA6                     	btfsc	((c:3971)),c,1	;volatile
  5519  000AA6  B283               	goto	i1u156_21
  5520  000AA8  EF58  F005         	goto	i1u156_20
  5521  000AAC  EF5A  F005         i1u156_21:
  5522  000AB0                     	goto	i1l218
  5523  000AB0  EF53  F005         i1u156_20:
  5524  000AB4                     	
  5525                           i1l220:
  5526  000AB4                     	line	325
  5527                           ;main.c: 325:     TMR0ON=0;
  5528                           	bcf	c:(32431/8),(32431)&7	;volatile
  5529  000AB4  9ED5               	line	326
  5530                           	
  5531                           i1l2226:
  5532  000AB6                     ;main.c: 326:     distance+=(100000000/20000000)*(TMR0-26472)*343*4*32/(100000*2);
  5533                           	movlw	low(09898h)
  5534  000AB6  0E98               	movwf	(??_US_send_pulse+0+0)&0ffh,c
  5535  000AB8  6E1B               	movlw	high(09898h)
  5536  000ABA  0E98               	movwf	1+(??_US_send_pulse+0+0)&0ffh,c
  5537  000ABC  6E1C               	movff	(c:4054),??_US_send_pulse+2+0	;volatile
  5538  000ABE  CFD6 F01D          	movff	(c:4054+1),??_US_send_pulse+2+0+1	;volatile
  5539  000AC2  CFD7 F01E          	movf	(??_US_send_pulse+0+0),c,w
  5540  000AC6  501B               	addwf	(??_US_send_pulse+2+0),c
  5541  000AC8  261D               	movf	(??_US_send_pulse+0+1),c,w
  5542  000ACA  501C               	addwfc	(??_US_send_pulse+2+1),c
  5543  000ACC  221E               	movff	??_US_send_pulse+2+0,(c:___lmul@multiplier)
  5544  000ACE  C01D  F001         	movff	??_US_send_pulse+2+1,(c:___lmul@multiplier+1)
  5545  000AD2  C01E  F002         	clrf	((c:___lmul@multiplier+2)),c
  5546  000AD6  6A03               	clrf	((c:___lmul@multiplier+3)),c
  5547  000AD8  6A04               
  5548                           	movlw	low(035980h)
  5549  000ADA  0E80               	movwf	((c:___lmul@multiplicand)),c
  5550  000ADC  6E05               	movlw	high(035980h)
  5551  000ADE  0E59               	movwf	((c:___lmul@multiplicand+1)),c
  5552  000AE0  6E06               	movlw	low highword(035980h)
  5553  000AE2  0E03               	movwf	((c:___lmul@multiplicand+2)),c
  5554  000AE4  6E07               	movlw	high highword(035980h)
  5555  000AE6  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  5556  000AE8  6E08               	call	___lmul	;wreg free
  5557  000AEA  EC0F  F009         	movff	0+?___lmul,(c:___aldiv@dividend)
  5558  000AEE  C001  F00D         	movff	1+?___lmul,(c:___aldiv@dividend+1)
  5559  000AF2  C002  F00E         	movff	2+?___lmul,(c:___aldiv@dividend+2)
  5560  000AF6  C003  F00F         	movff	3+?___lmul,(c:___aldiv@dividend+3)
  5561  000AFA  C004  F010         	
  5562                           	movlw	low(030D40h)
  5563  000AFE  0E40               	movwf	((c:___aldiv@divisor)),c
  5564  000B00  6E11               	movlw	high(030D40h)
  5565  000B02  0E0D               	movwf	((c:___aldiv@divisor+1)),c
  5566  000B04  6E12               	movlw	low highword(030D40h)
  5567  000B06  0E03               	movwf	((c:___aldiv@divisor+2)),c
  5568  000B08  6E13               	movlw	high highword(030D40h)
  5569  000B0A  0E00               	movwf	((c:___aldiv@divisor+3)),c
  5570  000B0C  6E14               	call	___aldiv	;wreg free
  5571  000B0E  ECA2  F004         	movf	(0+?___aldiv),c,w
  5572  000B12  500D               	addwf	((c:_distance)),c	;volatile
  5573  000B14  2665               	movf	(1+?___aldiv),c,w
  5574  000B16  500E               	addwfc	((c:_distance+1)),c	;volatile
  5575  000B18  2266               
  5576                           	line	327
  5577                           	
  5578                           i1l2228:
  5579  000B1A                     ;main.c: 327:     TMR0=26472;
  5580                           	movlw	high(06768h)
  5581  000B1A  0E67               	movwf	((c:4054+1)),c	;volatile
  5582  000B1C  6ED7               	movlw	low(06768h)
  5583  000B1E  0E68               	movwf	((c:4054)),c	;volatile
  5584  000B20  6ED6               	line	328
  5585                           	
  5586                           i1l2230:
  5587  000B22                     ;main.c: 328:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  5588                           	opt asmopt_push
  5589                           opt asmopt_off
  5590                           	movlw	25
  5591  000B22  0E19               i1u231_27:
  5592  000B24                     decfsz	wreg,f
  5593  000B24  2EE8               	bra	i1u231_27
  5594  000B26  D7FE               opt asmopt_pop
  5595                           
  5596                           	line	330
  5597                           	
  5598                           i1l2232:
  5599  000B28                     ;main.c: 330:     US_print_distance(distance);
  5600                           	movff	(c:_distance),(c:US_print_distance@dist)	;volatile
  5601  000B28  C065  F012         	movff	(c:_distance+1),(c:US_print_distance@dist+1)	;volatile
  5602  000B2C  C066  F013         	call	_US_print_distance	;wreg free
  5603  000B30  ECE0  F009         	line	331
  5604                           	
  5605                           i1l2234:
  5606  000B34                     ;main.c: 331:     itoa4D(dist,distance);
  5607                           		movlw	low(US_send_pulse@dist)
  5608  000B34  0E20               	movwf	((c:itoa4D@arr)),c
  5609  000B36  6E0D               	movlw	high(US_send_pulse@dist)
  5610  000B38  0E00               	movwf	((c:itoa4D@arr+1)),c
  5611  000B3A  6E0E               
  5612                           	movff	(c:_distance),(c:itoa4D@num)	;volatile
  5613  000B3C  C065  F00F         	movff	(c:_distance+1),(c:itoa4D@num+1)	;volatile
  5614  000B40  C066  F010         	call	_itoa4D	;wreg free
  5615  000B44  ECE8  F003         	line	332
  5616                           	
  5617                           i1l2236:
  5618  000B48                     ;main.c: 332:     _delay((unsigned long)((20)*(20000000/4000.0)));
  5619                           	opt asmopt_push
  5620                           opt asmopt_off
  5621                           movlw	130
  5622  000B48  0E82               movwf	(??_US_send_pulse+0+0)&0ffh,c,f
  5623  000B4A  6E1B               	movlw	222
  5624  000B4C  0EDE               i1u232_27:
  5625  000B4E                     decfsz	wreg,f
  5626  000B4E  2EE8               	bra	i1u232_27
  5627  000B50  D7FE               	decfsz	(??_US_send_pulse+0+0)&0ffh,c,f
  5628  000B52  2E1B               	bra	i1u232_27
  5629  000B54  D7FC               opt asmopt_pop
  5630                           
  5631                           	goto	i1l221
  5632  000B56  EFAD  F005         	line	333
  5633                           	
  5634                           i1l2238:
  5635  000B5A                     	line	334
  5636                           ;main.c: 333:     return;
  5637                           	
  5638                           i1l221:
  5639  000B5A                     	return	;funcret
  5640  000B5A  0012               	opt stack 0
  5641                           GLOBAL	__end_of_US_send_pulse
  5642                           	__end_of_US_send_pulse:
  5643  000B5C                     	signat	_US_send_pulse,89
  5644                           	global	___lmul
  5645                           
  5646 ;; *************** function ___lmul *****************
  5647 ;; Defined at:
  5648 ;;		line 15 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/Umul32.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  multiplier      4    0[COMRAM] unsigned long 
  5651 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;  product         4    8[COMRAM] unsigned long 
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  4    0[COMRAM] unsigned long 
  5656 ;; Registers used:
  5657 ;;		wreg, status,2, status,0
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5663 ;;      Params:         8       0       0       0       0       0       0
  5664 ;;      Locals:         4       0       0       0       0       0       0
  5665 ;;      Temps:          0       0       0       0       0       0       0
  5666 ;;      Totals:        12       0       0       0       0       0       0
  5667 ;;Total ram usage:       12 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_US_send_pulse
  5673 ;;		_Rx_ISR
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           psect	text20,class=CODE,space=0,reloc=2,group=1
  5677                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/Umul32.c"
  5678                           	line	15
  5679                           global __ptext20
  5680                           __ptext20:
  5681  00121E                     psect	text20
  5682                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/Umul32.c"
  5683                           	line	15
  5684                           	global	__size_of___lmul
  5685                           	__size_of___lmul	equ	__end_of___lmul-___lmul
  5686  0000                     	
  5687                           ___lmul:
  5688  00121E                     ;incstack = 0
  5689                           	opt	stack 26
  5690                           	line	119
  5691                           	
  5692                           i1l2094:
  5693  00121E                     	movlw	low(0)
  5694  00121E  0E00               	movwf	((c:___lmul@product)),c
  5695  001220  6E09               	movlw	high(0)
  5696  001222  0E00               	movwf	((c:___lmul@product+1)),c
  5697  001224  6E0A               	movlw	low highword(0)
  5698  001226  0E00               	movwf	((c:___lmul@product+2)),c
  5699  001228  6E0B               	movlw	high highword(0)
  5700  00122A  0E00               	movwf	((c:___lmul@product+3)),c
  5701  00122C  6E0C               	goto	i1l2096
  5702  00122E  EF19  F009         	line	120
  5703                           	
  5704                           i1l378:
  5705  001232                     	line	121
  5706                           	
  5707                           i1l2096:
  5708  001232                     	
  5709                           	btfss	((c:___lmul@multiplier)),c,(0)&7
  5710  001232  A001               	goto	i1u142_21
  5711  001234  EF1E  F009         	goto	i1u142_20
  5712  001238  EF20  F009         i1u142_21:
  5713  00123C                     	goto	i1l2100
  5714  00123C  EF2A  F009         i1u142_20:
  5715  001240                     	line	122
  5716                           	
  5717                           i1l2098:
  5718  001240                     	movf	((c:___lmul@multiplicand)),c,w
  5719  001240  5005               	addwf	((c:___lmul@product)),c
  5720  001242  2609               	movf	((c:___lmul@multiplicand+1)),c,w
  5721  001244  5006               	addwfc	((c:___lmul@product+1)),c
  5722  001246  220A               	movf	((c:___lmul@multiplicand+2)),c,w
  5723  001248  5007               	addwfc	((c:___lmul@product+2)),c
  5724  00124A  220B               	movf	((c:___lmul@multiplicand+3)),c,w
  5725  00124C  5008               	addwfc	((c:___lmul@product+3)),c
  5726  00124E  220C               	goto	i1l2100
  5727  001250  EF2A  F009         	
  5728                           i1l379:
  5729  001254                     	line	123
  5730                           	
  5731                           i1l2100:
  5732  001254                     	bcf	status,0
  5733  001254  90D8               	rlcf	((c:___lmul@multiplicand)),c
  5734  001256  3605               	rlcf	((c:___lmul@multiplicand+1)),c
  5735  001258  3606               	rlcf	((c:___lmul@multiplicand+2)),c
  5736  00125A  3607               	rlcf	((c:___lmul@multiplicand+3)),c
  5737  00125C  3608               	line	124
  5738                           	
  5739                           i1l2102:
  5740  00125E                     	bcf	status,0
  5741  00125E  90D8               	rrcf	((c:___lmul@multiplier+3)),c
  5742  001260  3204               	rrcf	((c:___lmul@multiplier+2)),c
  5743  001262  3203               	rrcf	((c:___lmul@multiplier+1)),c
  5744  001264  3202               	rrcf	((c:___lmul@multiplier)),c
  5745  001266  3201               	line	125
  5746                           	movf	((c:___lmul@multiplier)),c,w
  5747  001268  5001               iorwf	((c:___lmul@multiplier+1)),c,w
  5748  00126A  1002               iorwf	((c:___lmul@multiplier+2)),c,w
  5749  00126C  1003               iorwf	((c:___lmul@multiplier+3)),c,w
  5750  00126E  1004               	btfss	status,2
  5751  001270  A4D8               	goto	i1u143_21
  5752  001272  EF3D  F009         	goto	i1u143_20
  5753  001276  EF3F  F009         
  5754                           i1u143_21:
  5755  00127A                     	goto	i1l2096
  5756  00127A  EF19  F009         i1u143_20:
  5757  00127E                     	
  5758                           i1l380:
  5759  00127E                     	line	128
  5760                           	movff	(c:___lmul@product),(c:?___lmul)
  5761  00127E  C009  F001         	movff	(c:___lmul@product+1),(c:?___lmul+1)
  5762  001282  C00A  F002         	movff	(c:___lmul@product+2),(c:?___lmul+2)
  5763  001286  C00B  F003         	movff	(c:___lmul@product+3),(c:?___lmul+3)
  5764  00128A  C00C  F004         	line	129
  5765                           	
  5766                           i1l381:
  5767  00128E                     	return	;funcret
  5768  00128E  0012               	opt stack 0
  5769                           GLOBAL	__end_of___lmul
  5770                           	__end_of___lmul:
  5771  001290                     	signat	___lmul,8316
  5772                           	global	___aldiv
  5773                           
  5774 ;; *************** function ___aldiv *****************
  5775 ;; Defined at:
  5776 ;;		line 7 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/aldiv.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  dividend        4   12[COMRAM] long 
  5779 ;;  divisor         4   16[COMRAM] long 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  quotient        4   22[COMRAM] long 
  5782 ;;  sign            1   21[COMRAM] unsigned char 
  5783 ;;  counter         1   20[COMRAM] unsigned char 
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  4   12[COMRAM] long 
  5786 ;; Registers used:
  5787 ;;		wreg, status,2, status,0
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5793 ;;      Params:         8       0       0       0       0       0       0
  5794 ;;      Locals:         6       0       0       0       0       0       0
  5795 ;;      Temps:          0       0       0       0       0       0       0
  5796 ;;      Totals:        14       0       0       0       0       0       0
  5797 ;;Total ram usage:       14 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		_US_send_pulse
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           psect	text21,class=CODE,space=0,reloc=2,group=1
  5806                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/aldiv.c"
  5807                           	line	7
  5808                           global __ptext21
  5809                           __ptext21:
  5810  000944                     psect	text21
  5811                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/aldiv.c"
  5812                           	line	7
  5813                           	global	__size_of___aldiv
  5814                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  5815  0000                     	
  5816                           ___aldiv:
  5817  000944                     ;incstack = 0
  5818                           	opt	stack 25
  5819                           	line	13
  5820                           	
  5821                           i1l2104:
  5822  000944                     	movlw	low(0)
  5823  000944  0E00               	movwf	((c:___aldiv@sign)),c
  5824  000946  6E16               	line	14
  5825                           	
  5826                           i1l2106:
  5827  000948                     	btfsc	((c:___aldiv@divisor+3)),c,7
  5828  000948  BE14               	goto	i1u144_20
  5829  00094A  EFAB  F004         	goto	i1u144_21
  5830  00094E  EFA9  F004         
  5831                           i1u144_21:
  5832  000952                     	goto	i1l2112
  5833  000952  EFB7  F004         i1u144_20:
  5834  000956                     	line	15
  5835                           	
  5836                           i1l2108:
  5837  000956                     	comf	((c:___aldiv@divisor+3)),c
  5838  000956  1E14               	comf	((c:___aldiv@divisor+2)),c
  5839  000958  1E13               	comf	((c:___aldiv@divisor+1)),c
  5840  00095A  1E12               	negf	((c:___aldiv@divisor)),c
  5841  00095C  6C11               	movlw	0
  5842  00095E  0E00               	addwfc	((c:___aldiv@divisor+1)),c
  5843  000960  2212               	addwfc	((c:___aldiv@divisor+2)),c
  5844  000962  2213               	addwfc	((c:___aldiv@divisor+3)),c
  5845  000964  2214               	line	16
  5846                           	
  5847                           i1l2110:
  5848  000966                     	movlw	low(01h)
  5849  000966  0E01               	movwf	((c:___aldiv@sign)),c
  5850  000968  6E16               	goto	i1l2112
  5851  00096A  EFB7  F004         	line	17
  5852                           	
  5853                           i1l438:
  5854  00096E                     	line	18
  5855                           	
  5856                           i1l2112:
  5857  00096E                     	btfsc	((c:___aldiv@dividend+3)),c,7
  5858  00096E  BE10               	goto	i1u145_20
  5859  000970  EFBE  F004         	goto	i1u145_21
  5860  000974  EFBC  F004         
  5861                           i1u145_21:
  5862  000978                     	goto	i1l2118
  5863  000978  EFCA  F004         i1u145_20:
  5864  00097C                     	line	19
  5865                           	
  5866                           i1l2114:
  5867  00097C                     	comf	((c:___aldiv@dividend+3)),c
  5868  00097C  1E10               	comf	((c:___aldiv@dividend+2)),c
  5869  00097E  1E0F               	comf	((c:___aldiv@dividend+1)),c
  5870  000980  1E0E               	negf	((c:___aldiv@dividend)),c
  5871  000982  6C0D               	movlw	0
  5872  000984  0E00               	addwfc	((c:___aldiv@dividend+1)),c
  5873  000986  220E               	addwfc	((c:___aldiv@dividend+2)),c
  5874  000988  220F               	addwfc	((c:___aldiv@dividend+3)),c
  5875  00098A  2210               	line	20
  5876                           	
  5877                           i1l2116:
  5878  00098C                     	movlw	(01h)&0ffh
  5879  00098C  0E01               	xorwf	((c:___aldiv@sign)),c
  5880  00098E  1A16               	goto	i1l2118
  5881  000990  EFCA  F004         	line	21
  5882                           	
  5883                           i1l439:
  5884  000994                     	line	22
  5885                           	
  5886                           i1l2118:
  5887  000994                     	movlw	low(0)
  5888  000994  0E00               	movwf	((c:___aldiv@quotient)),c
  5889  000996  6E17               	movlw	high(0)
  5890  000998  0E00               	movwf	((c:___aldiv@quotient+1)),c
  5891  00099A  6E18               	movlw	low highword(0)
  5892  00099C  0E00               	movwf	((c:___aldiv@quotient+2)),c
  5893  00099E  6E19               	movlw	high highword(0)
  5894  0009A0  0E00               	movwf	((c:___aldiv@quotient+3)),c
  5895  0009A2  6E1A               	line	23
  5896                           	
  5897                           i1l2120:
  5898  0009A4                     	movf	((c:___aldiv@divisor)),c,w
  5899  0009A4  5011               iorwf	((c:___aldiv@divisor+1)),c,w
  5900  0009A6  1012               iorwf	((c:___aldiv@divisor+2)),c,w
  5901  0009A8  1013               iorwf	((c:___aldiv@divisor+3)),c,w
  5902  0009AA  1014               	btfsc	status,2
  5903  0009AC  B4D8               	goto	i1u146_21
  5904  0009AE  EFDB  F004         	goto	i1u146_20
  5905  0009B2  EFDD  F004         
  5906                           i1u146_21:
  5907  0009B6                     	goto	i1l2140
  5908  0009B6  EF1F  F005         i1u146_20:
  5909  0009BA                     	line	24
  5910                           	
  5911                           i1l2122:
  5912  0009BA                     	movlw	low(01h)
  5913  0009BA  0E01               	movwf	((c:___aldiv@counter)),c
  5914  0009BC  6E15               	line	25
  5915                           	goto	i1l2126
  5916  0009BE  EFE9  F004         	
  5917                           i1l442:
  5918  0009C2                     	line	26
  5919                           	
  5920                           i1l2124:
  5921  0009C2                     	bcf	status,0
  5922  0009C2  90D8               	rlcf	((c:___aldiv@divisor)),c
  5923  0009C4  3611               	rlcf	((c:___aldiv@divisor+1)),c
  5924  0009C6  3612               	rlcf	((c:___aldiv@divisor+2)),c
  5925  0009C8  3613               	rlcf	((c:___aldiv@divisor+3)),c
  5926  0009CA  3614               	line	27
  5927                           	incf	((c:___aldiv@counter)),c
  5928  0009CC  2A15               	goto	i1l2126
  5929  0009CE  EFE9  F004         	line	28
  5930                           	
  5931                           i1l441:
  5932  0009D2                     	line	25
  5933                           	
  5934                           i1l2126:
  5935  0009D2                     	
  5936                           	btfss	((c:___aldiv@divisor+3)),c,(31)&7
  5937  0009D2  AE14               	goto	i1u147_21
  5938  0009D4  EFEE  F004         	goto	i1u147_20
  5939  0009D8  EFF0  F004         i1u147_21:
  5940  0009DC                     	goto	i1l2124
  5941  0009DC  EFE1  F004         i1u147_20:
  5942  0009E0                     	goto	i1l2128
  5943  0009E0  EFF4  F004         	
  5944                           i1l443:
  5945  0009E4                     	goto	i1l2128
  5946  0009E4  EFF4  F004         	line	29
  5947                           	
  5948                           i1l444:
  5949  0009E8                     	line	30
  5950                           	
  5951                           i1l2128:
  5952  0009E8                     	bcf	status,0
  5953  0009E8  90D8               	rlcf	((c:___aldiv@quotient)),c
  5954  0009EA  3617               	rlcf	((c:___aldiv@quotient+1)),c
  5955  0009EC  3618               	rlcf	((c:___aldiv@quotient+2)),c
  5956  0009EE  3619               	rlcf	((c:___aldiv@quotient+3)),c
  5957  0009F0  361A               	line	31
  5958                           	
  5959                           i1l2130:
  5960  0009F2                     		movf	((c:___aldiv@divisor)),c,w
  5961  0009F2  5011               	subwf	((c:___aldiv@dividend)),c,w
  5962  0009F4  5C0D               	movf	((c:___aldiv@divisor+1)),c,w
  5963  0009F6  5012               	subwfb	((c:___aldiv@dividend+1)),c,w
  5964  0009F8  580E               	movf	((c:___aldiv@divisor+2)),c,w
  5965  0009FA  5013               	subwfb	((c:___aldiv@dividend+2)),c,w
  5966  0009FC  580F               	movf	((c:___aldiv@divisor+3)),c,w
  5967  0009FE  5014               	subwfb	((c:___aldiv@dividend+3)),c,w
  5968  000A00  5810               	btfss	status,0
  5969  000A02  A0D8               	goto	i1u148_21
  5970  000A04  EF06  F005         	goto	i1u148_20
  5971  000A08  EF08  F005         
  5972                           i1u148_21:
  5973  000A0C                     	goto	i1l2136
  5974  000A0C  EF13  F005         i1u148_20:
  5975  000A10                     	line	32
  5976                           	
  5977                           i1l2132:
  5978  000A10                     	movf	((c:___aldiv@divisor)),c,w
  5979  000A10  5011               	subwf	((c:___aldiv@dividend)),c
  5980  000A12  5E0D               	movf	((c:___aldiv@divisor+1)),c,w
  5981  000A14  5012               	subwfb	((c:___aldiv@dividend+1)),c
  5982  000A16  5A0E               	movf	((c:___aldiv@divisor+2)),c,w
  5983  000A18  5013               	subwfb	((c:___aldiv@dividend+2)),c
  5984  000A1A  5A0F               	movf	((c:___aldiv@divisor+3)),c,w
  5985  000A1C  5014               	subwfb	((c:___aldiv@dividend+3)),c
  5986  000A1E  5A10               	line	33
  5987                           	
  5988                           i1l2134:
  5989  000A20                     	bsf	(0+(0/8)+(c:___aldiv@quotient)),c,(0)&7
  5990  000A20  8017               	goto	i1l2136
  5991  000A22  EF13  F005         	line	34
  5992                           	
  5993                           i1l445:
  5994  000A26                     	line	35
  5995                           	
  5996                           i1l2136:
  5997  000A26                     	bcf	status,0
  5998  000A26  90D8               	rrcf	((c:___aldiv@divisor+3)),c
  5999  000A28  3214               	rrcf	((c:___aldiv@divisor+2)),c
  6000  000A2A  3213               	rrcf	((c:___aldiv@divisor+1)),c
  6001  000A2C  3212               	rrcf	((c:___aldiv@divisor)),c
  6002  000A2E  3211               	line	36
  6003                           	
  6004                           i1l2138:
  6005  000A30                     	decfsz	((c:___aldiv@counter)),c
  6006  000A30  2E15               	
  6007                           	goto	i1l2128
  6008  000A32  EFF4  F004         	goto	i1l2140
  6009  000A36  EF1F  F005         	
  6010                           i1l446:
  6011  000A3A                     	goto	i1l2140
  6012  000A3A  EF1F  F005         	line	37
  6013                           	
  6014                           i1l440:
  6015  000A3E                     	line	38
  6016                           	
  6017                           i1l2140:
  6018  000A3E                     	movf	((c:___aldiv@sign)),c,w
  6019  000A3E  5016               	btfsc	status,2
  6020  000A40  B4D8               	goto	i1u149_21
  6021  000A42  EF25  F005         	goto	i1u149_20
  6022  000A46  EF27  F005         i1u149_21:
  6023  000A4A                     	goto	i1l2144
  6024  000A4A  EF31  F005         i1u149_20:
  6025  000A4E                     	line	39
  6026                           	
  6027                           i1l2142:
  6028  000A4E                     	comf	((c:___aldiv@quotient+3)),c
  6029  000A4E  1E1A               	comf	((c:___aldiv@quotient+2)),c
  6030  000A50  1E19               	comf	((c:___aldiv@quotient+1)),c
  6031  000A52  1E18               	negf	((c:___aldiv@quotient)),c
  6032  000A54  6C17               	movlw	0
  6033  000A56  0E00               	addwfc	((c:___aldiv@quotient+1)),c
  6034  000A58  2218               	addwfc	((c:___aldiv@quotient+2)),c
  6035  000A5A  2219               	addwfc	((c:___aldiv@quotient+3)),c
  6036  000A5C  221A               	goto	i1l2144
  6037  000A5E  EF31  F005         	
  6038                           i1l447:
  6039  000A62                     	line	40
  6040                           	
  6041                           i1l2144:
  6042  000A62                     	movff	(c:___aldiv@quotient),(c:?___aldiv)
  6043  000A62  C017  F00D         	movff	(c:___aldiv@quotient+1),(c:?___aldiv+1)
  6044  000A66  C018  F00E         	movff	(c:___aldiv@quotient+2),(c:?___aldiv+2)
  6045  000A6A  C019  F00F         	movff	(c:___aldiv@quotient+3),(c:?___aldiv+3)
  6046  000A6E  C01A  F010         	goto	i1l448
  6047  000A72  EF3B  F005         	
  6048                           i1l2146:
  6049  000A76                     	line	41
  6050                           	
  6051                           i1l448:
  6052  000A76                     	return	;funcret
  6053  000A76  0012               	opt stack 0
  6054                           GLOBAL	__end_of___aldiv
  6055                           	__end_of___aldiv:
  6056  000A78                     	signat	___aldiv,8316
  6057                           	global	_US_print_distance
  6058                           
  6059 ;; *************** function _US_print_distance *****************
  6060 ;; Defined at:
  6061 ;;		line 336 in file "main.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;  dist            2   17[COMRAM] unsigned int 
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;  dist4D          5   19[COMRAM] unsigned char [5]
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  1    wreg      void 
  6068 ;; Registers used:
  6069 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6075 ;;      Params:         2       0       0       0       0       0       0
  6076 ;;      Locals:         5       0       0       0       0       0       0
  6077 ;;      Temps:          0       0       0       0       0       0       0
  6078 ;;      Totals:         7       0       0       0       0       0       0
  6079 ;;Total ram usage:        7 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; Hardware stack levels required when called:    3
  6082 ;; This function calls:
  6083 ;;		_itoa4D
  6084 ;;		i1_BT_tx_char
  6085 ;;		i1_BT_tx_string
  6086 ;;		i1_LCD_command
  6087 ;;		i1_LCD_string_xy
  6088 ;; This function is called by:
  6089 ;;		_US_send_pulse
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           psect	text22,class=CODE,space=0,reloc=2,group=0
  6093                           	file	"main.c"
  6094                           	line	336
  6095                           global __ptext22
  6096                           __ptext22:
  6097  0013C0                     psect	text22
  6098                           	file	"main.c"
  6099                           	line	336
  6100                           	global	__size_of_US_print_distance
  6101                           	__size_of_US_print_distance	equ	__end_of_US_print_distance-_US_print_distance
  6102  0000                     	
  6103                           _US_print_distance:
  6104  0013C0                     ;incstack = 0
  6105                           	opt	stack 22
  6106                           	line	339
  6107                           	
  6108                           i1l2058:
  6109  0013C0                     ;main.c: 336: void US_print_distance(unsigned int dist);main.c: 337: {;main.c: 338:     
                                 char dist4D[5];;main.c: 339:     itoa4D(dist4D,dist);
  6110                           		movlw	low(US_print_distance@dist4D)
  6111  0013C0  0E14               	movwf	((c:itoa4D@arr)),c
  6112  0013C2  6E0D               	movlw	high(US_print_distance@dist4D)
  6113  0013C4  0E00               	movwf	((c:itoa4D@arr+1)),c
  6114  0013C6  6E0E               
  6115                           	movff	(c:US_print_distance@dist),(c:itoa4D@num)
  6116  0013C8  C012  F00F         	movff	(c:US_print_distance@dist+1),(c:itoa4D@num+1)
  6117  0013CC  C013  F010         	call	_itoa4D	;wreg free
  6118  0013D0  ECE8  F003         	line	340
  6119                           	
  6120                           i1l2060:
  6121  0013D4                     ;main.c: 340:     LCD_command(0x01);
  6122                           	movlw	(01h)&0ffh
  6123  0013D4  0E01               	
  6124                           	call	i1_LCD_command
  6125  0013D6  ECD5  F008         	line	341
  6126                           	
  6127                           i1l2062:
  6128  0013DA                     ;main.c: 341:     LCD_string_xy(1,1,"Distance (mm):");
  6129                           	movlw	low(01h)
  6130  0013DA  0E01               	movwf	((c:i1LCD_string_xy@pos)),c
  6131  0013DC  6E07               		movlw	low(STR_7)
  6132  0013DE  0E71               	movwf	((c:i1LCD_string_xy@msg)),c
  6133  0013E0  6E08               	movlw	high(STR_7)
  6134  0013E2  0E7D               	movwf	((c:i1LCD_string_xy@msg+1)),c
  6135  0013E4  6E09               
  6136                           	movlw	(01h)&0ffh
  6137  0013E6  0E01               	
  6138                           	call	i1_LCD_string_xy
  6139  0013E8  EC11  F00A         	line	342
  6140                           	
  6141                           i1l2064:
  6142  0013EC                     ;main.c: 342:     LCD_string_xy(2,7,dist4D);
  6143                           	movlw	low(07h)
  6144  0013EC  0E07               	movwf	((c:i1LCD_string_xy@pos)),c
  6145  0013EE  6E07               		movlw	low(US_print_distance@dist4D)
  6146  0013F0  0E14               	movwf	((c:i1LCD_string_xy@msg)),c
  6147  0013F2  6E08               	movlw	high(US_print_distance@dist4D)
  6148  0013F4  0E00               	movwf	((c:i1LCD_string_xy@msg+1)),c
  6149  0013F6  6E09               
  6150                           	movlw	(02h)&0ffh
  6151  0013F8  0E02               	
  6152                           	call	i1_LCD_string_xy
  6153  0013FA  EC11  F00A         	line	343
  6154                           	
  6155                           i1l2066:
  6156  0013FE                     ;main.c: 343:     BT_tx_string("Distance (mm):");
  6157                           		movlw	low(STR_8)
  6158  0013FE  0E71               	movwf	((c:i1BT_tx_string@msg)),c
  6159  001400  6E02               	movlw	high(STR_8)
  6160  001402  0E7D               	movwf	((c:i1BT_tx_string@msg+1)),c
  6161  001404  6E03               
  6162                           	call	i1_BT_tx_string	;wreg free
  6163  001406  EC7C  F009         	line	344
  6164                           	
  6165                           i1l2068:
  6166  00140A                     ;main.c: 344:     BT_tx_string(dist4D);
  6167                           		movlw	low(US_print_distance@dist4D)
  6168  00140A  0E14               	movwf	((c:i1BT_tx_string@msg)),c
  6169  00140C  6E02               	movlw	high(US_print_distance@dist4D)
  6170  00140E  0E00               	movwf	((c:i1BT_tx_string@msg+1)),c
  6171  001410  6E03               
  6172                           	call	i1_BT_tx_string	;wreg free
  6173  001412  EC7C  F009         	line	345
  6174                           	
  6175                           i1l2070:
  6176  001416                     ;main.c: 345:     BT_tx_char('\n');
  6177                           	movlw	(0Ah)&0ffh
  6178  001416  0E0A               	
  6179                           	call	i1_BT_tx_char
  6180  001418  EC09  F00C         	goto	i1l224
  6181  00141C  EF10  F00A         	line	346
  6182                           	
  6183                           i1l2072:
  6184  001420                     	line	347
  6185                           ;main.c: 346:     return;
  6186                           	
  6187                           i1l224:
  6188  001420                     	return	;funcret
  6189  001420  0012               	opt stack 0
  6190                           GLOBAL	__end_of_US_print_distance
  6191                           	__end_of_US_print_distance:
  6192  001422                     	signat	_US_print_distance,4217
  6193                           	global	i1_LCD_string_xy
  6194                           
  6195 ;; *************** function i1_LCD_string_xy *****************
  6196 ;; Defined at:
  6197 ;;		line 262 in file "main.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;  row             1    wreg     unsigned char 
  6200 ;;  pos             1    6[COMRAM] unsigned char 
  6201 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  6202 ;;		 -> STR_11(5), Rx_ISR@RxMessage(32), STR_7(15), US_print_distance@dist4D(5), 
  6203 ;;		 -> STR_5(13), STR_3(16), STR_1(14), 
  6204 ;; Auto vars:     Size  Location     Type
  6205 ;;  row             1   10[COMRAM] unsigned char 
  6206 ;;  LCD_string_x    1   11[COMRAM] unsigned char 
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  1    wreg      void 
  6209 ;; Registers used:
  6210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6216 ;;      Params:         3       0       0       0       0       0       0
  6217 ;;      Locals:         2       0       0       0       0       0       0
  6218 ;;      Temps:          1       0       0       0       0       0       0
  6219 ;;      Totals:         6       0       0       0       0       0       0
  6220 ;;Total ram usage:        6 bytes
  6221 ;; Hardware stack levels used:    1
  6222 ;; Hardware stack levels required when called:    2
  6223 ;; This function calls:
  6224 ;;		i1_LCD_command
  6225 ;;		i1_LCD_string
  6226 ;; This function is called by:
  6227 ;;		_US_print_distance
  6228 ;;		_Rx_ISR
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           psect	text23,class=CODE,space=0,reloc=2,group=0
  6232                           	line	262
  6233                           global __ptext23
  6234                           __ptext23:
  6235  001422                     psect	text23
  6236                           	file	"main.c"
  6237                           	line	262
  6238                           	global	__size_ofi1_LCD_string_xy
  6239                           	__size_ofi1_LCD_string_xy	equ	__end_ofi1_LCD_string_xy-i1_LCD_string_xy
  6240  0000                     	
  6241                           i1_LCD_string_xy:
  6242  001422                     ;incstack = 0
  6243                           	opt	stack 24
  6244                           ;i1LCD_string_xy@row stored from wreg
  6245                           	movwf	((c:i1LCD_string_xy@row)),c
  6246  001422  6E0B               	line	264
  6247                           	
  6248                           i1l1998:
  6249  001424                     ;main.c: 262: void LCD_string_xy(char row,char pos,const char *msg);main.c: 263: {;main.
                                 c: 264:     char location=0;
  6250                           	movlw	low(0)
  6251  001424  0E00               	movwf	((c:i1LCD_string_xy@location)),c
  6252  001426  6E0C               	line	265
  6253                           	
  6254                           i1l2000:
  6255  001428                     ;main.c: 265:     if(row<=1)
  6256                           		movlw	02h-0
  6257  001428  0E02               	cpfslt	((c:i1LCD_string_xy@row)),c
  6258  00142A  600B               	goto	i1u126_21
  6259  00142C  EF1A  F00A         	goto	i1u126_20
  6260  001430  EF1C  F00A         
  6261                           i1u126_21:
  6262  001434                     	goto	i1l2006
  6263  001434  EF29  F00A         i1u126_20:
  6264  001438                     	line	267
  6265                           	
  6266                           i1l2002:
  6267  001438                     ;main.c: 266:     {;main.c: 267:         location=((0x80) | ((pos) & 0x0f))-1;
  6268                           	movff	(c:i1LCD_string_xy@pos),??i1_LCD_string_xy+0+0
  6269  001438  C007  F00A         	movlw	0Fh
  6270  00143C  0E0F               	andwf	(??i1_LCD_string_xy+0+0),c
  6271  00143E  160A               	movlw	080h
  6272  001440  0E80               	iorwf	(??i1_LCD_string_xy+0+0),c
  6273  001442  120A               	decf	(??i1_LCD_string_xy+0+0),c,w
  6274  001444  040A               	movwf	((c:i1LCD_string_xy@location)),c
  6275  001446  6E0C               	line	268
  6276                           	
  6277                           i1l2004:
  6278  001448                     ;main.c: 268:         LCD_command(location);
  6279                           	movf	((c:i1LCD_string_xy@location)),c,w
  6280  001448  500C               	
  6281                           	call	i1_LCD_command
  6282  00144A  ECD5  F008         	line	269
  6283                           ;main.c: 269:     }
  6284                           	goto	i1l2010
  6285  00144E  EF36  F00A         	line	270
  6286                           ;main.c: 270:     else
  6287                           	
  6288                           i1l204:
  6289  001452                     	line	272
  6290                           	
  6291                           i1l2006:
  6292  001452                     ;main.c: 271:     {;main.c: 272:         location=((0xC0) | ((pos) & 0x0f))-1;
  6293                           	movff	(c:i1LCD_string_xy@pos),??i1_LCD_string_xy+0+0
  6294  001452  C007  F00A         	movlw	0Fh
  6295  001456  0E0F               	andwf	(??i1_LCD_string_xy+0+0),c
  6296  001458  160A               	movlw	0C0h
  6297  00145A  0EC0               	iorwf	(??i1_LCD_string_xy+0+0),c
  6298  00145C  120A               	decf	(??i1_LCD_string_xy+0+0),c,w
  6299  00145E  040A               	movwf	((c:i1LCD_string_xy@location)),c
  6300  001460  6E0C               	line	273
  6301                           	
  6302                           i1l2008:
  6303  001462                     ;main.c: 273:         LCD_command(location);
  6304                           	movf	((c:i1LCD_string_xy@location)),c,w
  6305  001462  500C               	
  6306                           	call	i1_LCD_command
  6307  001464  ECD5  F008         	goto	i1l2010
  6308  001468  EF36  F00A         	line	274
  6309                           ;main.c: 274:     }
  6310                           	
  6311                           i1l205:
  6312  00146C                     	line	275
  6313                           	
  6314                           i1l2010:
  6315  00146C                     ;main.c: 275:     LCD_string(msg);
  6316                           		movff	(c:i1LCD_string_xy@msg),(c:i1LCD_string@msg)
  6317  00146C  C008  F004         	movff	(c:i1LCD_string_xy@msg+1),(c:i1LCD_string@msg+1)
  6318  001470  C009  F005         
  6319                           	call	i1_LCD_string	;wreg free
  6320  001474  EC5B  F007         	goto	i1l206
  6321  001478  EF3E  F00A         	line	276
  6322                           	
  6323                           i1l2012:
  6324  00147C                     	line	277
  6325                           ;main.c: 276:     return;
  6326                           	
  6327                           i1l206:
  6328  00147C                     	return	;funcret
  6329  00147C  0012               	opt stack 0
  6330                           GLOBAL	__end_ofi1_LCD_string_xy
  6331                           	__end_ofi1_LCD_string_xy:
  6332  00147E                     	signat	i1_LCD_string_xy,89
  6333                           	global	i1_LCD_string
  6334                           
  6335 ;; *************** function i1_LCD_string *****************
  6336 ;; Defined at:
  6337 ;;		line 249 in file "main.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  msg             2    3[COMRAM] PTR const unsigned char 
  6340 ;;		 -> STR_11(5), Rx_ISR@RxMessage(32), STR_7(15), US_print_distance@dist4D(5), 
  6341 ;;		 -> STR_5(13), STR_3(16), STR_1(14), 
  6342 ;; Auto vars:     Size  Location     Type
  6343 ;;  LCD_string      1    5[COMRAM] unsigned char 
  6344 ;; Return value:  Size  Location     Type
  6345 ;;                  1    wreg      void 
  6346 ;; Registers used:
  6347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6348 ;; Tracked objects:
  6349 ;;		On entry : 0/0
  6350 ;;		On exit  : 0/0
  6351 ;;		Unchanged: 0/0
  6352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6353 ;;      Params:         2       0       0       0       0       0       0
  6354 ;;      Locals:         1       0       0       0       0       0       0
  6355 ;;      Temps:          0       0       0       0       0       0       0
  6356 ;;      Totals:         3       0       0       0       0       0       0
  6357 ;;Total ram usage:        3 bytes
  6358 ;; Hardware stack levels used:    1
  6359 ;; Hardware stack levels required when called:    1
  6360 ;; This function calls:
  6361 ;;		i1_LCD_char
  6362 ;;		i1_LCD_command
  6363 ;; This function is called by:
  6364 ;;		i1_LCD_string_xy
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           psect	text24,class=CODE,space=0,reloc=2,group=0
  6368                           	line	249
  6369                           global __ptext24
  6370                           __ptext24:
  6371  000EB6                     psect	text24
  6372                           	file	"main.c"
  6373                           	line	249
  6374                           	global	__size_ofi1_LCD_string
  6375                           	__size_ofi1_LCD_string	equ	__end_ofi1_LCD_string-i1_LCD_string
  6376  0000                     	
  6377                           i1_LCD_string:
  6378  000EB6                     ;incstack = 0
  6379                           	opt	stack 24
  6380                           	line	251
  6381                           	
  6382                           i1l1900:
  6383  000EB6                     ;main.c: 249: void LCD_string(const char *msg);main.c: 250: {;main.c: 251:     unsigned 
                                 char i=0;
  6384                           	movlw	low(0)
  6385  000EB6  0E00               	movwf	((c:i1LCD_string@i)),c
  6386  000EB8  6E06               	line	252
  6387                           ;main.c: 252:     while((*msg)!=0)
  6388                           	goto	i1l1912
  6389  000EBA  EF84  F007         	
  6390                           i1l198:
  6391  000EBE                     	line	254
  6392                           	
  6393                           i1l1902:
  6394  000EBE                     ;main.c: 253:     {;main.c: 254:         LCD_char(*msg);
  6395                           	movff	(c:i1LCD_string@msg),tblptrl
  6396  000EBE  C004  FFF6         	movff	(c:i1LCD_string@msg+1),tblptrh
  6397  000EC2  C005  FFF7         	clrf	tblptru
  6398  000EC6  6AF8               	
  6399                           	movlw	high __ramtop-1
  6400  000EC8  0E05               	cpfsgt	tblptrh
  6401  000ECA  64F7               	bra	i1u118_27
  6402  000ECC  D003               	tblrd	*
  6403  000ECE  0008               	
  6404                           	movf	tablat,w
  6405  000ED0  50F5               	bra	i1u118_20
  6406  000ED2  D005               i1u118_27:
  6407  000ED4                     	movff	tblptrl,fsr0l
  6408  000ED4  CFF6 FFE9          	movff	tblptrh,fsr0h
  6409  000ED8  CFF7 FFEA          	movf	indf0,w
  6410  000EDC  50EF               i1u118_20:
  6411  000EDE                     	
  6412                           	call	i1_LCD_char
  6413  000EDE  EC9B  F008         	line	255
  6414                           	
  6415                           i1l1904:
  6416  000EE2                     ;main.c: 255:         msg++;
  6417                           	infsnz	((c:i1LCD_string@msg)),c
  6418  000EE2  4A04               	incf	((c:i1LCD_string@msg+1)),c
  6419  000EE4  2A05               	line	256
  6420                           	
  6421                           i1l1906:
  6422  000EE6                     ;main.c: 256:         i++;
  6423                           	incf	((c:i1LCD_string@i)),c
  6424  000EE6  2A06               	line	257
  6425                           	
  6426                           i1l1908:
  6427  000EE8                     ;main.c: 257:         if(i==16) LCD_command(0xC0);
  6428                           		movlw	16
  6429  000EE8  0E10               	xorwf	((c:i1LCD_string@i)),c,w
  6430  000EEA  1806               	btfss	status,2
  6431  000EEC  A4D8               	goto	i1u119_21
  6432  000EEE  EF7B  F007         	goto	i1u119_20
  6433  000EF2  EF7D  F007         
  6434                           i1u119_21:
  6435  000EF6                     	goto	i1l1912
  6436  000EF6  EF84  F007         i1u119_20:
  6437  000EFA                     	
  6438                           i1l1910:
  6439  000EFA                     	movlw	(0C0h)&0ffh
  6440  000EFA  0EC0               	
  6441                           	call	i1_LCD_command
  6442  000EFC  ECD5  F008         	goto	i1l1912
  6443  000F00  EF84  F007         	
  6444                           i1l199:
  6445  000F04                     	goto	i1l1912
  6446  000F04  EF84  F007         	line	258
  6447                           ;main.c: 258:     }
  6448                           	
  6449                           i1l197:
  6450  000F08                     	line	252
  6451                           	
  6452                           i1l1912:
  6453  000F08                     ;main.c: 252:     while((*msg)!=0)
  6454                           	movff	(c:i1LCD_string@msg),tblptrl
  6455  000F08  C004  FFF6         	movff	(c:i1LCD_string@msg+1),tblptrh
  6456  000F0C  C005  FFF7         	clrf	tblptru
  6457  000F10  6AF8               	
  6458                           	movlw	high __ramtop-1
  6459  000F12  0E05               	cpfsgt	tblptrh
  6460  000F14  64F7               	bra	i1u120_27
  6461  000F16  D003               	tblrd	*
  6462  000F18  0008               	
  6463                           	movf	tablat,w
  6464  000F1A  50F5               	bra	i1u120_20
  6465  000F1C  D005               i1u120_27:
  6466  000F1E                     	movff	tblptrl,fsr0l
  6467  000F1E  CFF6 FFE9          	movff	tblptrh,fsr0h
  6468  000F22  CFF7 FFEA          	movf	indf0,w
  6469  000F26  50EF               i1u120_20:
  6470  000F28                     	iorlw	0
  6471  000F28  0900               	btfss	status,2
  6472  000F2A  A4D8               	goto	i1u121_21
  6473  000F2C  EF9A  F007         	goto	i1u121_20
  6474  000F30  EF9C  F007         i1u121_21:
  6475  000F34                     	goto	i1l1902
  6476  000F34  EF5F  F007         i1u121_20:
  6477  000F38                     	goto	i1l201
  6478  000F38  EF9E  F007         	
  6479                           i1l200:
  6480  000F3C                     	line	260
  6481                           ;main.c: 259:     return;
  6482                           	
  6483                           i1l201:
  6484  000F3C                     	return	;funcret
  6485  000F3C  0012               	opt stack 0
  6486                           GLOBAL	__end_ofi1_LCD_string
  6487                           	__end_ofi1_LCD_string:
  6488  000F3E                     	signat	i1_LCD_string,89
  6489                           	global	i1_LCD_char
  6490                           
  6491 ;; *************** function i1_LCD_char *****************
  6492 ;; Defined at:
  6493 ;;		line 228 in file "main.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;  dat             1    wreg     unsigned char 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  dat             1    2[COMRAM] unsigned char 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  1    wreg      void 
  6500 ;; Registers used:
  6501 ;;		wreg, status,2, status,0
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6507 ;;      Params:         0       0       0       0       0       0       0
  6508 ;;      Locals:         1       0       0       0       0       0       0
  6509 ;;      Temps:          2       0       0       0       0       0       0
  6510 ;;      Totals:         3       0       0       0       0       0       0
  6511 ;;Total ram usage:        3 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; This function calls:
  6514 ;;		Nothing
  6515 ;; This function is called by:
  6516 ;;		i1_LCD_string
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           psect	text25,class=CODE,space=0,reloc=2,group=0
  6520                           	line	228
  6521                           global __ptext25
  6522                           __ptext25:
  6523  001136                     psect	text25
  6524                           	file	"main.c"
  6525                           	line	228
  6526                           	global	__size_ofi1_LCD_char
  6527                           	__size_ofi1_LCD_char	equ	__end_ofi1_LCD_char-i1_LCD_char
  6528  0000                     	
  6529                           i1_LCD_char:
  6530  001136                     ;incstack = 0
  6531                           	opt	stack 24
  6532                           ;i1LCD_char@dat stored from wreg
  6533                           	movwf	((c:i1LCD_char@dat)),c
  6534  001136  6E03               	line	230
  6535                           	
  6536                           i1l1830:
  6537  001138                     ;main.c: 228: void LCD_char(unsigned char dat);main.c: 229: {;main.c: 230:     nibble=da
                                 t;
  6538                           	movff	(c:i1LCD_char@dat),(c:_nibble)	;volatile
  6539  001138  C003  F067         	line	231
  6540                           	
  6541                           i1l1832:
  6542  00113C                     ;main.c: 231:     LATB = (0xF0 & nibble)>>2;
  6543                           	rrncf	((c:_nibble)),c,w	;volatile
  6544  00113C  4067               	rrncf	wreg
  6545  00113E  42E8               	andlw	(0ffh shr 2) & 0ffh
  6546  001140  0B3F               	andlw	low(03Ch)
  6547  001142  0B3C               	movwf	((c:3978)),c	;volatile
  6548  001144  6E8A               	line	232
  6549                           	
  6550                           i1l1834:
  6551  001146                     ;main.c: 232:     LATBbits.LB0 = 1;
  6552                           	bsf	((c:3978)),c,0	;volatile
  6553  001146  808A               	line	233
  6554                           	
  6555                           i1l1836:
  6556  001148                     ;main.c: 233:     __nop();
  6557                           	opt	asmopt_push
  6558                           	opt	asmopt_off
  6559                           	nop
  6560  001148  F000               	opt	asmopt_pop
  6561                           	line	234
  6562                           	
  6563                           i1l1838:
  6564  00114A                     ;main.c: 234:     LATBbits.LB1 = 1;
  6565                           	bsf	((c:3978)),c,1	;volatile
  6566  00114A  828A               	line	235
  6567                           	
  6568                           i1l1840:
  6569  00114C                     ;main.c: 235:     __nop();
  6570                           	opt	asmopt_push
  6571                           	opt	asmopt_off
  6572                           	nop
  6573  00114C  F000               	opt	asmopt_pop
  6574                           	line	236
  6575                           	
  6576                           i1l1842:
  6577  00114E                     ;main.c: 236:     LATBbits.LB1 = 0;
  6578                           	bcf	((c:3978)),c,1	;volatile
  6579  00114E  928A               	line	237
  6580                           	
  6581                           i1l1844:
  6582  001150                     ;main.c: 237:     _delay((unsigned long)((1)*(20000000/4000.0)));
  6583                           	opt asmopt_push
  6584                           opt asmopt_off
  6585                           movlw	7
  6586  001150  0E07               movwf	(??i1_LCD_char+0+0)&0ffh,c,f
  6587  001152  6E01               	movlw	125
  6588  001154  0E7D               i1u233_27:
  6589  001156                     decfsz	wreg,f
  6590  001156  2EE8               	bra	i1u233_27
  6591  001158  D7FE               	decfsz	(??i1_LCD_char+0+0)&0ffh,c,f
  6592  00115A  2E01               	bra	i1u233_27
  6593  00115C  D7FC               	nop
  6594  00115E  F000               opt asmopt_pop
  6595                           
  6596                           	line	238
  6597                           	
  6598                           i1l1846:
  6599  001160                     ;main.c: 238:     nibble=dat;
  6600                           	movff	(c:i1LCD_char@dat),(c:_nibble)	;volatile
  6601  001160  C003  F067         	line	239
  6602                           ;main.c: 239:     LATB = (nibble<<4)>>2;
  6603                           	movf	((c:_nibble)),c,w	;volatile
  6604  001164  5067               	movwf	(??i1_LCD_char+0+0)&0ffh,c
  6605  001166  6E01               	clrf	(??i1_LCD_char+0+0+1)&0ffh,c
  6606  001168  6A02               
  6607                           	swapf	(??i1_LCD_char+0+0),c
  6608  00116A  3A01               	swapf	(??i1_LCD_char+0+1),c
  6609  00116C  3A02               	movlw	0f0h
  6610  00116E  0EF0               	andwf	(??i1_LCD_char+0+1),c
  6611  001170  1602               	movf	(??i1_LCD_char+0+0),c,w
  6612  001172  5001               	andlw	0fh
  6613  001174  0B0F               	iorwf	(??i1_LCD_char+0+1),c
  6614  001176  1202               	movlw	0f0h
  6615  001178  0EF0               	andwf	(??i1_LCD_char+0+0),c
  6616  00117A  1601               	rlcf	(??i1_LCD_char+0+1),c,w
  6617  00117C  3402               	rrcf	(??i1_LCD_char+0+1),c
  6618  00117E  3202               	rrcf	(??i1_LCD_char+0+0),c
  6619  001180  3201               	rlcf	(??i1_LCD_char+0+1),c,w
  6620  001182  3402               	rrcf	(??i1_LCD_char+0+1),c
  6621  001184  3202               	rrcf	(??i1_LCD_char+0+0),c
  6622  001186  3201               	movf	(??i1_LCD_char+0+0),c,w
  6623  001188  5001               	movwf	((c:3978)),c	;volatile
  6624  00118A  6E8A               	line	240
  6625                           	
  6626                           i1l1848:
  6627  00118C                     ;main.c: 240:     LATBbits.LB0=1;
  6628                           	bsf	((c:3978)),c,0	;volatile
  6629  00118C  808A               	line	241
  6630                           	
  6631                           i1l1850:
  6632  00118E                     ;main.c: 241:     __nop();
  6633                           	opt	asmopt_push
  6634                           	opt	asmopt_off
  6635                           	nop
  6636  00118E  F000               	opt	asmopt_pop
  6637                           	line	242
  6638                           	
  6639                           i1l1852:
  6640  001190                     ;main.c: 242:     LATBbits.LB1 = 1;
  6641                           	bsf	((c:3978)),c,1	;volatile
  6642  001190  828A               	line	243
  6643                           	
  6644                           i1l1854:
  6645  001192                     ;main.c: 243:     __nop();
  6646                           	opt	asmopt_push
  6647                           	opt	asmopt_off
  6648                           	nop
  6649  001192  F000               	opt	asmopt_pop
  6650                           	line	244
  6651                           	
  6652                           i1l1856:
  6653  001194                     ;main.c: 244:     LATBbits.LB1 = 0;
  6654                           	bcf	((c:3978)),c,1	;volatile
  6655  001194  928A               	line	245
  6656                           	
  6657                           i1l1858:
  6658  001196                     ;main.c: 245:     _delay((unsigned long)((2)*(20000000/4000.0)));
  6659                           	opt asmopt_push
  6660                           opt asmopt_off
  6661                           movlw	13
  6662  001196  0E0D               movwf	(??i1_LCD_char+0+0)&0ffh,c,f
  6663  001198  6E01               	movlw	252
  6664  00119A  0EFC               i1u234_27:
  6665  00119C                     decfsz	wreg,f
  6666  00119C  2EE8               	bra	i1u234_27
  6667  00119E  D7FE               	decfsz	(??i1_LCD_char+0+0)&0ffh,c,f
  6668  0011A0  2E01               	bra	i1u234_27
  6669  0011A2  D7FC               opt asmopt_pop
  6670                           
  6671                           	goto	i1l194
  6672  0011A4  EFD4  F008         	line	246
  6673                           	
  6674                           i1l1860:
  6675  0011A8                     	line	247
  6676                           ;main.c: 246:     return;
  6677                           	
  6678                           i1l194:
  6679  0011A8                     	return	;funcret
  6680  0011A8  0012               	opt stack 0
  6681                           GLOBAL	__end_ofi1_LCD_char
  6682                           	__end_ofi1_LCD_char:
  6683  0011AA                     	signat	i1_LCD_char,89
  6684                           	global	i1_BT_tx_string
  6685                           
  6686 ;; *************** function i1_BT_tx_string *****************
  6687 ;; Defined at:
  6688 ;;		line 517 in file "main.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;  msg             2    1[COMRAM] PTR const unsigned char 
  6691 ;;		 -> STR_16(16), STR_15(27), STR_14(73), STR_13(39), 
  6692 ;;		 -> STR_12(8), STR_10(17), STR_9(9), Rx_ISR@DuCyT(5), 
  6693 ;;		 -> STR_8(15), US_print_distance@dist4D(5), STR_6(14), STR_4(17), 
  6694 ;;		 -> STR_2(15), 
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;		None
  6697 ;; Return value:  Size  Location     Type
  6698 ;;                  1    wreg      void 
  6699 ;; Registers used:
  6700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6706 ;;      Params:         2       0       0       0       0       0       0
  6707 ;;      Locals:         0       0       0       0       0       0       0
  6708 ;;      Temps:          0       0       0       0       0       0       0
  6709 ;;      Totals:         2       0       0       0       0       0       0
  6710 ;;Total ram usage:        2 bytes
  6711 ;; Hardware stack levels used:    1
  6712 ;; Hardware stack levels required when called:    1
  6713 ;; This function calls:
  6714 ;;		i1_BT_tx_char
  6715 ;; This function is called by:
  6716 ;;		_US_print_distance
  6717 ;;		_Rx_ISR
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           psect	text26,class=CODE,space=0,reloc=2,group=0
  6721                           	line	517
  6722                           global __ptext26
  6723                           __ptext26:
  6724  0012F8                     psect	text26
  6725                           	file	"main.c"
  6726                           	line	517
  6727                           	global	__size_ofi1_BT_tx_string
  6728                           	__size_ofi1_BT_tx_string	equ	__end_ofi1_BT_tx_string-i1_BT_tx_string
  6729  0000                     	
  6730                           i1_BT_tx_string:
  6731  0012F8                     ;incstack = 0
  6732                           	opt	stack 25
  6733                           	line	519
  6734                           	
  6735                           i1l2014:
  6736  0012F8                     ;main.c: 517: void BT_tx_string(const unsigned char *msg);main.c: 518: {;main.c: 519:   
                                   while((*msg)!=0)
  6737                           	goto	i1l2020
  6738  0012F8  EF94  F009         	
  6739                           i1l283:
  6740  0012FC                     	line	521
  6741                           	
  6742                           i1l2016:
  6743  0012FC                     ;main.c: 520:     {;main.c: 521:         BT_tx_char(*msg);
  6744                           	movff	(c:i1BT_tx_string@msg),tblptrl
  6745  0012FC  C002  FFF6         	movff	(c:i1BT_tx_string@msg+1),tblptrh
  6746  001300  C003  FFF7         	clrf	tblptru
  6747  001304  6AF8               	
  6748                           	movlw	high __ramtop-1
  6749  001306  0E05               	cpfsgt	tblptrh
  6750  001308  64F7               	bra	i1u127_27
  6751  00130A  D003               	tblrd	*
  6752  00130C  0008               	
  6753                           	movf	tablat,w
  6754  00130E  50F5               	bra	i1u127_20
  6755  001310  D005               i1u127_27:
  6756  001312                     	movff	tblptrl,fsr0l
  6757  001312  CFF6 FFE9          	movff	tblptrh,fsr0h
  6758  001316  CFF7 FFEA          	movf	indf0,w
  6759  00131A  50EF               i1u127_20:
  6760  00131C                     	
  6761                           	call	i1_BT_tx_char
  6762  00131C  EC09  F00C         	line	522
  6763                           	
  6764                           i1l2018:
  6765  001320                     ;main.c: 522:  msg++;
  6766                           	infsnz	((c:i1BT_tx_string@msg)),c
  6767  001320  4A02               	incf	((c:i1BT_tx_string@msg+1)),c
  6768  001322  2A03               	goto	i1l2020
  6769  001324  EF94  F009         	line	523
  6770                           ;main.c: 523:     }
  6771                           	
  6772                           i1l282:
  6773  001328                     	line	519
  6774                           	
  6775                           i1l2020:
  6776  001328                     ;main.c: 519:     while((*msg)!=0)
  6777                           	movff	(c:i1BT_tx_string@msg),tblptrl
  6778  001328  C002  FFF6         	movff	(c:i1BT_tx_string@msg+1),tblptrh
  6779  00132C  C003  FFF7         	clrf	tblptru
  6780  001330  6AF8               	
  6781                           	movlw	high __ramtop-1
  6782  001332  0E05               	cpfsgt	tblptrh
  6783  001334  64F7               	bra	i1u128_27
  6784  001336  D003               	tblrd	*
  6785  001338  0008               	
  6786                           	movf	tablat,w
  6787  00133A  50F5               	bra	i1u128_20
  6788  00133C  D005               i1u128_27:
  6789  00133E                     	movff	tblptrl,fsr0l
  6790  00133E  CFF6 FFE9          	movff	tblptrh,fsr0h
  6791  001342  CFF7 FFEA          	movf	indf0,w
  6792  001346  50EF               i1u128_20:
  6793  001348                     	iorlw	0
  6794  001348  0900               	btfss	status,2
  6795  00134A  A4D8               	goto	i1u129_21
  6796  00134C  EFAA  F009         	goto	i1u129_20
  6797  001350  EFAC  F009         i1u129_21:
  6798  001354                     	goto	i1l2016
  6799  001354  EF7E  F009         i1u129_20:
  6800  001358                     	goto	i1l285
  6801  001358  EFAE  F009         	
  6802                           i1l284:
  6803  00135C                     	line	525
  6804                           ;main.c: 524:     return;
  6805                           	
  6806                           i1l285:
  6807  00135C                     	return	;funcret
  6808  00135C  0012               	opt stack 0
  6809                           GLOBAL	__end_ofi1_BT_tx_string
  6810                           	__end_ofi1_BT_tx_string:
  6811  00135E                     	signat	i1_BT_tx_string,89
  6812                           	global	i1_BT_tx_char
  6813                           
  6814 ;; *************** function i1_BT_tx_char *****************
  6815 ;; Defined at:
  6816 ;;		line 511 in file "main.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;  Tx              1    wreg     unsigned char 
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;  Tx              1    0[COMRAM] unsigned char 
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  1    wreg      void 
  6823 ;; Registers used:
  6824 ;;		wreg
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6830 ;;      Params:         0       0       0       0       0       0       0
  6831 ;;      Locals:         1       0       0       0       0       0       0
  6832 ;;      Temps:          0       0       0       0       0       0       0
  6833 ;;      Totals:         1       0       0       0       0       0       0
  6834 ;;Total ram usage:        1 bytes
  6835 ;; Hardware stack levels used:    1
  6836 ;; This function calls:
  6837 ;;		Nothing
  6838 ;; This function is called by:
  6839 ;;		_US_print_distance
  6840 ;;		i1_BT_tx_string
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           psect	text27,class=CODE,space=0,reloc=2,group=0
  6844                           	line	511
  6845                           global __ptext27
  6846                           __ptext27:
  6847  001812                     psect	text27
  6848                           	file	"main.c"
  6849                           	line	511
  6850                           	global	__size_ofi1_BT_tx_char
  6851                           	__size_ofi1_BT_tx_char	equ	__end_ofi1_BT_tx_char-i1_BT_tx_char
  6852  0000                     	
  6853                           i1_BT_tx_char:
  6854  001812                     ;incstack = 0
  6855                           	opt	stack 25
  6856                           ;i1BT_tx_char@Tx stored from wreg
  6857                           	movwf	((c:i1BT_tx_char@Tx)),c
  6858  001812  6E01               	line	513
  6859                           	
  6860                           i1l1914:
  6861  001814                     ;main.c: 511: void BT_tx_char(unsigned char Tx);main.c: 512: {;main.c: 513:     while(!T
                                 XIF);
  6862                           	goto	i1l276
  6863  001814  EF0C  F00C         	
  6864                           i1l277:
  6865  001818                     	
  6866                           i1l276:
  6867  001818                     	btfss	c:(31988/8),(31988)&7	;volatile
  6868  001818  A89E               	goto	i1u122_21
  6869  00181A  EF11  F00C         	goto	i1u122_20
  6870  00181E  EF13  F00C         i1u122_21:
  6871  001822                     	goto	i1l276
  6872  001822  EF0C  F00C         i1u122_20:
  6873  001826                     	goto	i1l1916
  6874  001826  EF15  F00C         	
  6875                           i1l278:
  6876  00182A                     	line	514
  6877                           	
  6878                           i1l1916:
  6879  00182A                     ;main.c: 514:     TXREG=Tx;
  6880                           	movff	(c:i1BT_tx_char@Tx),(c:4013)	;volatile
  6881  00182A  C001  FFAD         	line	515
  6882                           	
  6883                           i1l279:
  6884  00182E                     	return	;funcret
  6885  00182E  0012               	opt stack 0
  6886                           GLOBAL	__end_ofi1_BT_tx_char
  6887                           	__end_ofi1_BT_tx_char:
  6888  001830                     	signat	i1_BT_tx_char,89
  6889                           	global	_itoa4D
  6890                           
  6891 ;; *************** function _itoa4D *****************
  6892 ;; Defined at:
  6893 ;;		line 705 in file "main.c"
  6894 ;; Parameters:    Size  Location     Type
  6895 ;;  arr             2   12[COMRAM] PTR unsigned char 
  6896 ;;		 -> Rx_ISR@DuCyT(5), US_print_distance@dist4D(5), US_send_pulse@dist(5), 
  6897 ;;  num             2   14[COMRAM] unsigned int 
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;		None
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  1    wreg      void 
  6902 ;; Registers used:
  6903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6909 ;;      Params:         4       0       0       0       0       0       0
  6910 ;;      Locals:         0       0       0       0       0       0       0
  6911 ;;      Temps:          1       0       0       0       0       0       0
  6912 ;;      Totals:         5       0       0       0       0       0       0
  6913 ;;Total ram usage:        5 bytes
  6914 ;; Hardware stack levels used:    1
  6915 ;; Hardware stack levels required when called:    1
  6916 ;; This function calls:
  6917 ;;		___lwdiv
  6918 ;;		___lwmod
  6919 ;; This function is called by:
  6920 ;;		_US_send_pulse
  6921 ;;		_US_print_distance
  6922 ;;		_Rx_ISR
  6923 ;; This function uses a non-reentrant model
  6924 ;;
  6925                           psect	text28,class=CODE,space=0,reloc=2,group=0
  6926                           	line	705
  6927                           global __ptext28
  6928                           __ptext28:
  6929  0007D0                     psect	text28
  6930                           	file	"main.c"
  6931                           	line	705
  6932                           	global	__size_of_itoa4D
  6933                           	__size_of_itoa4D	equ	__end_of_itoa4D-_itoa4D
  6934  0000                     	
  6935                           _itoa4D:
  6936  0007D0                     ;incstack = 0
  6937                           	opt	stack 25
  6938                           	line	707
  6939                           	
  6940                           i1l1982:
  6941  0007D0                     ;main.c: 705: void itoa4D(char arr[], unsigned int num);main.c: 706: {;main.c: 707:     
                                 arr[0]=((num/1000)%10)|0x30;
  6942                           	movlw	high(03E8h)
  6943  0007D0  0E03               	movwf	((c:___lwdiv@divisor+1)),c
  6944  0007D2  6E04               	movlw	low(03E8h)
  6945  0007D4  0EE8               	movwf	((c:___lwdiv@divisor)),c
  6946  0007D6  6E03               	movff	(c:itoa4D@num),(c:___lwdiv@dividend)
  6947  0007D8  C00F  F001         	movff	(c:itoa4D@num+1),(c:___lwdiv@dividend+1)
  6948  0007DC  C010  F002         	call	___lwdiv	;wreg free
  6949  0007E0  EC9F  F007         	movff	0+?___lwdiv,(c:___lwmod@dividend)
  6950  0007E4  C001  F008         	movff	1+?___lwdiv,(c:___lwmod@dividend+1)
  6951  0007E8  C002  F009         	movlw	high(0Ah)
  6952  0007EC  0E00               	movwf	((c:___lwmod@divisor+1)),c
  6953  0007EE  6E0B               	movlw	low(0Ah)
  6954  0007F0  0E0A               	movwf	((c:___lwmod@divisor)),c
  6955  0007F2  6E0A               	call	___lwmod	;wreg free
  6956  0007F4  EC5F  F008         	movf	(0+?___lwmod),c,w
  6957  0007F8  5008               	iorlw	low(030h)
  6958  0007FA  0930               	movff	(c:itoa4D@arr),fsr2l
  6959  0007FC  C00D  FFD9         	movff	(c:itoa4D@arr+1),fsr2h
  6960  000800  C00E  FFDA         	movwf	indf2,c
  6961  000804  6EDF               
  6962                           	line	708
  6963                           ;main.c: 708:     arr[1]=((num/100)%10)|0x30;;
  6964                           	lfsr	2,01h
  6965  000806  EE20 F001          	movf	((c:itoa4D@arr)),c,w
  6966  00080A  500D               	addwf	fsr2l
  6967  00080C  26D9               	movf	((c:itoa4D@arr+1)),c,w
  6968  00080E  500E               	addwfc	fsr2h
  6969  000810  22DA               	movlw	high(064h)
  6970  000812  0E00               	movwf	((c:___lwdiv@divisor+1)),c
  6971  000814  6E04               	movlw	low(064h)
  6972  000816  0E64               	movwf	((c:___lwdiv@divisor)),c
  6973  000818  6E03               	movff	(c:itoa4D@num),(c:___lwdiv@dividend)
  6974  00081A  C00F  F001         	movff	(c:itoa4D@num+1),(c:___lwdiv@dividend+1)
  6975  00081E  C010  F002         	call	___lwdiv	;wreg free
  6976  000822  EC9F  F007         	movff	0+?___lwdiv,(c:___lwmod@dividend)
  6977  000826  C001  F008         	movff	1+?___lwdiv,(c:___lwmod@dividend+1)
  6978  00082A  C002  F009         	movlw	high(0Ah)
  6979  00082E  0E00               	movwf	((c:___lwmod@divisor+1)),c
  6980  000830  6E0B               	movlw	low(0Ah)
  6981  000832  0E0A               	movwf	((c:___lwmod@divisor)),c
  6982  000834  6E0A               	call	___lwmod	;wreg free
  6983  000836  EC5F  F008         	movf	(0+?___lwmod),c,w
  6984  00083A  5008               	iorlw	low(030h)
  6985  00083C  0930               	movwf	indf2,c
  6986  00083E  6EDF               
  6987                           	line	709
  6988                           ;main.c: 709:     arr[2]=((num/10)%10)|0x30;
  6989                           	lfsr	2,02h
  6990  000840  EE20 F002          	movf	((c:itoa4D@arr)),c,w
  6991  000844  500D               	addwf	fsr2l
  6992  000846  26D9               	movf	((c:itoa4D@arr+1)),c,w
  6993  000848  500E               	addwfc	fsr2h
  6994  00084A  22DA               	movlw	high(0Ah)
  6995  00084C  0E00               	movwf	((c:___lwdiv@divisor+1)),c
  6996  00084E  6E04               	movlw	low(0Ah)
  6997  000850  0E0A               	movwf	((c:___lwdiv@divisor)),c
  6998  000852  6E03               	movff	(c:itoa4D@num),(c:___lwdiv@dividend)
  6999  000854  C00F  F001         	movff	(c:itoa4D@num+1),(c:___lwdiv@dividend+1)
  7000  000858  C010  F002         	call	___lwdiv	;wreg free
  7001  00085C  EC9F  F007         	movff	0+?___lwdiv,(c:___lwmod@dividend)
  7002  000860  C001  F008         	movff	1+?___lwdiv,(c:___lwmod@dividend+1)
  7003  000864  C002  F009         	movlw	high(0Ah)
  7004  000868  0E00               	movwf	((c:___lwmod@divisor+1)),c
  7005  00086A  6E0B               	movlw	low(0Ah)
  7006  00086C  0E0A               	movwf	((c:___lwmod@divisor)),c
  7007  00086E  6E0A               	call	___lwmod	;wreg free
  7008  000870  EC5F  F008         	movf	(0+?___lwmod),c,w
  7009  000874  5008               	iorlw	low(030h)
  7010  000876  0930               	movwf	indf2,c
  7011  000878  6EDF               
  7012                           	line	710
  7013                           ;main.c: 710:     arr[3]=(num%10)|0x30;
  7014                           	lfsr	2,03h
  7015  00087A  EE20 F003          	movf	((c:itoa4D@arr)),c,w
  7016  00087E  500D               	addwf	fsr2l
  7017  000880  26D9               	movf	((c:itoa4D@arr+1)),c,w
  7018  000882  500E               	addwfc	fsr2h
  7019  000884  22DA               	movff	(c:itoa4D@num),(c:___lwmod@dividend)
  7020  000886  C00F  F008         	movff	(c:itoa4D@num+1),(c:___lwmod@dividend+1)
  7021  00088A  C010  F009         	movlw	high(0Ah)
  7022  00088E  0E00               	movwf	((c:___lwmod@divisor+1)),c
  7023  000890  6E0B               	movlw	low(0Ah)
  7024  000892  0E0A               	movwf	((c:___lwmod@divisor)),c
  7025  000894  6E0A               	call	___lwmod	;wreg free
  7026  000896  EC5F  F008         	movf	(0+?___lwmod),c,w
  7027  00089A  5008               	iorlw	low(030h)
  7028  00089C  0930               	movwf	indf2,c
  7029  00089E  6EDF               
  7030                           	line	711
  7031                           	
  7032                           i1l1984:
  7033  0008A0                     ;main.c: 711:     arr[4]='\0';
  7034                           	lfsr	2,04h
  7035  0008A0  EE20 F004          	movf	((c:itoa4D@arr)),c,w
  7036  0008A4  500D               	addwf	fsr2l
  7037  0008A6  26D9               	movf	((c:itoa4D@arr+1)),c,w
  7038  0008A8  500E               	addwfc	fsr2h
  7039  0008AA  22DA               	movlw	low(0)
  7040  0008AC  0E00               	movwf	indf2
  7041  0008AE  6EDF               	line	712
  7042                           	
  7043                           i1l1986:
  7044  0008B0                     ;main.c: 712:     if(arr[0]=='0')
  7045                           	movff	(c:itoa4D@arr),fsr2l
  7046  0008B0  C00D  FFD9         	movff	(c:itoa4D@arr+1),fsr2h
  7047  0008B4  C00E  FFDA         	movlw	48
  7048  0008B8  0E30               	xorwf	postinc2,w
  7049  0008BA  18DE               	btfss	status,2
  7050  0008BC  A4D8               	goto	i1u123_21
  7051  0008BE  EF63  F004         	goto	i1u123_20
  7052  0008C2  EF65  F004         
  7053                           i1u123_21:
  7054  0008C6                     	goto	i1l363
  7055  0008C6  EFA1  F004         i1u123_20:
  7056  0008CA                     	line	714
  7057                           	
  7058                           i1l1988:
  7059  0008CA                     ;main.c: 713:     {;main.c: 714:         arr[0]=' ';
  7060                           	movff	(c:itoa4D@arr),fsr2l
  7061  0008CA  C00D  FFD9         	movff	(c:itoa4D@arr+1),fsr2h
  7062  0008CE  C00E  FFDA         	movlw	low(020h)
  7063  0008D2  0E20               	movwf	indf2
  7064  0008D4  6EDF               	line	715
  7065                           	
  7066                           i1l1990:
  7067  0008D6                     ;main.c: 715:         if(arr[1]=='0')
  7068                           	lfsr	2,01h
  7069  0008D6  EE20 F001          	movf	((c:itoa4D@arr)),c,w
  7070  0008DA  500D               	addwf	fsr2l
  7071  0008DC  26D9               	movf	((c:itoa4D@arr+1)),c,w
  7072  0008DE  500E               	addwfc	fsr2h
  7073  0008E0  22DA               	movlw	48
  7074  0008E2  0E30               	xorwf	postinc2,w
  7075  0008E4  18DE               	btfss	status,2
  7076  0008E6  A4D8               	goto	i1u124_21
  7077  0008E8  EF78  F004         	goto	i1u124_20
  7078  0008EC  EF7A  F004         
  7079                           i1u124_21:
  7080  0008F0                     	goto	i1l363
  7081  0008F0  EFA1  F004         i1u124_20:
  7082  0008F4                     	line	717
  7083                           	
  7084                           i1l1992:
  7085  0008F4                     ;main.c: 716:         {;main.c: 717:             arr[1]=' ';
  7086                           	lfsr	2,01h
  7087  0008F4  EE20 F001          	movf	((c:itoa4D@arr)),c,w
  7088  0008F8  500D               	addwf	fsr2l
  7089  0008FA  26D9               	movf	((c:itoa4D@arr+1)),c,w
  7090  0008FC  500E               	addwfc	fsr2h
  7091  0008FE  22DA               	movlw	low(020h)
  7092  000900  0E20               	movwf	indf2
  7093  000902  6EDF               	line	718
  7094                           ;main.c: 718:             if(arr[2]=='0')arr[2]=' ';
  7095                           	lfsr	2,02h
  7096  000904  EE20 F002          	movf	((c:itoa4D@arr)),c,w
  7097  000908  500D               	addwf	fsr2l
  7098  00090A  26D9               	movf	((c:itoa4D@arr+1)),c,w
  7099  00090C  500E               	addwfc	fsr2h
  7100  00090E  22DA               	movlw	48
  7101  000910  0E30               	xorwf	postinc2,w
  7102  000912  18DE               	btfss	status,2
  7103  000914  A4D8               	goto	i1u125_21
  7104  000916  EF8F  F004         	goto	i1u125_20
  7105  00091A  EF91  F004         
  7106                           i1u125_21:
  7107  00091E                     	goto	i1l363
  7108  00091E  EFA1  F004         i1u125_20:
  7109  000922                     	
  7110                           i1l1994:
  7111  000922                     	lfsr	2,02h
  7112  000922  EE20 F002          	movf	((c:itoa4D@arr)),c,w
  7113  000926  500D               	addwf	fsr2l
  7114  000928  26D9               	movf	((c:itoa4D@arr+1)),c,w
  7115  00092A  500E               	addwfc	fsr2h
  7116  00092C  22DA               	movlw	low(020h)
  7117  00092E  0E20               	movwf	indf2
  7118  000930  6EDF               	goto	i1l363
  7119  000932  EFA1  F004         	
  7120                           i1l362:
  7121  000936                     	goto	i1l363
  7122  000936  EFA1  F004         	line	719
  7123                           ;main.c: 719:         }
  7124                           	
  7125                           i1l361:
  7126  00093A                     	goto	i1l363
  7127  00093A  EFA1  F004         	line	720
  7128                           ;main.c: 720:     }
  7129                           	
  7130                           i1l360:
  7131  00093E                     	goto	i1l363
  7132  00093E  EFA1  F004         	line	721
  7133                           	
  7134                           i1l1996:
  7135  000942                     	line	722
  7136                           ;main.c: 721:     return;
  7137                           	
  7138                           i1l363:
  7139  000942                     	return	;funcret
  7140  000942  0012               	opt stack 0
  7141                           GLOBAL	__end_of_itoa4D
  7142                           	__end_of_itoa4D:
  7143  000944                     	signat	_itoa4D,8313
  7144                           	global	___lwmod
  7145                           
  7146 ;; *************** function ___lwmod *****************
  7147 ;; Defined at:
  7148 ;;		line 7 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/lwmod.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;  dividend        2    7[COMRAM] unsigned int 
  7151 ;;  divisor         2    9[COMRAM] unsigned int 
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;  counter         1   11[COMRAM] unsigned char 
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  2    7[COMRAM] unsigned int 
  7156 ;; Registers used:
  7157 ;;		wreg, status,2, status,0
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/0
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7163 ;;      Params:         4       0       0       0       0       0       0
  7164 ;;      Locals:         1       0       0       0       0       0       0
  7165 ;;      Temps:          0       0       0       0       0       0       0
  7166 ;;      Totals:         5       0       0       0       0       0       0
  7167 ;;Total ram usage:        5 bytes
  7168 ;; Hardware stack levels used:    1
  7169 ;; This function calls:
  7170 ;;		Nothing
  7171 ;; This function is called by:
  7172 ;;		_itoa4D
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           psect	text29,class=CODE,space=0,reloc=2,group=1
  7176                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/lwmod.c"
  7177                           	line	7
  7178                           global __ptext29
  7179                           __ptext29:
  7180  0010BE                     psect	text29
  7181                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/lwmod.c"
  7182                           	line	7
  7183                           	global	__size_of___lwmod
  7184                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  7185  0000                     	
  7186                           ___lwmod:
  7187  0010BE                     ;incstack = 0
  7188                           	opt	stack 25
  7189                           	line	12
  7190                           	
  7191                           i1l1884:
  7192  0010BE                     	movf	((c:___lwmod@divisor)),c,w
  7193  0010BE  500A               iorwf	((c:___lwmod@divisor+1)),c,w
  7194  0010C0  100B               	btfsc	status,2
  7195  0010C2  B4D8               	goto	i1u115_21
  7196  0010C4  EF66  F008         	goto	i1u115_20
  7197  0010C8  EF68  F008         
  7198                           i1u115_21:
  7199  0010CC                     	goto	i1l870
  7200  0010CC  EF96  F008         i1u115_20:
  7201  0010D0                     	line	13
  7202                           	
  7203                           i1l1886:
  7204  0010D0                     	movlw	low(01h)
  7205  0010D0  0E01               	movwf	((c:___lwmod@counter)),c
  7206  0010D2  6E0C               	line	14
  7207                           	goto	i1l1890
  7208  0010D4  EF72  F008         	
  7209                           i1l872:
  7210  0010D8                     	line	15
  7211                           	
  7212                           i1l1888:
  7213  0010D8                     	bcf	status,0
  7214  0010D8  90D8               	rlcf	((c:___lwmod@divisor)),c
  7215  0010DA  360A               	rlcf	((c:___lwmod@divisor+1)),c
  7216  0010DC  360B               	line	16
  7217                           	incf	((c:___lwmod@counter)),c
  7218  0010DE  2A0C               	goto	i1l1890
  7219  0010E0  EF72  F008         	line	17
  7220                           	
  7221                           i1l871:
  7222  0010E4                     	line	14
  7223                           	
  7224                           i1l1890:
  7225  0010E4                     	
  7226                           	btfss	((c:___lwmod@divisor+1)),c,(15)&7
  7227  0010E4  AE0B               	goto	i1u116_21
  7228  0010E6  EF77  F008         	goto	i1u116_20
  7229  0010EA  EF79  F008         i1u116_21:
  7230  0010EE                     	goto	i1l1888
  7231  0010EE  EF6C  F008         i1u116_20:
  7232  0010F2                     	goto	i1l1892
  7233  0010F2  EF7D  F008         	
  7234                           i1l873:
  7235  0010F6                     	goto	i1l1892
  7236  0010F6  EF7D  F008         	line	18
  7237                           	
  7238                           i1l874:
  7239  0010FA                     	line	19
  7240                           	
  7241                           i1l1892:
  7242  0010FA                     		movf	((c:___lwmod@divisor)),c,w
  7243  0010FA  500A               	subwf	((c:___lwmod@dividend)),c,w
  7244  0010FC  5C08               	movf	((c:___lwmod@divisor+1)),c,w
  7245  0010FE  500B               	subwfb	((c:___lwmod@dividend+1)),c,w
  7246  001100  5809               	btfss	status,0
  7247  001102  A0D8               	goto	i1u117_21
  7248  001104  EF86  F008         	goto	i1u117_20
  7249  001108  EF88  F008         
  7250                           i1u117_21:
  7251  00110C                     	goto	i1l1896
  7252  00110C  EF8E  F008         i1u117_20:
  7253  001110                     	line	20
  7254                           	
  7255                           i1l1894:
  7256  001110                     	movf	((c:___lwmod@divisor)),c,w
  7257  001110  500A               	subwf	((c:___lwmod@dividend)),c
  7258  001112  5E08               	movf	((c:___lwmod@divisor+1)),c,w
  7259  001114  500B               	subwfb	((c:___lwmod@dividend+1)),c
  7260  001116  5A09               
  7261                           	goto	i1l1896
  7262  001118  EF8E  F008         	
  7263                           i1l875:
  7264  00111C                     	line	21
  7265                           	
  7266                           i1l1896:
  7267  00111C                     	bcf	status,0
  7268  00111C  90D8               	rrcf	((c:___lwmod@divisor+1)),c
  7269  00111E  320B               	rrcf	((c:___lwmod@divisor)),c
  7270  001120  320A               	line	22
  7271                           	
  7272                           i1l1898:
  7273  001122                     	decfsz	((c:___lwmod@counter)),c
  7274  001122  2E0C               	
  7275                           	goto	i1l1892
  7276  001124  EF7D  F008         	goto	i1l870
  7277  001128  EF96  F008         	
  7278                           i1l876:
  7279  00112C                     	line	23
  7280                           	
  7281                           i1l870:
  7282  00112C                     	line	24
  7283                           	movff	(c:___lwmod@dividend),(c:?___lwmod)
  7284  00112C  C008  F008         	movff	(c:___lwmod@dividend+1),(c:?___lwmod+1)
  7285  001130  C009  F009         	line	25
  7286                           	
  7287                           i1l877:
  7288  001134                     	return	;funcret
  7289  001134  0012               	opt stack 0
  7290                           GLOBAL	__end_of___lwmod
  7291                           	__end_of___lwmod:
  7292  001136                     	signat	___lwmod,8314
  7293                           	global	___lwdiv
  7294                           
  7295 ;; *************** function ___lwdiv *****************
  7296 ;; Defined at:
  7297 ;;		line 7 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/lwdiv.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;  dividend        2    0[COMRAM] unsigned int 
  7300 ;;  divisor         2    2[COMRAM] unsigned int 
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;  quotient        2    4[COMRAM] unsigned int 
  7303 ;;  counter         1    6[COMRAM] unsigned char 
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  2    0[COMRAM] unsigned int 
  7306 ;; Registers used:
  7307 ;;		wreg, status,2, status,0
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7313 ;;      Params:         4       0       0       0       0       0       0
  7314 ;;      Locals:         3       0       0       0       0       0       0
  7315 ;;      Temps:          0       0       0       0       0       0       0
  7316 ;;      Totals:         7       0       0       0       0       0       0
  7317 ;;Total ram usage:        7 bytes
  7318 ;; Hardware stack levels used:    1
  7319 ;; This function calls:
  7320 ;;		Nothing
  7321 ;; This function is called by:
  7322 ;;		_itoa4D
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           psect	text30,class=CODE,space=0,reloc=2,group=1
  7326                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/lwdiv.c"
  7327                           	line	7
  7328                           global __ptext30
  7329                           __ptext30:
  7330  000F3E                     psect	text30
  7331                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/lwdiv.c"
  7332                           	line	7
  7333                           	global	__size_of___lwdiv
  7334                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  7335  0000                     	
  7336                           ___lwdiv:
  7337  000F3E                     ;incstack = 0
  7338                           	opt	stack 25
  7339                           	line	13
  7340                           	
  7341                           i1l1862:
  7342  000F3E                     	movlw	high(0)
  7343  000F3E  0E00               	movwf	((c:___lwdiv@quotient+1)),c
  7344  000F40  6E06               	movlw	low(0)
  7345  000F42  0E00               	movwf	((c:___lwdiv@quotient)),c
  7346  000F44  6E05               	line	14
  7347                           	
  7348                           i1l1864:
  7349  000F46                     	movf	((c:___lwdiv@divisor)),c,w
  7350  000F46  5003               iorwf	((c:___lwdiv@divisor+1)),c,w
  7351  000F48  1004               	btfsc	status,2
  7352  000F4A  B4D8               	goto	i1u112_21
  7353  000F4C  EFAA  F007         	goto	i1u112_20
  7354  000F50  EFAC  F007         
  7355                           i1u112_21:
  7356  000F54                     	goto	i1l860
  7357  000F54  EFDE  F007         i1u112_20:
  7358  000F58                     	line	15
  7359                           	
  7360                           i1l1866:
  7361  000F58                     	movlw	low(01h)
  7362  000F58  0E01               	movwf	((c:___lwdiv@counter)),c
  7363  000F5A  6E07               	line	16
  7364                           	goto	i1l1870
  7365  000F5C  EFB6  F007         	
  7366                           i1l862:
  7367  000F60                     	line	17
  7368                           	
  7369                           i1l1868:
  7370  000F60                     	bcf	status,0
  7371  000F60  90D8               	rlcf	((c:___lwdiv@divisor)),c
  7372  000F62  3603               	rlcf	((c:___lwdiv@divisor+1)),c
  7373  000F64  3604               	line	18
  7374                           	incf	((c:___lwdiv@counter)),c
  7375  000F66  2A07               	goto	i1l1870
  7376  000F68  EFB6  F007         	line	19
  7377                           	
  7378                           i1l861:
  7379  000F6C                     	line	16
  7380                           	
  7381                           i1l1870:
  7382  000F6C                     	
  7383                           	btfss	((c:___lwdiv@divisor+1)),c,(15)&7
  7384  000F6C  AE04               	goto	i1u113_21
  7385  000F6E  EFBB  F007         	goto	i1u113_20
  7386  000F72  EFBD  F007         i1u113_21:
  7387  000F76                     	goto	i1l1868
  7388  000F76  EFB0  F007         i1u113_20:
  7389  000F7A                     	goto	i1l1872
  7390  000F7A  EFC1  F007         	
  7391                           i1l863:
  7392  000F7E                     	goto	i1l1872
  7393  000F7E  EFC1  F007         	line	20
  7394                           	
  7395                           i1l864:
  7396  000F82                     	line	21
  7397                           	
  7398                           i1l1872:
  7399  000F82                     	bcf	status,0
  7400  000F82  90D8               	rlcf	((c:___lwdiv@quotient)),c
  7401  000F84  3605               	rlcf	((c:___lwdiv@quotient+1)),c
  7402  000F86  3606               	line	22
  7403                           	
  7404                           i1l1874:
  7405  000F88                     		movf	((c:___lwdiv@divisor)),c,w
  7406  000F88  5003               	subwf	((c:___lwdiv@dividend)),c,w
  7407  000F8A  5C01               	movf	((c:___lwdiv@divisor+1)),c,w
  7408  000F8C  5004               	subwfb	((c:___lwdiv@dividend+1)),c,w
  7409  000F8E  5802               	btfss	status,0
  7410  000F90  A0D8               	goto	i1u114_21
  7411  000F92  EFCD  F007         	goto	i1u114_20
  7412  000F96  EFCF  F007         
  7413                           i1u114_21:
  7414  000F9A                     	goto	i1l1880
  7415  000F9A  EFD6  F007         i1u114_20:
  7416  000F9E                     	line	23
  7417                           	
  7418                           i1l1876:
  7419  000F9E                     	movf	((c:___lwdiv@divisor)),c,w
  7420  000F9E  5003               	subwf	((c:___lwdiv@dividend)),c
  7421  000FA0  5E01               	movf	((c:___lwdiv@divisor+1)),c,w
  7422  000FA2  5004               	subwfb	((c:___lwdiv@dividend+1)),c
  7423  000FA4  5A02               
  7424                           	line	24
  7425                           	
  7426                           i1l1878:
  7427  000FA6                     	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
  7428  000FA6  8005               	goto	i1l1880
  7429  000FA8  EFD6  F007         	line	25
  7430                           	
  7431                           i1l865:
  7432  000FAC                     	line	26
  7433                           	
  7434                           i1l1880:
  7435  000FAC                     	bcf	status,0
  7436  000FAC  90D8               	rrcf	((c:___lwdiv@divisor+1)),c
  7437  000FAE  3204               	rrcf	((c:___lwdiv@divisor)),c
  7438  000FB0  3203               	line	27
  7439                           	
  7440                           i1l1882:
  7441  000FB2                     	decfsz	((c:___lwdiv@counter)),c
  7442  000FB2  2E07               	
  7443                           	goto	i1l1872
  7444  000FB4  EFC1  F007         	goto	i1l860
  7445  000FB8  EFDE  F007         	
  7446                           i1l866:
  7447  000FBC                     	line	28
  7448                           	
  7449                           i1l860:
  7450  000FBC                     	line	29
  7451                           	movff	(c:___lwdiv@quotient),(c:?___lwdiv)
  7452  000FBC  C005  F001         	movff	(c:___lwdiv@quotient+1),(c:?___lwdiv+1)
  7453  000FC0  C006  F002         	line	30
  7454                           	
  7455                           i1l867:
  7456  000FC4                     	return	;funcret
  7457  000FC4  0012               	opt stack 0
  7458                           GLOBAL	__end_of___lwdiv
  7459                           	__end_of___lwdiv:
  7460  000FC6                     	signat	___lwdiv,8314
  7461                           	global	_M_set_DC
  7462                           
  7463 ;; *************** function _M_set_DC *****************
  7464 ;; Defined at:
  7465 ;;		line 458 in file "main.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;  DutyCycle       2    0[COMRAM] unsigned int 
  7468 ;;  motor           1    2[COMRAM] unsigned char 
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;		None
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  1    wreg      void 
  7473 ;; Registers used:
  7474 ;;		wreg, status,2, status,0
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7480 ;;      Params:         3       0       0       0       0       0       0
  7481 ;;      Locals:         0       0       0       0       0       0       0
  7482 ;;      Temps:          2       0       0       0       0       0       0
  7483 ;;      Totals:         5       0       0       0       0       0       0
  7484 ;;Total ram usage:        5 bytes
  7485 ;; Hardware stack levels used:    1
  7486 ;; This function calls:
  7487 ;;		Nothing
  7488 ;; This function is called by:
  7489 ;;		_Rx_ISR
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           psect	text31,class=CODE,space=0,reloc=2,group=0
  7493                           	file	"main.c"
  7494                           	line	458
  7495                           global __ptext31
  7496                           __ptext31:
  7497  00061C                     psect	text31
  7498                           	file	"main.c"
  7499                           	line	458
  7500                           	global	__size_of_M_set_DC
  7501                           	__size_of_M_set_DC	equ	__end_of_M_set_DC-_M_set_DC
  7502  0000                     	
  7503                           _M_set_DC:
  7504  00061C                     ;incstack = 0
  7505                           	opt	stack 26
  7506                           	line	460
  7507                           	
  7508                           i1l2260:
  7509  00061C                     ;main.c: 458: void M_set_DC(unsigned int DutyCycle, unsigned char motor);main.c: 459: {;
                                 main.c: 460:     if(motor<1||motor>3||DutyCycle<=0||DutyCycle>1023)return;
  7510                           	movf	((c:M_set_DC@motor)),c,w
  7511  00061C  5003               	btfsc	status,2
  7512  00061E  B4D8               	goto	i1u177_21
  7513  000620  EF14  F003         	goto	i1u177_20
  7514  000624  EF16  F003         i1u177_21:
  7515  000628                     	goto	i1l265
  7516  000628  EFE7  F003         i1u177_20:
  7517  00062C                     	
  7518                           i1l2262:
  7519  00062C                     		movlw	04h-0
  7520  00062C  0E04               	cpfslt	((c:M_set_DC@motor)),c
  7521  00062E  6003               	goto	i1u178_21
  7522  000630  EF1C  F003         	goto	i1u178_20
  7523  000634  EF1E  F003         
  7524                           i1u178_21:
  7525  000638                     	goto	i1l265
  7526  000638  EFE7  F003         i1u178_20:
  7527  00063C                     	
  7528                           i1l2264:
  7529  00063C                     	movf	((c:M_set_DC@DutyCycle)),c,w
  7530  00063C  5001               iorwf	((c:M_set_DC@DutyCycle+1)),c,w
  7531  00063E  1002               	btfsc	status,2
  7532  000640  B4D8               	goto	i1u179_21
  7533  000642  EF25  F003         	goto	i1u179_20
  7534  000646  EF27  F003         
  7535                           i1u179_21:
  7536  00064A                     	goto	i1l265
  7537  00064A  EFE7  F003         i1u179_20:
  7538  00064E                     	
  7539                           i1l2266:
  7540  00064E                     		movlw	4
  7541  00064E  0E04               	subwf	 ((c:M_set_DC@DutyCycle+1)),c,w
  7542  000650  5C02               	btfss	status,0
  7543  000652  A0D8               	goto	i1u180_21
  7544  000654  EF2E  F003         	goto	i1u180_20
  7545  000658  EF30  F003         
  7546                           i1u180_21:
  7547  00065C                     	goto	i1l2284
  7548  00065C  EFCE  F003         i1u180_20:
  7549  000660                     	goto	i1l265
  7550  000660  EFE7  F003         	
  7551                           i1l264:
  7552  000664                     	goto	i1l265
  7553  000664  EFE7  F003         	
  7554                           i1l262:
  7555  000668                     	line	461
  7556                           ;main.c: 461:     switch(motor)
  7557                           	goto	i1l2284
  7558  000668  EFCE  F003         	line	463
  7559                           ;main.c: 462:     {;main.c: 463:         case 1:
  7560                           	
  7561                           i1l267:
  7562  00066C                     	line	464
  7563                           	
  7564                           i1l2268:
  7565  00066C                     ;main.c: 464:             CCPR1L=DutyCycle>>2;
  7566                           	movff	(c:M_set_DC@DutyCycle),??_M_set_DC+0+0
  7567  00066C  C001  F004         	movff	(c:M_set_DC@DutyCycle+1),??_M_set_DC+0+0+1
  7568  000670  C002  F005         	bcf	status,0
  7569  000674  90D8               	rrcf	(??_M_set_DC+0+1),c
  7570  000676  3205               	rrcf	(??_M_set_DC+0+0),c
  7571  000678  3204               	bcf	status,0
  7572  00067A  90D8               	rrcf	(??_M_set_DC+0+1),c
  7573  00067C  3205               	rrcf	(??_M_set_DC+0+0),c
  7574  00067E  3204               	movf	(??_M_set_DC+0+0),c,w
  7575  000680  5004               	movwf	((c:4030)),c	;volatile
  7576  000682  6EBE               	line	465
  7577                           ;main.c: 465:             DC1B1=(DutyCycle&2)>>1;
  7578                           	bcf	status,0
  7579  000684  90D8               	rrcf	((c:M_set_DC@DutyCycle+1)),c,w
  7580  000686  3002               	movwf	(??_M_set_DC+0+0+1)&0ffh,c
  7581  000688  6E05               	rrcf	((c:M_set_DC@DutyCycle)),c,w
  7582  00068A  3001               	movwf	(??_M_set_DC+0+0)&0ffh,c
  7583  00068C  6E04               	rrcf	(??_M_set_DC+0+0),c,w
  7584  00068E  3004               	btfsc	status,0
  7585  000690  B0D8               	goto	i1u181_21
  7586  000692  EF4D  F003         	goto	i1u181_20
  7587  000696  EF50  F003         i1u181_21:
  7588  00069A                     	bsf	c:(32237/8),(32237)&7	;volatile
  7589  00069A  8ABD               	goto	i1u182_25
  7590  00069C  EF51  F003         i1u181_20:
  7591  0006A0                     	bcf	c:(32237/8),(32237)&7	;volatile
  7592  0006A0  9ABD               i1u182_25:
  7593  0006A2                     	line	466
  7594                           	
  7595                           i1l2270:
  7596  0006A2                     ;main.c: 466:             DC1B0=DutyCycle&1;
  7597                           	btfsc	((c:M_set_DC@DutyCycle)),c,0
  7598  0006A2  B001               	goto	i1u183_21
  7599  0006A4  EF56  F003         	goto	i1u183_20
  7600  0006A8  EF59  F003         i1u183_21:
  7601  0006AC                     	bsf	c:(32236/8),(32236)&7	;volatile
  7602  0006AC  88BD               	goto	i1u184_25
  7603  0006AE  EF5A  F003         i1u183_20:
  7604  0006B2                     	bcf	c:(32236/8),(32236)&7	;volatile
  7605  0006B2  98BD               i1u184_25:
  7606  0006B4                     	line	467
  7607                           ;main.c: 467:             break;
  7608                           	goto	i1l265
  7609  0006B4  EFE7  F003         	line	468
  7610                           ;main.c: 468:         case 2:
  7611                           	
  7612                           i1l269:
  7613  0006B8                     	line	469
  7614                           	
  7615                           i1l2272:
  7616  0006B8                     ;main.c: 469:             CCPR2L=DutyCycle>>2;
  7617                           	movff	(c:M_set_DC@DutyCycle),??_M_set_DC+0+0
  7618  0006B8  C001  F004         	movff	(c:M_set_DC@DutyCycle+1),??_M_set_DC+0+0+1
  7619  0006BC  C002  F005         	bcf	status,0
  7620  0006C0  90D8               	rrcf	(??_M_set_DC+0+1),c
  7621  0006C2  3205               	rrcf	(??_M_set_DC+0+0),c
  7622  0006C4  3204               	bcf	status,0
  7623  0006C6  90D8               	rrcf	(??_M_set_DC+0+1),c
  7624  0006C8  3205               	rrcf	(??_M_set_DC+0+0),c
  7625  0006CA  3204               	movf	(??_M_set_DC+0+0),c,w
  7626  0006CC  5004               	movwf	((c:4027)),c	;volatile
  7627  0006CE  6EBB               	line	470
  7628                           ;main.c: 470:             DC2B1=(DutyCycle&2)>>1;
  7629                           	bcf	status,0
  7630  0006D0  90D8               	rrcf	((c:M_set_DC@DutyCycle+1)),c,w
  7631  0006D2  3002               	movwf	(??_M_set_DC+0+0+1)&0ffh,c
  7632  0006D4  6E05               	rrcf	((c:M_set_DC@DutyCycle)),c,w
  7633  0006D6  3001               	movwf	(??_M_set_DC+0+0)&0ffh,c
  7634  0006D8  6E04               	rrcf	(??_M_set_DC+0+0),c,w
  7635  0006DA  3004               	btfsc	status,0
  7636  0006DC  B0D8               	goto	i1u185_21
  7637  0006DE  EF73  F003         	goto	i1u185_20
  7638  0006E2  EF76  F003         i1u185_21:
  7639  0006E6                     	bsf	c:(32213/8),(32213)&7	;volatile
  7640  0006E6  8ABA               	goto	i1u186_25
  7641  0006E8  EF77  F003         i1u185_20:
  7642  0006EC                     	bcf	c:(32213/8),(32213)&7	;volatile
  7643  0006EC  9ABA               i1u186_25:
  7644  0006EE                     	line	471
  7645                           	
  7646                           i1l2274:
  7647  0006EE                     ;main.c: 471:             DC2B0=DutyCycle&1;
  7648                           	btfsc	((c:M_set_DC@DutyCycle)),c,0
  7649  0006EE  B001               	goto	i1u187_21
  7650  0006F0  EF7C  F003         	goto	i1u187_20
  7651  0006F4  EF7F  F003         i1u187_21:
  7652  0006F8                     	bsf	c:(32212/8),(32212)&7	;volatile
  7653  0006F8  88BA               	goto	i1u188_25
  7654  0006FA  EF80  F003         i1u187_20:
  7655  0006FE                     	bcf	c:(32212/8),(32212)&7	;volatile
  7656  0006FE  98BA               i1u188_25:
  7657  000700                     	line	472
  7658                           ;main.c: 472:             break;
  7659                           	goto	i1l265
  7660  000700  EFE7  F003         	line	473
  7661                           ;main.c: 473:         case 3:
  7662                           	
  7663                           i1l270:
  7664  000704                     	line	474
  7665                           	
  7666                           i1l2276:
  7667  000704                     ;main.c: 474:             CCPR1L=DutyCycle>>2;
  7668                           	movff	(c:M_set_DC@DutyCycle),??_M_set_DC+0+0
  7669  000704  C001  F004         	movff	(c:M_set_DC@DutyCycle+1),??_M_set_DC+0+0+1
  7670  000708  C002  F005         	bcf	status,0
  7671  00070C  90D8               	rrcf	(??_M_set_DC+0+1),c
  7672  00070E  3205               	rrcf	(??_M_set_DC+0+0),c
  7673  000710  3204               	bcf	status,0
  7674  000712  90D8               	rrcf	(??_M_set_DC+0+1),c
  7675  000714  3205               	rrcf	(??_M_set_DC+0+0),c
  7676  000716  3204               	movf	(??_M_set_DC+0+0),c,w
  7677  000718  5004               	movwf	((c:4030)),c	;volatile
  7678  00071A  6EBE               	line	475
  7679                           ;main.c: 475:             DC1B1=(DutyCycle&2)>>1;
  7680                           	bcf	status,0
  7681  00071C  90D8               	rrcf	((c:M_set_DC@DutyCycle+1)),c,w
  7682  00071E  3002               	movwf	(??_M_set_DC+0+0+1)&0ffh,c
  7683  000720  6E05               	rrcf	((c:M_set_DC@DutyCycle)),c,w
  7684  000722  3001               	movwf	(??_M_set_DC+0+0)&0ffh,c
  7685  000724  6E04               	rrcf	(??_M_set_DC+0+0),c,w
  7686  000726  3004               	btfsc	status,0
  7687  000728  B0D8               	goto	i1u189_21
  7688  00072A  EF99  F003         	goto	i1u189_20
  7689  00072E  EF9C  F003         i1u189_21:
  7690  000732                     	bsf	c:(32237/8),(32237)&7	;volatile
  7691  000732  8ABD               	goto	i1u190_25
  7692  000734  EF9D  F003         i1u189_20:
  7693  000738                     	bcf	c:(32237/8),(32237)&7	;volatile
  7694  000738  9ABD               i1u190_25:
  7695  00073A                     	line	476
  7696                           	
  7697                           i1l2278:
  7698  00073A                     ;main.c: 476:             DC1B0=DutyCycle&1;
  7699                           	btfsc	((c:M_set_DC@DutyCycle)),c,0
  7700  00073A  B001               	goto	i1u191_21
  7701  00073C  EFA2  F003         	goto	i1u191_20
  7702  000740  EFA5  F003         i1u191_21:
  7703  000744                     	bsf	c:(32236/8),(32236)&7	;volatile
  7704  000744  88BD               	goto	i1u192_25
  7705  000746  EFA6  F003         i1u191_20:
  7706  00074A                     	bcf	c:(32236/8),(32236)&7	;volatile
  7707  00074A  98BD               i1u192_25:
  7708  00074C                     	line	477
  7709                           ;main.c: 477:             CCPR2L=DutyCycle>>2;
  7710                           	movff	(c:M_set_DC@DutyCycle),??_M_set_DC+0+0
  7711  00074C  C001  F004         	movff	(c:M_set_DC@DutyCycle+1),??_M_set_DC+0+0+1
  7712  000750  C002  F005         	bcf	status,0
  7713  000754  90D8               	rrcf	(??_M_set_DC+0+1),c
  7714  000756  3205               	rrcf	(??_M_set_DC+0+0),c
  7715  000758  3204               	bcf	status,0
  7716  00075A  90D8               	rrcf	(??_M_set_DC+0+1),c
  7717  00075C  3205               	rrcf	(??_M_set_DC+0+0),c
  7718  00075E  3204               	movf	(??_M_set_DC+0+0),c,w
  7719  000760  5004               	movwf	((c:4027)),c	;volatile
  7720  000762  6EBB               	line	478
  7721                           ;main.c: 478:             DC2B1=(DutyCycle&2)>>1;
  7722                           	bcf	status,0
  7723  000764  90D8               	rrcf	((c:M_set_DC@DutyCycle+1)),c,w
  7724  000766  3002               	movwf	(??_M_set_DC+0+0+1)&0ffh,c
  7725  000768  6E05               	rrcf	((c:M_set_DC@DutyCycle)),c,w
  7726  00076A  3001               	movwf	(??_M_set_DC+0+0)&0ffh,c
  7727  00076C  6E04               	rrcf	(??_M_set_DC+0+0),c,w
  7728  00076E  3004               	btfsc	status,0
  7729  000770  B0D8               	goto	i1u193_21
  7730  000772  EFBD  F003         	goto	i1u193_20
  7731  000776  EFC0  F003         i1u193_21:
  7732  00077A                     	bsf	c:(32213/8),(32213)&7	;volatile
  7733  00077A  8ABA               	goto	i1u194_25
  7734  00077C  EFC1  F003         i1u193_20:
  7735  000780                     	bcf	c:(32213/8),(32213)&7	;volatile
  7736  000780  9ABA               i1u194_25:
  7737  000782                     	line	479
  7738                           	
  7739                           i1l2280:
  7740  000782                     ;main.c: 479:             DC2B0=DutyCycle&1;
  7741                           	btfsc	((c:M_set_DC@DutyCycle)),c,0
  7742  000782  B001               	goto	i1u195_21
  7743  000784  EFC6  F003         	goto	i1u195_20
  7744  000788  EFC9  F003         i1u195_21:
  7745  00078C                     	bsf	c:(32212/8),(32212)&7	;volatile
  7746  00078C  88BA               	goto	i1u196_25
  7747  00078E  EFCA  F003         i1u195_20:
  7748  000792                     	bcf	c:(32212/8),(32212)&7	;volatile
  7749  000792  98BA               i1u196_25:
  7750  000794                     	line	480
  7751                           ;main.c: 480:             break;
  7752                           	goto	i1l265
  7753  000794  EFE7  F003         	line	481
  7754                           	
  7755                           i1l2282:
  7756  000798                     ;main.c: 481:     }
  7757                           	goto	i1l265
  7758  000798  EFE7  F003         	
  7759                           i1l266:
  7760  00079C                     	
  7761                           i1l2284:
  7762  00079C                     	movf	((c:M_set_DC@motor)),c,w
  7763  00079C  5003               	movwf	(??_M_set_DC+0+0)&0ffh,c
  7764  00079E  6E04               	clrf	(??_M_set_DC+0+0+1)&0ffh,c
  7765  0007A0  6A05               
  7766                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  7767                           ; Switch size 1, requested type "space"
  7768                           ; Number of cases is 1, Range of values is 0 to 0
  7769                           ; switch strategies available:
  7770                           ; Name         Instructions Cycles
  7771                           ; simple_byte            4     3 (average)
  7772                           ;	Chosen strategy is simple_byte
  7773                           
  7774                           	movf ??_M_set_DC+0+1,c,w
  7775  0007A2  5005               	xorlw	0^0	; case 0
  7776  0007A4  0A00               	skipnz
  7777  0007A6  B4D8               	goto	i1l2554
  7778  0007A8  EFD8  F003         	goto	i1l265
  7779  0007AC  EFE7  F003         	
  7780                           i1l2554:
  7781  0007B0                     ; Switch size 1, requested type "space"
  7782                           ; Number of cases is 3, Range of values is 1 to 3
  7783                           ; switch strategies available:
  7784                           ; Name         Instructions Cycles
  7785                           ; simple_byte           10     6 (average)
  7786                           ;	Chosen strategy is simple_byte
  7787                           
  7788                           	movf ??_M_set_DC+0+0,c,w
  7789  0007B0  5004               	xorlw	1^0	; case 1
  7790  0007B2  0A01               	skipnz
  7791  0007B4  B4D8               	goto	i1l2268
  7792  0007B6  EF36  F003         	xorlw	2^1	; case 2
  7793  0007BA  0A03               	skipnz
  7794  0007BC  B4D8               	goto	i1l2272
  7795  0007BE  EF5C  F003         	xorlw	3^2	; case 3
  7796  0007C2  0A01               	skipnz
  7797  0007C4  B4D8               	goto	i1l2276
  7798  0007C6  EF82  F003         	goto	i1l265
  7799  0007CA  EFE7  F003         
  7800                           	
  7801                           i1l268:
  7802  0007CE                     	line	482
  7803                           	
  7804                           i1l265:
  7805  0007CE                     	return	;funcret
  7806  0007CE  0012               	opt stack 0
  7807                           GLOBAL	__end_of_M_set_DC
  7808                           	__end_of_M_set_DC:
  7809  0007D0                     	signat	_M_set_DC,8313
  7810                           	global	_M_foward_direction
  7811                           
  7812 ;; *************** function _M_foward_direction *****************
  7813 ;; Defined at:
  7814 ;;		line 403 in file "main.c"
  7815 ;; Parameters:    Size  Location     Type
  7816 ;;		None
  7817 ;; Auto vars:     Size  Location     Type
  7818 ;;		None
  7819 ;; Return value:  Size  Location     Type
  7820 ;;                  1    wreg      void 
  7821 ;; Registers used:
  7822 ;;		wreg, status,2, status,0
  7823 ;; Tracked objects:
  7824 ;;		On entry : 0/0
  7825 ;;		On exit  : 0/0
  7826 ;;		Unchanged: 0/0
  7827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7828 ;;      Params:         0       0       0       0       0       0       0
  7829 ;;      Locals:         0       0       0       0       0       0       0
  7830 ;;      Temps:          0       0       0       0       0       0       0
  7831 ;;      Totals:         0       0       0       0       0       0       0
  7832 ;;Total ram usage:        0 bytes
  7833 ;; Hardware stack levels used:    1
  7834 ;; This function calls:
  7835 ;;		Nothing
  7836 ;; This function is called by:
  7837 ;;		_Rx_ISR
  7838 ;; This function uses a non-reentrant model
  7839 ;;
  7840                           psect	text32,class=CODE,space=0,reloc=2,group=0
  7841                           	line	403
  7842                           global __ptext32
  7843                           __ptext32:
  7844  0015B6                     psect	text32
  7845                           	file	"main.c"
  7846                           	line	403
  7847                           	global	__size_of_M_foward_direction
  7848                           	__size_of_M_foward_direction	equ	__end_of_M_foward_direction-_M_foward_direction
  7849  0000                     	
  7850                           _M_foward_direction:
  7851  0015B6                     ;incstack = 0
  7852                           	opt	stack 26
  7853                           	line	405
  7854                           	
  7855                           i1l2244:
  7856  0015B6                     ;main.c: 405:     if(CCPR1L!=CCPR2L)
  7857                           	movf	((c:4027)),c,w	;volatile
  7858  0015B6  50BB               xorwf	((c:4030)),c,w	;volatile
  7859  0015B8  18BE               	btfsc	status,2
  7860  0015BA  B4D8               	goto	i1u157_21
  7861  0015BC  EFE2  F00A         	goto	i1u157_20
  7862  0015C0  EFE4  F00A         
  7863                           i1u157_21:
  7864  0015C4                     	goto	i1l242
  7865  0015C4  EFF8  F00A         i1u157_20:
  7866  0015C8                     	line	407
  7867                           	
  7868                           i1l2246:
  7869  0015C8                     ;main.c: 406:     {;main.c: 407:         CCPR2L=CCPR1L;
  7870                           	movff	(c:4030),(c:4027)	;volatile
  7871  0015C8  CFBE FFBB          	line	408
  7872                           ;main.c: 408:         DC2B1=DC1B1;
  7873                           	btfsc	c:(32237/8),(32237)&7	;volatile
  7874  0015CC  BABD               	goto	i1u158_21
  7875  0015CE  EFEB  F00A         	goto	i1u158_20
  7876  0015D2  EFEE  F00A         i1u158_21:
  7877  0015D6                     	bsf	c:(32213/8),(32213)&7	;volatile
  7878  0015D6  8ABA               	goto	i1u159_25
  7879  0015D8  EFEF  F00A         i1u158_20:
  7880  0015DC                     	bcf	c:(32213/8),(32213)&7	;volatile
  7881  0015DC  9ABA               i1u159_25:
  7882  0015DE                     	line	409
  7883                           ;main.c: 409:         DC2B0=DC1B0;
  7884                           	btfsc	c:(32236/8),(32236)&7	;volatile
  7885  0015DE  B8BD               	goto	i1u160_21
  7886  0015E0  EFF4  F00A         	goto	i1u160_20
  7887  0015E4  EFF7  F00A         i1u160_21:
  7888  0015E8                     	bsf	c:(32212/8),(32212)&7	;volatile
  7889  0015E8  88BA               	goto	i1u161_25
  7890  0015EA  EFF8  F00A         i1u160_20:
  7891  0015EE                     	bcf	c:(32212/8),(32212)&7	;volatile
  7892  0015EE  98BA               i1u161_25:
  7893  0015F0                     	line	410
  7894                           ;main.c: 410:     }
  7895                           	
  7896                           i1l242:
  7897  0015F0                     	line	411
  7898                           ;main.c: 411:     LATDbits.LD4=1;LATDbits.LD6=1;LATDbits.LD5=0;LATDbits.LD7=0;
  7899                           	bsf	((c:3980)),c,4	;volatile
  7900  0015F0  888C               	bsf	((c:3980)),c,6	;volatile
  7901  0015F2  8C8C               	bcf	((c:3980)),c,5	;volatile
  7902  0015F4  9A8C               	bcf	((c:3980)),c,7	;volatile
  7903  0015F6  9E8C               	line	412
  7904                           	
  7905                           i1l243:
  7906  0015F8                     	return	;funcret
  7907  0015F8  0012               	opt stack 0
  7908                           GLOBAL	__end_of_M_foward_direction
  7909                           	__end_of_M_foward_direction:
  7910  0015FA                     	signat	_M_foward_direction,89
  7911                           	global	_M_clockwise_direction
  7912                           
  7913 ;; *************** function _M_clockwise_direction *****************
  7914 ;; Defined at:
  7915 ;;		line 425 in file "main.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;		None
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;		None
  7920 ;; Return value:  Size  Location     Type
  7921 ;;                  1    wreg      void 
  7922 ;; Registers used:
  7923 ;;		wreg, status,2, status,0
  7924 ;; Tracked objects:
  7925 ;;		On entry : 0/0
  7926 ;;		On exit  : 0/0
  7927 ;;		Unchanged: 0/0
  7928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7929 ;;      Params:         0       0       0       0       0       0       0
  7930 ;;      Locals:         0       0       0       0       0       0       0
  7931 ;;      Temps:          0       0       0       0       0       0       0
  7932 ;;      Totals:         0       0       0       0       0       0       0
  7933 ;;Total ram usage:        0 bytes
  7934 ;; Hardware stack levels used:    1
  7935 ;; This function calls:
  7936 ;;		Nothing
  7937 ;; This function is called by:
  7938 ;;		_Rx_ISR
  7939 ;; This function uses a non-reentrant model
  7940 ;;
  7941                           psect	text33,class=CODE,space=0,reloc=2,group=0
  7942                           	line	425
  7943                           global __ptext33
  7944                           __ptext33:
  7945  0015FA                     psect	text33
  7946                           	file	"main.c"
  7947                           	line	425
  7948                           	global	__size_of_M_clockwise_direction
  7949                           	__size_of_M_clockwise_direction	equ	__end_of_M_clockwise_direction-_M_clockwise_directi
                                 on
  7950  0000                     	
  7951                           _M_clockwise_direction:
  7952  0015FA                     ;incstack = 0
  7953                           	opt	stack 26
  7954                           	line	427
  7955                           	
  7956                           i1l2252:
  7957  0015FA                     ;main.c: 427:     if(CCPR1L!=CCPR2L)
  7958                           	movf	((c:4027)),c,w	;volatile
  7959  0015FA  50BB               xorwf	((c:4030)),c,w	;volatile
  7960  0015FC  18BE               	btfsc	status,2
  7961  0015FE  B4D8               	goto	i1u167_21
  7962  001600  EF04  F00B         	goto	i1u167_20
  7963  001604  EF06  F00B         
  7964                           i1u167_21:
  7965  001608                     	goto	i1l250
  7966  001608  EF1A  F00B         i1u167_20:
  7967  00160C                     	line	429
  7968                           	
  7969                           i1l2254:
  7970  00160C                     ;main.c: 428:     {;main.c: 429:         CCPR2L=CCPR1L;
  7971                           	movff	(c:4030),(c:4027)	;volatile
  7972  00160C  CFBE FFBB          	line	430
  7973                           ;main.c: 430:         DC2B1=DC1B1;
  7974                           	btfsc	c:(32237/8),(32237)&7	;volatile
  7975  001610  BABD               	goto	i1u168_21
  7976  001612  EF0D  F00B         	goto	i1u168_20
  7977  001616  EF10  F00B         i1u168_21:
  7978  00161A                     	bsf	c:(32213/8),(32213)&7	;volatile
  7979  00161A  8ABA               	goto	i1u169_25
  7980  00161C  EF11  F00B         i1u168_20:
  7981  001620                     	bcf	c:(32213/8),(32213)&7	;volatile
  7982  001620  9ABA               i1u169_25:
  7983  001622                     	line	431
  7984                           ;main.c: 431:         DC2B0=DC1B0;
  7985                           	btfsc	c:(32236/8),(32236)&7	;volatile
  7986  001622  B8BD               	goto	i1u170_21
  7987  001624  EF16  F00B         	goto	i1u170_20
  7988  001628  EF19  F00B         i1u170_21:
  7989  00162C                     	bsf	c:(32212/8),(32212)&7	;volatile
  7990  00162C  88BA               	goto	i1u171_25
  7991  00162E  EF1A  F00B         i1u170_20:
  7992  001632                     	bcf	c:(32212/8),(32212)&7	;volatile
  7993  001632  98BA               i1u171_25:
  7994  001634                     	line	432
  7995                           ;main.c: 432:     }
  7996                           	
  7997                           i1l250:
  7998  001634                     	line	433
  7999                           ;main.c: 433:     LATDbits.LD4=1;LATDbits.LD6=0;LATDbits.LD5=0;LATDbits.LD7=1;
  8000                           	bsf	((c:3980)),c,4	;volatile
  8001  001634  888C               	bcf	((c:3980)),c,6	;volatile
  8002  001636  9C8C               	bcf	((c:3980)),c,5	;volatile
  8003  001638  9A8C               	bsf	((c:3980)),c,7	;volatile
  8004  00163A  8E8C               	line	434
  8005                           	
  8006                           i1l251:
  8007  00163C                     	return	;funcret
  8008  00163C  0012               	opt stack 0
  8009                           GLOBAL	__end_of_M_clockwise_direction
  8010                           	__end_of_M_clockwise_direction:
  8011  00163E                     	signat	_M_clockwise_direction,89
  8012                           	global	_M_backward_direction
  8013                           
  8014 ;; *************** function _M_backward_direction *****************
  8015 ;; Defined at:
  8016 ;;		line 414 in file "main.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;		None
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;		None
  8021 ;; Return value:  Size  Location     Type
  8022 ;;                  1    wreg      void 
  8023 ;; Registers used:
  8024 ;;		wreg, status,2, status,0
  8025 ;; Tracked objects:
  8026 ;;		On entry : 0/0
  8027 ;;		On exit  : 0/0
  8028 ;;		Unchanged: 0/0
  8029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8030 ;;      Params:         0       0       0       0       0       0       0
  8031 ;;      Locals:         0       0       0       0       0       0       0
  8032 ;;      Temps:          0       0       0       0       0       0       0
  8033 ;;      Totals:         0       0       0       0       0       0       0
  8034 ;;Total ram usage:        0 bytes
  8035 ;; Hardware stack levels used:    1
  8036 ;; This function calls:
  8037 ;;		Nothing
  8038 ;; This function is called by:
  8039 ;;		_Rx_ISR
  8040 ;; This function uses a non-reentrant model
  8041 ;;
  8042                           psect	text34,class=CODE,space=0,reloc=2,group=0
  8043                           	line	414
  8044                           global __ptext34
  8045                           __ptext34:
  8046  00163E                     psect	text34
  8047                           	file	"main.c"
  8048                           	line	414
  8049                           	global	__size_of_M_backward_direction
  8050                           	__size_of_M_backward_direction	equ	__end_of_M_backward_direction-_M_backward_direction

  8051  0000                     	
  8052                           _M_backward_direction:
  8053  00163E                     ;incstack = 0
  8054                           	opt	stack 26
  8055                           	line	416
  8056                           	
  8057                           i1l2248:
  8058  00163E                     ;main.c: 416:     if(CCPR1L!=CCPR2L)
  8059                           	movf	((c:4027)),c,w	;volatile
  8060  00163E  50BB               xorwf	((c:4030)),c,w	;volatile
  8061  001640  18BE               	btfsc	status,2
  8062  001642  B4D8               	goto	i1u162_21
  8063  001644  EF26  F00B         	goto	i1u162_20
  8064  001648  EF28  F00B         
  8065                           i1u162_21:
  8066  00164C                     	goto	i1l246
  8067  00164C  EF3C  F00B         i1u162_20:
  8068  001650                     	line	418
  8069                           	
  8070                           i1l2250:
  8071  001650                     ;main.c: 417:     {;main.c: 418:         CCPR2L=CCPR1L;
  8072                           	movff	(c:4030),(c:4027)	;volatile
  8073  001650  CFBE FFBB          	line	419
  8074                           ;main.c: 419:         DC2B1=DC1B1;
  8075                           	btfsc	c:(32237/8),(32237)&7	;volatile
  8076  001654  BABD               	goto	i1u163_21
  8077  001656  EF2F  F00B         	goto	i1u163_20
  8078  00165A  EF32  F00B         i1u163_21:
  8079  00165E                     	bsf	c:(32213/8),(32213)&7	;volatile
  8080  00165E  8ABA               	goto	i1u164_25
  8081  001660  EF33  F00B         i1u163_20:
  8082  001664                     	bcf	c:(32213/8),(32213)&7	;volatile
  8083  001664  9ABA               i1u164_25:
  8084  001666                     	line	420
  8085                           ;main.c: 420:         DC2B0=DC1B0;
  8086                           	btfsc	c:(32236/8),(32236)&7	;volatile
  8087  001666  B8BD               	goto	i1u165_21
  8088  001668  EF38  F00B         	goto	i1u165_20
  8089  00166C  EF3B  F00B         i1u165_21:
  8090  001670                     	bsf	c:(32212/8),(32212)&7	;volatile
  8091  001670  88BA               	goto	i1u166_25
  8092  001672  EF3C  F00B         i1u165_20:
  8093  001676                     	bcf	c:(32212/8),(32212)&7	;volatile
  8094  001676  98BA               i1u166_25:
  8095  001678                     	line	421
  8096                           ;main.c: 421:     }
  8097                           	
  8098                           i1l246:
  8099  001678                     	line	422
  8100                           ;main.c: 422:     LATDbits.LD4=0;LATDbits.LD6=0;LATDbits.LD5=1;LATDbits.LD7=1;
  8101                           	bcf	((c:3980)),c,4	;volatile
  8102  001678  988C               	bcf	((c:3980)),c,6	;volatile
  8103  00167A  9C8C               	bsf	((c:3980)),c,5	;volatile
  8104  00167C  8A8C               	bsf	((c:3980)),c,7	;volatile
  8105  00167E  8E8C               	line	423
  8106                           	
  8107                           i1l247:
  8108  001680                     	return	;funcret
  8109  001680  0012               	opt stack 0
  8110                           GLOBAL	__end_of_M_backward_direction
  8111                           	__end_of_M_backward_direction:
  8112  001682                     	signat	_M_backward_direction,89
  8113                           	global	_M_anticlockwise_direction
  8114                           
  8115 ;; *************** function _M_anticlockwise_direction *****************
  8116 ;; Defined at:
  8117 ;;		line 436 in file "main.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;		None
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;		None
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  1    wreg      void 
  8124 ;; Registers used:
  8125 ;;		wreg, status,2, status,0
  8126 ;; Tracked objects:
  8127 ;;		On entry : 0/0
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8131 ;;      Params:         0       0       0       0       0       0       0
  8132 ;;      Locals:         0       0       0       0       0       0       0
  8133 ;;      Temps:          0       0       0       0       0       0       0
  8134 ;;      Totals:         0       0       0       0       0       0       0
  8135 ;;Total ram usage:        0 bytes
  8136 ;; Hardware stack levels used:    1
  8137 ;; This function calls:
  8138 ;;		Nothing
  8139 ;; This function is called by:
  8140 ;;		_Rx_ISR
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           psect	text35,class=CODE,space=0,reloc=2,group=0
  8144                           	line	436
  8145                           global __ptext35
  8146                           __ptext35:
  8147  001682                     psect	text35
  8148                           	file	"main.c"
  8149                           	line	436
  8150                           	global	__size_of_M_anticlockwise_direction
  8151                           	__size_of_M_anticlockwise_direction	equ	__end_of_M_anticlockwise_direction-_M_anticlock
                                 wise_direction
  8152  0000                     	
  8153                           _M_anticlockwise_direction:
  8154  001682                     ;incstack = 0
  8155                           	opt	stack 26
  8156                           	line	438
  8157                           	
  8158                           i1l2256:
  8159  001682                     ;main.c: 438:     if(CCPR1L!=CCPR2L)
  8160                           	movf	((c:4027)),c,w	;volatile
  8161  001682  50BB               xorwf	((c:4030)),c,w	;volatile
  8162  001684  18BE               	btfsc	status,2
  8163  001686  B4D8               	goto	i1u172_21
  8164  001688  EF48  F00B         	goto	i1u172_20
  8165  00168C  EF4A  F00B         
  8166                           i1u172_21:
  8167  001690                     	goto	i1l254
  8168  001690  EF5E  F00B         i1u172_20:
  8169  001694                     	line	440
  8170                           	
  8171                           i1l2258:
  8172  001694                     ;main.c: 439:     {;main.c: 440:         CCPR2L=CCPR1L;
  8173                           	movff	(c:4030),(c:4027)	;volatile
  8174  001694  CFBE FFBB          	line	441
  8175                           ;main.c: 441:         DC2B1=DC1B1;
  8176                           	btfsc	c:(32237/8),(32237)&7	;volatile
  8177  001698  BABD               	goto	i1u173_21
  8178  00169A  EF51  F00B         	goto	i1u173_20
  8179  00169E  EF54  F00B         i1u173_21:
  8180  0016A2                     	bsf	c:(32213/8),(32213)&7	;volatile
  8181  0016A2  8ABA               	goto	i1u174_25
  8182  0016A4  EF55  F00B         i1u173_20:
  8183  0016A8                     	bcf	c:(32213/8),(32213)&7	;volatile
  8184  0016A8  9ABA               i1u174_25:
  8185  0016AA                     	line	442
  8186                           ;main.c: 442:         DC2B0=DC1B0;
  8187                           	btfsc	c:(32236/8),(32236)&7	;volatile
  8188  0016AA  B8BD               	goto	i1u175_21
  8189  0016AC  EF5A  F00B         	goto	i1u175_20
  8190  0016B0  EF5D  F00B         i1u175_21:
  8191  0016B4                     	bsf	c:(32212/8),(32212)&7	;volatile
  8192  0016B4  88BA               	goto	i1u176_25
  8193  0016B6  EF5E  F00B         i1u175_20:
  8194  0016BA                     	bcf	c:(32212/8),(32212)&7	;volatile
  8195  0016BA  98BA               i1u176_25:
  8196  0016BC                     	line	443
  8197                           ;main.c: 443:     }
  8198                           	
  8199                           i1l254:
  8200  0016BC                     	line	444
  8201                           ;main.c: 444:     LATDbits.LD4=0;LATDbits.LD6=1;LATDbits.LD5=1;LATDbits.LD7=0;
  8202                           	bcf	((c:3980)),c,4	;volatile
  8203  0016BC  988C               	bsf	((c:3980)),c,6	;volatile
  8204  0016BE  8C8C               	bsf	((c:3980)),c,5	;volatile
  8205  0016C0  8A8C               	bcf	((c:3980)),c,7	;volatile
  8206  0016C2  9E8C               	line	445
  8207                           	
  8208                           i1l255:
  8209  0016C4                     	return	;funcret
  8210  0016C4  0012               	opt stack 0
  8211                           GLOBAL	__end_of_M_anticlockwise_direction
  8212                           	__end_of_M_anticlockwise_direction:
  8213  0016C6                     	signat	_M_anticlockwise_direction,89
  8214                           	global	_L_turn_on
  8215                           
  8216 ;; *************** function _L_turn_on *****************
  8217 ;; Defined at:
  8218 ;;		line 358 in file "main.c"
  8219 ;; Parameters:    Size  Location     Type
  8220 ;;		None
  8221 ;; Auto vars:     Size  Location     Type
  8222 ;;		None
  8223 ;; Return value:  Size  Location     Type
  8224 ;;                  1    wreg      void 
  8225 ;; Registers used:
  8226 ;;		None
  8227 ;; Tracked objects:
  8228 ;;		On entry : 0/0
  8229 ;;		On exit  : 0/0
  8230 ;;		Unchanged: 0/0
  8231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8232 ;;      Params:         0       0       0       0       0       0       0
  8233 ;;      Locals:         0       0       0       0       0       0       0
  8234 ;;      Temps:          0       0       0       0       0       0       0
  8235 ;;      Totals:         0       0       0       0       0       0       0
  8236 ;;Total ram usage:        0 bytes
  8237 ;; Hardware stack levels used:    1
  8238 ;; This function calls:
  8239 ;;		Nothing
  8240 ;; This function is called by:
  8241 ;;		_Rx_ISR
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           psect	text36,class=CODE,space=0,reloc=2,group=0
  8245                           	line	358
  8246                           global __ptext36
  8247                           __ptext36:
  8248  001844                     psect	text36
  8249                           	file	"main.c"
  8250                           	line	358
  8251                           	global	__size_of_L_turn_on
  8252                           	__size_of_L_turn_on	equ	__end_of_L_turn_on-_L_turn_on
  8253  0000                     	
  8254                           _L_turn_on:
  8255  001844                     ;incstack = 0
  8256                           	opt	stack 26
  8257                           	line	360
  8258                           	
  8259                           i1l2240:
  8260  001844                     ;main.c: 360:     LATCbits.LC3=1;
  8261                           	bsf	((c:3979)),c,3	;volatile
  8262  001844  868B               	line	361
  8263                           ;main.c: 361:     LATCbits.LC4=1;
  8264                           	bsf	((c:3979)),c,4	;volatile
  8265  001846  888B               	line	362
  8266                           ;main.c: 362:     LATCbits.LC5=1;
  8267                           	bsf	((c:3979)),c,5	;volatile
  8268  001848  8A8B               	line	364
  8269                           ;main.c: 363:     return;
  8270                           	
  8271                           i1l230:
  8272  00184A                     	return	;funcret
  8273  00184A  0012               	opt stack 0
  8274                           GLOBAL	__end_of_L_turn_on
  8275                           	__end_of_L_turn_on:
  8276  00184C                     	signat	_L_turn_on,89
  8277                           	global	_L_turn_off
  8278                           
  8279 ;; *************** function _L_turn_off *****************
  8280 ;; Defined at:
  8281 ;;		line 366 in file "main.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;		None
  8284 ;; Auto vars:     Size  Location     Type
  8285 ;;		None
  8286 ;; Return value:  Size  Location     Type
  8287 ;;                  1    wreg      void 
  8288 ;; Registers used:
  8289 ;;		None
  8290 ;; Tracked objects:
  8291 ;;		On entry : 0/0
  8292 ;;		On exit  : 0/0
  8293 ;;		Unchanged: 0/0
  8294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8295 ;;      Params:         0       0       0       0       0       0       0
  8296 ;;      Locals:         0       0       0       0       0       0       0
  8297 ;;      Temps:          0       0       0       0       0       0       0
  8298 ;;      Totals:         0       0       0       0       0       0       0
  8299 ;;Total ram usage:        0 bytes
  8300 ;; Hardware stack levels used:    1
  8301 ;; This function calls:
  8302 ;;		Nothing
  8303 ;; This function is called by:
  8304 ;;		_Rx_ISR
  8305 ;; This function uses a non-reentrant model
  8306 ;;
  8307                           psect	text37,class=CODE,space=0,reloc=2,group=0
  8308                           	line	366
  8309                           global __ptext37
  8310                           __ptext37:
  8311  00184C                     psect	text37
  8312                           	file	"main.c"
  8313                           	line	366
  8314                           	global	__size_of_L_turn_off
  8315                           	__size_of_L_turn_off	equ	__end_of_L_turn_off-_L_turn_off
  8316  0000                     	
  8317                           _L_turn_off:
  8318  00184C                     ;incstack = 0
  8319                           	opt	stack 26
  8320                           	line	368
  8321                           	
  8322                           i1l2242:
  8323  00184C                     ;main.c: 368:     LATCbits.LC3=0;
  8324                           	bcf	((c:3979)),c,3	;volatile
  8325  00184C  968B               	line	369
  8326                           ;main.c: 369:     LATCbits.LC4=0;
  8327                           	bcf	((c:3979)),c,4	;volatile
  8328  00184E  988B               	line	370
  8329                           ;main.c: 370:     LATCbits.LC5=0;
  8330                           	bcf	((c:3979)),c,5	;volatile
  8331  001850  9A8B               	line	372
  8332                           ;main.c: 371:     return;
  8333                           	
  8334                           i1l233:
  8335  001852                     	return	;funcret
  8336  001852  0012               	opt stack 0
  8337                           GLOBAL	__end_of_L_turn_off
  8338                           	__end_of_L_turn_off:
  8339  001854                     	signat	_L_turn_off,89
  8340                           	global	_LCD_clear
  8341                           
  8342 ;; *************** function _LCD_clear *****************
  8343 ;; Defined at:
  8344 ;;		line 279 in file "main.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;		None
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;		None
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  1    wreg      void 
  8351 ;; Registers used:
  8352 ;;		wreg, status,2, status,0, cstack
  8353 ;; Tracked objects:
  8354 ;;		On entry : 0/0
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8358 ;;      Params:         0       0       0       0       0       0       0
  8359 ;;      Locals:         0       0       0       0       0       0       0
  8360 ;;      Temps:          0       0       0       0       0       0       0
  8361 ;;      Totals:         0       0       0       0       0       0       0
  8362 ;;Total ram usage:        0 bytes
  8363 ;; Hardware stack levels used:    1
  8364 ;; Hardware stack levels required when called:    1
  8365 ;; This function calls:
  8366 ;;		i1_LCD_command
  8367 ;; This function is called by:
  8368 ;;		_Rx_ISR
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           psect	text38,class=CODE,space=0,reloc=2,group=0
  8372                           	line	279
  8373                           global __ptext38
  8374                           __ptext38:
  8375  001830                     psect	text38
  8376                           	file	"main.c"
  8377                           	line	279
  8378                           	global	__size_of_LCD_clear
  8379                           	__size_of_LCD_clear	equ	__end_of_LCD_clear-_LCD_clear
  8380  0000                     	
  8381                           _LCD_clear:
  8382  001830                     ;incstack = 0
  8383                           	opt	stack 25
  8384                           	line	281
  8385                           	
  8386                           i1l2214:
  8387  001830                     ;main.c: 281:     LCD_command(0x01);
  8388                           	movlw	(01h)&0ffh
  8389  001830  0E01               	
  8390                           	call	i1_LCD_command
  8391  001832  ECD5  F008         	goto	i1l209
  8392  001836  EF1D  F00C         	line	282
  8393                           	
  8394                           i1l2216:
  8395  00183A                     	line	283
  8396                           ;main.c: 282:     return;
  8397                           	
  8398                           i1l209:
  8399  00183A                     	return	;funcret
  8400  00183A  0012               	opt stack 0
  8401                           GLOBAL	__end_of_LCD_clear
  8402                           	__end_of_LCD_clear:
  8403  00183C                     	signat	_LCD_clear,89
  8404                           	global	i1_LCD_command
  8405                           
  8406 ;; *************** function i1_LCD_command *****************
  8407 ;; Defined at:
  8408 ;;		line 207 in file "main.c"
  8409 ;; Parameters:    Size  Location     Type
  8410 ;;  cmd             1    wreg     unsigned char 
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;  cmd             1    2[COMRAM] unsigned char 
  8413 ;; Return value:  Size  Location     Type
  8414 ;;                  1    wreg      void 
  8415 ;; Registers used:
  8416 ;;		wreg, status,2, status,0
  8417 ;; Tracked objects:
  8418 ;;		On entry : 0/0
  8419 ;;		On exit  : 0/0
  8420 ;;		Unchanged: 0/0
  8421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8422 ;;      Params:         0       0       0       0       0       0       0
  8423 ;;      Locals:         1       0       0       0       0       0       0
  8424 ;;      Temps:          2       0       0       0       0       0       0
  8425 ;;      Totals:         3       0       0       0       0       0       0
  8426 ;;Total ram usage:        3 bytes
  8427 ;; Hardware stack levels used:    1
  8428 ;; This function calls:
  8429 ;;		Nothing
  8430 ;; This function is called by:
  8431 ;;		_LCD_clear
  8432 ;;		_US_print_distance
  8433 ;;		i1_LCD_string
  8434 ;;		i1_LCD_string_xy
  8435 ;; This function uses a non-reentrant model
  8436 ;;
  8437                           psect	text39,class=CODE,space=0,reloc=2,group=0
  8438                           	line	207
  8439                           global __ptext39
  8440                           __ptext39:
  8441  0011AA                     psect	text39
  8442                           	file	"main.c"
  8443                           	line	207
  8444                           	global	__size_ofi1_LCD_command
  8445                           	__size_ofi1_LCD_command	equ	__end_ofi1_LCD_command-i1_LCD_command
  8446  0000                     	
  8447                           i1_LCD_command:
  8448  0011AA                     ;incstack = 0
  8449                           	opt	stack 24
  8450                           ;i1LCD_command@cmd stored from wreg
  8451                           	movwf	((c:i1LCD_command@cmd)),c
  8452  0011AA  6E03               	line	209
  8453                           	
  8454                           i1l1798:
  8455  0011AC                     ;main.c: 207: void LCD_command(unsigned char cmd );main.c: 208: {;main.c: 209:     nibbl
                                 e=cmd;
  8456                           	movff	(c:i1LCD_command@cmd),(c:_nibble)	;volatile
  8457  0011AC  C003  F067         	line	210
  8458                           	
  8459                           i1l1800:
  8460  0011B0                     ;main.c: 210:     LATB = (0xF0 & nibble)>>2;
  8461                           	rrncf	((c:_nibble)),c,w	;volatile
  8462  0011B0  4067               	rrncf	wreg
  8463  0011B2  42E8               	andlw	(0ffh shr 2) & 0ffh
  8464  0011B4  0B3F               	andlw	low(03Ch)
  8465  0011B6  0B3C               	movwf	((c:3978)),c	;volatile
  8466  0011B8  6E8A               	line	211
  8467                           	
  8468                           i1l1802:
  8469  0011BA                     ;main.c: 211:     LATBbits.LB0 = 0;
  8470                           	bcf	((c:3978)),c,0	;volatile
  8471  0011BA  908A               	line	212
  8472                           	
  8473                           i1l1804:
  8474  0011BC                     ;main.c: 212:     __nop();
  8475                           	opt	asmopt_push
  8476                           	opt	asmopt_off
  8477                           	nop
  8478  0011BC  F000               	opt	asmopt_pop
  8479                           	line	213
  8480                           	
  8481                           i1l1806:
  8482  0011BE                     ;main.c: 213:     LATBbits.LB1 = 1;
  8483                           	bsf	((c:3978)),c,1	;volatile
  8484  0011BE  828A               	line	214
  8485                           	
  8486                           i1l1808:
  8487  0011C0                     ;main.c: 214:     __nop();
  8488                           	opt	asmopt_push
  8489                           	opt	asmopt_off
  8490                           	nop
  8491  0011C0  F000               	opt	asmopt_pop
  8492                           	line	215
  8493                           	
  8494                           i1l1810:
  8495  0011C2                     ;main.c: 215:     LATBbits.LB1 = 0;
  8496                           	bcf	((c:3978)),c,1	;volatile
  8497  0011C2  928A               	line	216
  8498                           	
  8499                           i1l1812:
  8500  0011C4                     ;main.c: 216:     _delay((unsigned long)((1)*(20000000/4000.0)));
  8501                           	opt asmopt_push
  8502                           opt asmopt_off
  8503                           movlw	7
  8504  0011C4  0E07               movwf	(??i1_LCD_command+0+0)&0ffh,c,f
  8505  0011C6  6E01               	movlw	125
  8506  0011C8  0E7D               i1u235_27:
  8507  0011CA                     decfsz	wreg,f
  8508  0011CA  2EE8               	bra	i1u235_27
  8509  0011CC  D7FE               	decfsz	(??i1_LCD_command+0+0)&0ffh,c,f
  8510  0011CE  2E01               	bra	i1u235_27
  8511  0011D0  D7FC               	nop
  8512  0011D2  F000               opt asmopt_pop
  8513                           
  8514                           	line	217
  8515                           	
  8516                           i1l1814:
  8517  0011D4                     ;main.c: 217:     nibble=cmd;
  8518                           	movff	(c:i1LCD_command@cmd),(c:_nibble)	;volatile
  8519  0011D4  C003  F067         	line	218
  8520                           ;main.c: 218:     LATB = (nibble<<4)>>2;
  8521                           	movf	((c:_nibble)),c,w	;volatile
  8522  0011D8  5067               	movwf	(??i1_LCD_command+0+0)&0ffh,c
  8523  0011DA  6E01               	clrf	(??i1_LCD_command+0+0+1)&0ffh,c
  8524  0011DC  6A02               
  8525                           	swapf	(??i1_LCD_command+0+0),c
  8526  0011DE  3A01               	swapf	(??i1_LCD_command+0+1),c
  8527  0011E0  3A02               	movlw	0f0h
  8528  0011E2  0EF0               	andwf	(??i1_LCD_command+0+1),c
  8529  0011E4  1602               	movf	(??i1_LCD_command+0+0),c,w
  8530  0011E6  5001               	andlw	0fh
  8531  0011E8  0B0F               	iorwf	(??i1_LCD_command+0+1),c
  8532  0011EA  1202               	movlw	0f0h
  8533  0011EC  0EF0               	andwf	(??i1_LCD_command+0+0),c
  8534  0011EE  1601               	rlcf	(??i1_LCD_command+0+1),c,w
  8535  0011F0  3402               	rrcf	(??i1_LCD_command+0+1),c
  8536  0011F2  3202               	rrcf	(??i1_LCD_command+0+0),c
  8537  0011F4  3201               	rlcf	(??i1_LCD_command+0+1),c,w
  8538  0011F6  3402               	rrcf	(??i1_LCD_command+0+1),c
  8539  0011F8  3202               	rrcf	(??i1_LCD_command+0+0),c
  8540  0011FA  3201               	movf	(??i1_LCD_command+0+0),c,w
  8541  0011FC  5001               	movwf	((c:3978)),c	;volatile
  8542  0011FE  6E8A               	line	219
  8543                           	
  8544                           i1l1816:
  8545  001200                     ;main.c: 219:     LATBbits.LB0=0;
  8546                           	bcf	((c:3978)),c,0	;volatile
  8547  001200  908A               	line	220
  8548                           	
  8549                           i1l1818:
  8550  001202                     ;main.c: 220:     __nop();
  8551                           	opt	asmopt_push
  8552                           	opt	asmopt_off
  8553                           	nop
  8554  001202  F000               	opt	asmopt_pop
  8555                           	line	221
  8556                           	
  8557                           i1l1820:
  8558  001204                     ;main.c: 221:     LATBbits.LB1 = 1;
  8559                           	bsf	((c:3978)),c,1	;volatile
  8560  001204  828A               	line	222
  8561                           	
  8562                           i1l1822:
  8563  001206                     ;main.c: 222:     __nop();
  8564                           	opt	asmopt_push
  8565                           	opt	asmopt_off
  8566                           	nop
  8567  001206  F000               	opt	asmopt_pop
  8568                           	line	223
  8569                           	
  8570                           i1l1824:
  8571  001208                     ;main.c: 223:     LATBbits.LB1 = 0;
  8572                           	bcf	((c:3978)),c,1	;volatile
  8573  001208  928A               	line	224
  8574                           	
  8575                           i1l1826:
  8576  00120A                     ;main.c: 224:     _delay((unsigned long)((3)*(20000000/4000.0)));
  8577                           	opt asmopt_push
  8578                           opt asmopt_off
  8579                           movlw	20
  8580  00120A  0E14               movwf	(??i1_LCD_command+0+0)&0ffh,c,f
  8581  00120C  6E01               	movlw	122
  8582  00120E  0E7A               i1u236_27:
  8583  001210                     decfsz	wreg,f
  8584  001210  2EE8               	bra	i1u236_27
  8585  001212  D7FE               	decfsz	(??i1_LCD_command+0+0)&0ffh,c,f
  8586  001214  2E01               	bra	i1u236_27
  8587  001216  D7FC               opt asmopt_pop
  8588                           
  8589                           	goto	i1l191
  8590  001218  EF0E  F009         	line	225
  8591                           	
  8592                           i1l1828:
  8593  00121C                     	line	226
  8594                           ;main.c: 225:     return;
  8595                           	
  8596                           i1l191:
  8597  00121C                     	return	;funcret
  8598  00121C  0012               	opt stack 0
  8599                           GLOBAL	__end_ofi1_LCD_command
  8600                           	__end_ofi1_LCD_command:
  8601  00121E                     	signat	i1_LCD_command,89
  8602                           	global	_BT_rx_string
  8603                           
  8604 ;; *************** function _BT_rx_string *****************
  8605 ;; Defined at:
  8606 ;;		line 527 in file "main.c"
  8607 ;; Parameters:    Size  Location     Type
  8608 ;;  RxStr           2    0[COMRAM] PTR unsigned char 
  8609 ;;		 -> Rx_ISR@RxMessage(32), 
  8610 ;; Auto vars:     Size  Location     Type
  8611 ;;  i               1    7[COMRAM] unsigned char 
  8612 ;; Return value:  Size  Location     Type
  8613 ;;                  1    wreg      void 
  8614 ;; Registers used:
  8615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8616 ;; Tracked objects:
  8617 ;;		On entry : 0/0
  8618 ;;		On exit  : 0/0
  8619 ;;		Unchanged: 0/0
  8620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8621 ;;      Params:         2       0       0       0       0       0       0
  8622 ;;      Locals:         1       0       0       0       0       0       0
  8623 ;;      Temps:          5       0       0       0       0       0       0
  8624 ;;      Totals:         8       0       0       0       0       0       0
  8625 ;;Total ram usage:        8 bytes
  8626 ;; Hardware stack levels used:    1
  8627 ;; Hardware stack levels required when called:    1
  8628 ;; This function calls:
  8629 ;;		_BT_rx_char
  8630 ;; This function is called by:
  8631 ;;		_Rx_ISR
  8632 ;; This function uses a non-reentrant model
  8633 ;;
  8634                           psect	text40,class=CODE,space=0,reloc=2,group=0
  8635                           	line	527
  8636                           global __ptext40
  8637                           __ptext40:
  8638  000CD6                     psect	text40
  8639                           	file	"main.c"
  8640                           	line	527
  8641                           	global	__size_of_BT_rx_string
  8642                           	__size_of_BT_rx_string	equ	__end_of_BT_rx_string-_BT_rx_string
  8643  0000                     	
  8644                           _BT_rx_string:
  8645  000CD6                     ;incstack = 0
  8646                           	opt	stack 25
  8647                           	line	529
  8648                           	
  8649                           i1l2290:
  8650  000CD6                     ;main.c: 527: void BT_rx_string(unsigned char RxStr[]);main.c: 528: {;main.c: 529:     u
                                 nsigned char i=0;
  8651                           	movlw	low(0)
  8652  000CD6  0E00               	movwf	((c:BT_rx_string@i)),c
  8653  000CD8  6E08               	goto	i1l2292
  8654  000CDA  EF6F  F006         	line	530
  8655                           ;main.c: 530:     do
  8656                           	
  8657                           i1l288:
  8658  000CDE                     	line	532
  8659                           	
  8660                           i1l2292:
  8661  000CDE                     ;main.c: 531:     {;main.c: 532:         RxStr[i]=BT_rx_char();
  8662                           	movf	((c:BT_rx_string@i)),c,w
  8663  000CDE  5008               	mullw	01h
  8664  000CE0  0D01               	movf	(prodl),c,w
  8665  000CE2  50F3               	addwf	((c:BT_rx_string@RxStr)),c,w
  8666  000CE4  2401               	movwf	c:fsr2l
  8667  000CE6  6ED9               	movf	(prodh),c,w
  8668  000CE8  50F4               	addwfc	((c:BT_rx_string@RxStr+1)),c,w
  8669  000CEA  2002               	movwf	1+c:fsr2l
  8670  000CEC  6EDA               	call	_BT_rx_char	;wreg free
  8671  000CEE  ECB7  F00B         	movwf	indf2,c
  8672  000CF2  6EDF               
  8673                           	line	533
  8674                           	
  8675                           i1l2294:
  8676  000CF4                     ;main.c: 533:         i++;
  8677                           	incf	((c:BT_rx_string@i)),c
  8678  000CF4  2A08               	line	534
  8679                           	
  8680                           i1l2296:
  8681  000CF6                     ;main.c: 534:     }while(RxStr[i-1]!='\0'&&RxStr[i-1]!='.'&&i<31);
  8682                           	movlw	low(-1)
  8683  000CF6  0EFF               	movwf	(??_BT_rx_string+0+0)&0ffh,c
  8684  000CF8  6E03               	movlw	high(-1)
  8685  000CFA  0EFF               	movwf	1+(??_BT_rx_string+0+0)&0ffh,c
  8686  000CFC  6E04               	movf	((c:BT_rx_string@i)),c,w
  8687  000CFE  5008               	movwf	(??_BT_rx_string+2+0)&0ffh,c
  8688  000D00  6E05               	clrf	(??_BT_rx_string+2+0+1)&0ffh,c
  8689  000D02  6A06               
  8690                           	movf	(??_BT_rx_string+0+0),c,w
  8691  000D04  5003               	addwf	(??_BT_rx_string+2+0),c
  8692  000D06  2605               	movf	(??_BT_rx_string+0+1),c,w
  8693  000D08  5004               	addwfc	(??_BT_rx_string+2+1),c
  8694  000D0A  2206               	movf	(??_BT_rx_string+2+0),c,w
  8695  000D0C  5005               	addwf	((c:BT_rx_string@RxStr)),c,w
  8696  000D0E  2401               	movwf	c:fsr2l
  8697  000D10  6ED9               	movf	(??_BT_rx_string+2+1),c,w
  8698  000D12  5006               	addwfc	((c:BT_rx_string@RxStr+1)),c,w
  8699  000D14  2002               	movwf	1+c:fsr2l
  8700  000D16  6EDA               	movf	indf2,w
  8701  000D18  50DF               	btfsc	status,2
  8702  000D1A  B4D8               	goto	i1u197_21
  8703  000D1C  EF92  F006         	goto	i1u197_20
  8704  000D20  EF94  F006         i1u197_21:
  8705  000D24                     	goto	i1l2302
  8706  000D24  EFBA  F006         i1u197_20:
  8707  000D28                     	
  8708                           i1l2298:
  8709  000D28                     	movlw	low(-1)
  8710  000D28  0EFF               	movwf	(??_BT_rx_string+0+0)&0ffh,c
  8711  000D2A  6E03               	movlw	high(-1)
  8712  000D2C  0EFF               	movwf	1+(??_BT_rx_string+0+0)&0ffh,c
  8713  000D2E  6E04               	movf	((c:BT_rx_string@i)),c,w
  8714  000D30  5008               	movwf	(??_BT_rx_string+2+0)&0ffh,c
  8715  000D32  6E05               	clrf	(??_BT_rx_string+2+0+1)&0ffh,c
  8716  000D34  6A06               
  8717                           	movf	(??_BT_rx_string+0+0),c,w
  8718  000D36  5003               	addwf	(??_BT_rx_string+2+0),c
  8719  000D38  2605               	movf	(??_BT_rx_string+0+1),c,w
  8720  000D3A  5004               	addwfc	(??_BT_rx_string+2+1),c
  8721  000D3C  2206               	movf	(??_BT_rx_string+2+0),c,w
  8722  000D3E  5005               	addwf	((c:BT_rx_string@RxStr)),c,w
  8723  000D40  2401               	movwf	c:fsr2l
  8724  000D42  6ED9               	movf	(??_BT_rx_string+2+1),c,w
  8725  000D44  5006               	addwfc	((c:BT_rx_string@RxStr+1)),c,w
  8726  000D46  2002               	movwf	1+c:fsr2l
  8727  000D48  6EDA               	movlw	46
  8728  000D4A  0E2E               	xorwf	postinc2,w
  8729  000D4C  18DE               	btfsc	status,2
  8730  000D4E  B4D8               	goto	i1u198_21
  8731  000D50  EFAC  F006         	goto	i1u198_20
  8732  000D54  EFAE  F006         
  8733                           i1u198_21:
  8734  000D58                     	goto	i1l2302
  8735  000D58  EFBA  F006         i1u198_20:
  8736  000D5C                     	
  8737                           i1l2300:
  8738  000D5C                     		movlw	01Fh-1
  8739  000D5C  0E1E               	cpfsgt	((c:BT_rx_string@i)),c
  8740  000D5E  6408               	goto	i1u199_21
  8741  000D60  EFB4  F006         	goto	i1u199_20
  8742  000D64  EFB6  F006         
  8743                           i1u199_21:
  8744  000D68                     	goto	i1l2292
  8745  000D68  EF6F  F006         i1u199_20:
  8746  000D6C                     	goto	i1l2302
  8747  000D6C  EFBA  F006         	
  8748                           i1l290:
  8749  000D70                     	goto	i1l2302
  8750  000D70  EFBA  F006         	
  8751                           i1l291:
  8752  000D74                     	line	535
  8753                           	
  8754                           i1l2302:
  8755  000D74                     ;main.c: 535:     RxStr[i]='\0';
  8756                           	movf	((c:BT_rx_string@i)),c,w
  8757  000D74  5008               	mullw	01h
  8758  000D76  0D01               	movf	(prodl),c,w
  8759  000D78  50F3               	addwf	((c:BT_rx_string@RxStr)),c,w
  8760  000D7A  2401               	movwf	c:fsr2l
  8761  000D7C  6ED9               	movf	(prodh),c,w
  8762  000D7E  50F4               	addwfc	((c:BT_rx_string@RxStr+1)),c,w
  8763  000D80  2002               	movwf	1+c:fsr2l
  8764  000D82  6EDA               	movlw	low(0)
  8765  000D84  0E00               	movwf	indf2
  8766  000D86  6EDF               	goto	i1l292
  8767  000D88  EFC6  F006         	line	536
  8768                           	
  8769                           i1l2304:
  8770  000D8C                     	line	537
  8771                           ;main.c: 536:     return;
  8772                           	
  8773                           i1l292:
  8774  000D8C                     	return	;funcret
  8775  000D8C  0012               	opt stack 0
  8776                           GLOBAL	__end_of_BT_rx_string
  8777                           	__end_of_BT_rx_string:
  8778  000D8E                     	signat	_BT_rx_string,4217
  8779                           	global	_BT_rx_char
  8780                           
  8781 ;; *************** function _BT_rx_char *****************
  8782 ;; Defined at:
  8783 ;;		line 539 in file "main.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;		None
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;		None
  8788 ;; Return value:  Size  Location     Type
  8789 ;;                  1    wreg      unsigned char 
  8790 ;; Registers used:
  8791 ;;		wreg, status,2
  8792 ;; Tracked objects:
  8793 ;;		On entry : 0/0
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8797 ;;      Params:         0       0       0       0       0       0       0
  8798 ;;      Locals:         0       0       0       0       0       0       0
  8799 ;;      Temps:          0       0       0       0       0       0       0
  8800 ;;      Totals:         0       0       0       0       0       0       0
  8801 ;;Total ram usage:        0 bytes
  8802 ;; Hardware stack levels used:    1
  8803 ;; This function calls:
  8804 ;;		Nothing
  8805 ;; This function is called by:
  8806 ;;		_BT_rx_string
  8807 ;; This function uses a non-reentrant model
  8808 ;;
  8809                           psect	text41,class=CODE,space=0,reloc=2,group=0
  8810                           	line	539
  8811                           global __ptext41
  8812                           __ptext41:
  8813  00176E                     psect	text41
  8814                           	file	"main.c"
  8815                           	line	539
  8816                           	global	__size_of_BT_rx_char
  8817                           	__size_of_BT_rx_char	equ	__end_of_BT_rx_char-_BT_rx_char
  8818  0000                     	
  8819                           _BT_rx_char:
  8820  00176E                     ;incstack = 0
  8821                           	opt	stack 25
  8822                           	line	541
  8823                           	
  8824                           i1l2080:
  8825  00176E                     ;main.c: 541:     while(!RCIF);
  8826                           	goto	i1l295
  8827  00176E  EFB9  F00B         	
  8828                           i1l296:
  8829  001772                     	
  8830                           i1l295:
  8831  001772                     	btfss	c:(31989/8),(31989)&7	;volatile
  8832  001772  AA9E               	goto	i1u140_21
  8833  001774  EFBE  F00B         	goto	i1u140_20
  8834  001778  EFC0  F00B         i1u140_21:
  8835  00177C                     	goto	i1l295
  8836  00177C  EFB9  F00B         i1u140_20:
  8837  001780                     	
  8838                           i1l297:
  8839  001780                     	line	542
  8840                           ;main.c: 542:     if(OERR)
  8841                           	btfss	c:(32089/8),(32089)&7	;volatile
  8842  001780  A2AB               	goto	i1u141_21
  8843  001782  EFC5  F00B         	goto	i1u141_20
  8844  001786  EFC7  F00B         i1u141_21:
  8845  00178A                     	goto	i1l2084
  8846  00178A  EFCC  F00B         i1u141_20:
  8847  00178E                     	line	544
  8848                           	
  8849                           i1l2082:
  8850  00178E                     ;main.c: 543:     {;main.c: 544:         CREN=0;
  8851                           	bcf	c:(32092/8),(32092)&7	;volatile
  8852  00178E  98AB               	line	545
  8853                           ;main.c: 545:         __nop();
  8854                           	opt	asmopt_push
  8855                           	opt	asmopt_off
  8856                           	nop
  8857  001790  F000               	opt	asmopt_pop
  8858                           	line	546
  8859                           ;main.c: 546:         CREN=1;
  8860                           	bsf	c:(32092/8),(32092)&7	;volatile
  8861  001792  88AB               	goto	i1l2084
  8862  001794  EFCC  F00B         	line	547
  8863                           ;main.c: 547:     }
  8864                           	
  8865                           i1l298:
  8866  001798                     	line	548
  8867                           	
  8868                           i1l2084:
  8869  001798                     ;main.c: 548:     return RCREG;
  8870                           	movf	((c:4014)),c,w	;volatile
  8871  001798  50AE               	goto	i1l299
  8872  00179A  EFCF  F00B         	
  8873                           i1l2086:
  8874  00179E                     	line	549
  8875                           	
  8876                           i1l299:
  8877  00179E                     	return	;funcret
  8878  00179E  0012               	opt stack 0
  8879                           GLOBAL	__end_of_BT_rx_char
  8880                           	__end_of_BT_rx_char:
  8881  0017A0                     	signat	_BT_rx_char,89
  8882                           psect	mediumconst
  8883                           	db 0	; dummy byte at the end
  8884  007DBF  00                 	global	__mediumconst
  8885                           	GLOBAL	__activetblptr
  8886                           __activetblptr	EQU	2
  8887  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  8888                           	PSECT	rparam,class=COMRAM,space=1,noexec
  8889                           	GLOBAL	__Lrparam
  8890                           	FNCONF	rparam,??,?
  8891                           	GLOBAL	___rparam_used
  8892                           	___rparam_used EQU 1
  8893  0000                     	GLOBAL	___param_bank
  8894                           	___param_bank EQU 0
  8895  0000                     GLOBAL	__Lparam, __Hparam
  8896                           GLOBAL	__Lrparam, __Hrparam
  8897                           __Lparam	EQU	__Lrparam
  8898  0000                     __Hparam	EQU	__Hrparam
  8899  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  8900                           	global	btemp
  8901                           btemp:
  8902  00006A                     	ds	1
  8903  00006A                     	global	int$flags
  8904                           	int$flags	set btemp
  8905  0000                     	global	wtemp8
  8906                           	wtemp8 set btemp+1
  8907  0000                     	global	ttemp5
  8908                           	ttemp5 set btemp+1
  8909  0000                     	global	ttemp6
  8910                           	ttemp6 set btemp+4
  8911  0000                     	global	ttemp7
  8912                           	ttemp7 set btemp+8
  8913  0000                     	end


Data Sizes:
    Strings     298
    Constant    0
    Data        2
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     95     105
    BANK0           128     14      46
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    atoi4D@arr	PTR unsigned char  size(2) Largest target is 32
		 -> Rx_ISR@RxMessage(COMRAM[32]), 

    itoa4D@arr	PTR unsigned char  size(2) Largest target is 5
		 -> Rx_ISR@DuCyT(COMRAM[5]), US_print_distance@dist4D(COMRAM[5]), US_send_pulse@dist(COMRAM[5]), 

    BT_rx_string@RxStr	PTR unsigned char  size(2) Largest target is 32
		 -> Rx_ISR@RxMessage(COMRAM[32]), 

    BT_tx_string@msg	PTR const unsigned char  size(2) Largest target is 73
		 -> STR_16(CODE[16]), STR_15(CODE[27]), STR_14(CODE[73]), STR_13(CODE[39]), 
		 -> STR_12(CODE[8]), STR_10(CODE[17]), STR_9(CODE[9]), Rx_ISR@DuCyT(COMRAM[5]), 
		 -> STR_8(CODE[15]), US_print_distance@dist4D(COMRAM[5]), STR_6(CODE[14]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), 

    LCD_string_xy@msg	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_11(CODE[5]), Rx_ISR@RxMessage(COMRAM[32]), STR_7(CODE[15]), US_print_distance@dist4D(COMRAM[5]), 
		 -> STR_5(CODE[13]), STR_3(CODE[16]), STR_1(CODE[14]), 

    LCD_string@msg	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_11(CODE[5]), Rx_ISR@RxMessage(COMRAM[32]), STR_7(CODE[15]), US_print_distance@dist4D(COMRAM[5]), 
		 -> STR_5(CODE[13]), STR_3(CODE[16]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Rx_ISR in COMRAM

    _Rx_ISR->_US_send_pulse
    _atoi4D->___wmul
    ___lldiv->___lmul
    _US_send_pulse->___aldiv
    ___aldiv->___lmul
    _US_print_distance->_itoa4D
    i1_LCD_string_xy->i1_LCD_string
    i1_LCD_string->i1_LCD_char
    i1_LCD_string->i1_LCD_command
    i1_BT_tx_string->i1_BT_tx_char
    _itoa4D->___lwmod
    ___lwmod->___lwdiv
    _LCD_clear->i1_LCD_command

Critical Paths under _main in BANK0

    _main->_LCD_string_xy
    _LCD_string_xy->_LCD_string
    _LCD_string->_LCD_char
    _LCD_string->_LCD_command
    _LCD_init->_LCD_command
    _BT_tx_string->_BT_tx_char

Critical Paths under _Rx_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Rx_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Rx_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Rx_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Rx_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Rx_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2195
                                             12 BANK0      2     2      0
                            _BT_init
                         _BT_tx_char
                       _BT_tx_string
                        _LCD_command
                           _LCD_init
                      _LCD_string_xy
                             _L_init
                             _M_init
                            _US_init
 ---------------------------------------------------------------------------------
 (1) _US_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _M_init                                               0     0      0       0
                             _M_stop
 ---------------------------------------------------------------------------------
 (2) _M_stop                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _L_init                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_string_xy                                        6     3      3    1268
                                              6 BANK0      6     3      3
                        _LCD_command
                         _LCD_string
 ---------------------------------------------------------------------------------
 (2) _LCD_string                                           3     1      2     233
                                              3 BANK0      3     1      2
                           _LCD_char
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _LCD_char                                             3     3      0      44
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      66
                                              3 BANK0      2     2      0
                        _LCD_command
                       _LCD_hcommand
 ---------------------------------------------------------------------------------
 (2) _LCD_hcommand                                         2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_command                                          3     3      0      44
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _BT_tx_string                                         2     0      2     795
                                              1 BANK0      2     0      2
                         _BT_tx_char
 ---------------------------------------------------------------------------------
 (2) _BT_tx_char                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _BT_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Rx_ISR                                              59    59      0   15418
                                             36 COMRAM    59    59      0
                       _BT_rx_string
                          _LCD_clear
                         _L_turn_off
                          _L_turn_on
          _M_anticlockwise_direction
               _M_backward_direction
              _M_clockwise_direction
                 _M_foward_direction
                           _M_set_DC
                      _US_send_pulse
                            ___lldiv
                             ___lmul
                             _atoi4D
                             _itoa4D
                     i1_BT_tx_string
                    i1_LCD_string_xy
                           i1_M_stop
 ---------------------------------------------------------------------------------
 (5) i1_M_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi4D                                               5     3      2     502
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     314
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _US_send_pulse                                       10    10      0    6512
                                             26 COMRAM    10    10      0
                  _US_print_distance
                            ___aldiv
                             ___lmul
                             _itoa4D
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     522
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _US_print_distance                                    7     5      2    3325
                                             17 COMRAM     7     5      2
                             _itoa4D
                       i1_BT_tx_char
                     i1_BT_tx_string
                      i1_LCD_command
                    i1_LCD_string_xy
 ---------------------------------------------------------------------------------
 (5) i1_LCD_string_xy                                      6     3      3     570
                                              6 COMRAM     6     3      3
                      i1_LCD_command
                       i1_LCD_string
 ---------------------------------------------------------------------------------
 (6) i1_LCD_string                                         3     1      2     183
                                              3 COMRAM     3     1      2
                         i1_LCD_char
                      i1_LCD_command
 ---------------------------------------------------------------------------------
 (7) i1_LCD_char                                           3     3      0      44
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) i1_BT_tx_string                                       2     0      2     327
                                              1 COMRAM     2     0      2
                       i1_BT_tx_char
 ---------------------------------------------------------------------------------
 (6) i1_BT_tx_char                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _itoa4D                                               5     1      4    2171
                                             12 COMRAM     5     1      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     767
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _M_set_DC                                             5     2      3    3414
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (5) _M_foward_direction                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _M_clockwise_direction                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _M_backward_direction                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _M_anticlockwise_direction                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _L_turn_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _L_turn_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LCD_clear                                            0     0      0      44
                      i1_LCD_command
 ---------------------------------------------------------------------------------
 (7) i1_LCD_command                                        3     3      0      44
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _BT_rx_string                                         8     6      2     580
                                              0 COMRAM     8     6      2
                         _BT_rx_char
 ---------------------------------------------------------------------------------
 (6) _BT_rx_char                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BT_init
   _BT_tx_char
   _BT_tx_string
     _BT_tx_char
   _LCD_command
   _LCD_init
     _LCD_command
     _LCD_hcommand
   _LCD_string_xy
     _LCD_command
     _LCD_string
       _LCD_char
       _LCD_command
   _L_init
   _M_init
     _M_stop
   _US_init

 _Rx_ISR (ROOT)
   _BT_rx_string
     _BT_rx_char
   _LCD_clear
     i1_LCD_command
   _L_turn_off
   _L_turn_on
   _M_anticlockwise_direction
   _M_backward_direction
   _M_clockwise_direction
   _M_foward_direction
   _M_set_DC
   _US_send_pulse
     _US_print_distance
       _itoa4D
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       i1_BT_tx_char
       i1_BT_tx_string
         i1_BT_tx_char
       i1_LCD_command
       i1_LCD_string_xy
         i1_LCD_command
         i1_LCD_string
           i1_LCD_char
           i1_LCD_command
     ___aldiv
       ___lmul (ARG)
     ___lmul
     _itoa4D
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _atoi4D
     ___wmul
   _itoa4D
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   i1_BT_tx_string
     i1_BT_tx_char
   i1_LCD_string_xy
     i1_LCD_command
     i1_LCD_string
       i1_LCD_char
       i1_LCD_command
   i1_M_stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      E      2E       4       35.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5F      69       1       83.3%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      97      14        0.0%
DATA                 0      0      97      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Feb 27 21:16:56 2019

            ?_M_clockwise_direction 0001                                  bsr 000FE0  
               ___wmul@multiplicand 0003                         __CFG_BORV$3 000000  
                      __CFG_CP0$OFF 000000                        __CFG_CP1$OFF 000000  
                      __CFG_CP2$OFF 000000                        __CFG_CP3$OFF 000000  
                       __CFG_OSC$HS 000000                                 l200 0EB4  
                               l201 0EB4                                 l204 1392  
                               l212 1738                                 l205 13AE  
                               l206 13BE                                 l227 1842  
                               l236 14BC                                 l180 0C16  
                               l237 14BC                                 l181 0C1A  
                               l238 14CA                                 l182 0C1A  
                               l191 10BC                                 l239 14D2  
                               l273 17F0                                 l185 1524  
                               l282 12C2                                 l194 1040  
                               l258 156C                                 l283 1294  
                               l259 156C                                 l179 0C16  
                               l276 17FA                                 l284 12F6  
                               l188 176C                                 l277 17FA  
                               l285 12F6                                 l197 0E80  
                               l278 180C                                 l198 0E34  
                               l279 1810                                 l199 0E7C  
                               _GIE 007F97                        __CFG_CPB$OFF 000000  
                               _PR2 000FCB                        __CFG_CPD$OFF 000000  
                               _PSA 007EAB                                 _RX9 007D5E  
                               _TX9 007D66                                 _WUE 007DC1  
                               wreg 000FE8                         ?_LCD_string 00A3  
                      __CFG_LVP$OFF 000000               LCD_string_xy@location 00AB  
                      __CFG_WDT$OFF 000000                                l2022 17F6  
                              l2030 174C                                l2024 180C  
                              l2200 12B8                                l2040 1756  
                              l2032 174E                                l2202 12C2  
                              l2042 176C                                l2034 1750  
                              l2026 173E                                l2050 0E5E  
                              l2210 172C                                l2036 1752  
                              l2028 1742                                l2052 0E60  
                              l2044 0E2A                                l2204 147E  
                              l2212 1738                                l2150 17E6  
                              l2038 1754                                l2054 0E72  
                              l2046 0E34                                l2206 14CE  
                              l2152 17EA                                l2160 14DC  
                              l2048 0E58                                l2056 0E80  
                              l2208 1704                                l2154 17EC  
                              l2170 150E                                l2162 14F6  
                              l2074 1526                                l2156 17EE  
                              l2148 17CA                                l2172 1514  
                              l2164 14FC                                l2180 1362  
                              l2076 152E                                l2174 151A  
                              l2166 1502                                l2158 14D4  
                              l2190 13A4                                l2182 1368  
                              l2078 1540                                l2350 0B60  
                              l2176 1524                                l2168 1508  
                              l2192 13AE                                l2184 1378  
                              l2360 0B90                                l2352 0B64  
                              l2194 13BE                                l2186 1388  
                              l2178 183C                                l2370 0BE8  
                              l2362 0BAA                                l2354 0B68  
                              l2196 1290                                l2188 1392  
                              l2372 0BF6                                l2364 0BAE  
                              l2356 0B6E                                l2348 0B5C  
                              l2198 1294                                l2374 0C10  
                              l2366 0BC2                                l2358 0B82  
                              l1920 104A                                l2368 0BD4  
                              l1930 105C                                l1922 1054  
                              l1940 10A0                                l1932 105E  
                              l1924 1056                                l1942 10A2  
                              l1934 106E                                l1926 1058  
                              l1918 1046                                l1950 0FCA  
                              l1944 10A4                                l1936 109C  
                              l1928 105A                                l1960 0FDE  
                              l1952 0FCE                                l1946 10A6  
                              l1938 109E                                l1970 1022  
                              l1962 0FE0                                l1954 0FD8  
                              l1948 10BC                                l1980 1040  
                              l1972 1024                                l1964 0FE2  
                              l1956 0FDA                                l1974 1026  
                              l1966 0FF2                                l1958 0FDC  
                              l1976 1028                                l1968 1020  
                              l1978 102A                                STR_1 7D8E  
                              STR_2 7D62                                STR_3 7D52  
                              STR_4 7D31                                STR_5 7D9C  
                              STR_6 7D80                                STR_7 7D71  
                              STR_8 7D71                                STR_9 7DA9  
                      ?_LCD_command 0001                                _BRGH 007D62  
                              _CREN 007D5C                                _T0CS 007EAD  
                              u1300 1808                                u1301 1804  
                              u1310 0E54                                u1320 0E72  
                              u1321 0E6E                                u1330 0EA0  
                              _T0SE 007EAC                                u1340 0EB0  
                              u1500 1378                                u1341 0EAC  
                              u1317 0E4A                                u1501 1374  
                              u1510 12B4                                u1350 1540  
                              _LATB 000F8A                                u1351 153C  
                              u1520 12E2                                u1360 1554  
                              u1337 0E96                                u1361 154E  
                              u1530 12F2                                u1531 12EE  
                              u2227 0B9C                                u1380 1566  
                              u1540 14CA                                u1517 12AA  
                              u1381 1560                                u1541 14C6  
                              u2237 0C02                                u1527 12D8  
                              u2247 0FEA                                u1375 1556  
                              u2257 1032                                u2267 14E8  
                              u1395 1568                                u2277 175E  
                              u2287 1066                                u2297 10AE  
                              _IOFS 007E9A                                _PEIE 007F96  
                              _RBIE 007F93                                _RBIF 007F90  
                              _RCIE 007CED                                _RCIF 007CF5  
                              _OERR 007D59                                _TMR0 000FD6  
                       ?i1_LCD_char 0001                                _SPEN 007D5F  
                              _TXEN 007D65                                _TXIF 007CF4  
                              _SYNC 007D64                     __end_of_BT_init 17F2  
       __size_of_M_foward_direction 0044                                _main 0B5C  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              indf0 000FEF                                fsr2h 000FDA  
                              fsr0l 000FE9                                indf2 000FDF  
                              fsr1l 000FE1                                fsr2l 000FD9  
                              btemp 006A                     ?i1_BT_tx_string 0002  
                              prodh 000FF4                                prodl 000FF3  
                              start 0618                       __CFG_IESO$OFF 000000  
                __size_of_LCD_clear 000C                       __CFG_MCLRE$ON 000000  
                   __end_of_US_init 173A                        ___param_bank 000000  
                   ??_US_send_pulse 001B                    __end_of_LCD_char 1042  
                  __end_of_LCD_init 1526                               _DC1B0 007DEC  
                             _DC1B1 007DED                               _DC2B0 007DD4  
                             _DC2B1 007DD5                     __end_of___aldiv 0A78  
                             _ABDEN 007DC0                               _ADDEN 007D5B  
                             ?_main 0001                               STR_10 7D20  
                             STR_11 7DBA                               STR_12 7DB2  
                             STR_13 7CDE                               STR_14 7C95  
                             STR_15 7D05                               STR_16 7D42  
                             _BRG16 007DC3                     __end_of___lldiv 0CD6  
                    US_send_pulse@i 001F                       ?_LCD_hcommand 0001  
                             _IDLEN 007E9F                               _T0PS0 007EA8  
                             _T0PS1 007EA9                               _T0PS2 007EAA  
                             _IRCF0 007E9C                               _IRCF1 007E9D  
                             _IRCF2 007E9E                     __end_of___lwdiv 0FC6  
                             i1l200 0F3C                               i1l201 0F3C  
                             i1l204 1452                               i1l220 0AB4  
                             i1l205 146C                               i1l221 0B5A  
                             i1l230 184A                               i1l206 147C  
                             i1l310 0148                               i1l215 0A92  
                             i1l311 00C4                               i1l224 1420  
                             i1l216 0A92                               i1l400 0C72  
                             i1l320 01B0                               i1l312 0104  
                             i1l209 183A                               i1l233 1852  
                             i1l217 0AA0                               i1l401 0CB0  
                             i1l321 01B8                               i1l313 0100  
                             i1l250 1634                               i1l242 15F0  
                             i1l218 0AA6                               i1l402 0CC4  
                             i1l330 0250                               i1l322 01C0  
                             i1l314 0164                               i1l251 163C  
                             i1l243 15F8                               i1l219 0AA6  
                             i1l403 0CD4                               i1l331 0264  
                             i1l323 01C8                               i1l315 0122  
                             i1l308 04F4                               i1l340 0358  
                             i1l332 0278                               i1l324 01FE  
                             i1l316 0144                               i1l341 0382  
                             i1l333 028C                               i1l325 0204  
                             i1l317 01A4                               i1l309 00A0  
                             i1l254 16BC                               i1l246 1678  
                             i1l270 0704                               i1l262 0668  
                             i1l350 04EC                               i1l342 03B8  
                             i1l334 02A0                               i1l326 020C  
                             i1l318 05D6                               i1l191 121C  
                             i1l255 16C4                               i1l247 1680  
                             i1l351 05D8                               i1l335 02B4  
                             i1l327 0214                               i1l319 01A8  
                             i1l264 0664                               i1l360 093E  
                             i1l440 0A3E                               i1l344 03B0  
                             i1l336 02C8                               i1l328 0228  
                             i1l265 07CE                     __end_of___lwmod 1136  
                             i1l361 093A                               i1l441 09D2  
                             i1l345 03C0                               i1l337 02DA  
                             i1l329 023C                               i1l290 0D70  
                             i1l266 079C                               i1l362 0936  
                             i1l282 1328                               i1l194 11A8  
                             i1l442 09C2                               i1l258 15B4  
                             i1l346 03C4                               i1l338 0304  
                             i1l291 0D74                               i1l267 066C  
                             i1l363 0942                               i1l283 12FC  
                             i1l443 09E4                               i1l259 15B4  
                             i1l347 04DC                               i1l339 032E  
                             i1l292 0D8C                               i1l268 07CE  
                             i1l276 1818                               i1l284 135C  
                             i1l444 09E8                               i1l380 127E  
                             i1l269 06B8                               i1l277 1818  
                             i1l285 135C                               i1l197 0F08  
                             i1l445 0A26                               i1l381 128E  
                             i1l349 041A                               i1l278 182A  
                             i1l198 0EBE                               i1l446 0A3A  
                             i1l438 096E                               i1l366 0E28  
                             i1l295 1772                               i1l279 182E  
                             i1l199 0F04                               i1l447 0A62  
                             i1l439 0994                               i1l296 1772  
                             i1l288 0CDE                               i1l448 0A76  
                             i1l297 1780                               i1l369 17C8  
                             i1l298 1798                               i1l378 1232  
                             i1l299 179E                               i1l379 1254  
                             i1l396 0CC4                               i1l397 0C5C  
                             i1l398 0C4C                               i1l399 0C6E  
                             i1l860 0FBC                               i1l861 0F6C  
                             i1l862 0F60                               i1l870 112C  
                             i1l863 0F7E                               i1l871 10E4  
                             i1l864 0F82                               i1l872 10D8  
                             i1l865 0FAC                               i1l873 10F6  
                             i1l866 0FBC                               i1l874 10FA  
                             i1l867 0FC4                               i1l875 111C  
                             i1l876 112C                               i1l877 1134  
                             _RCREG 000FAE                               _SENDB 007D63  
                       ?_BT_rx_char 0001                               _SPBRG 000FAF  
                             _TRISB 000F93                         ?_BT_tx_char 0001  
                             _TXREG 000FAD                       __CFG_PWRT$OFF 000000  
                     __CFG_WRT0$OFF 000000                       __CFG_WRT1$OFF 000000  
                     __CFG_WRT2$OFF 000000                 ___lmul@multiplicand 0005  
                     __CFG_WRT3$OFF 000000                      __CFG_EBTR0$OFF 000000  
                    __CFG_FCMEN$OFF 000000                      __CFG_EBTR1$OFF 000000  
                    __CFG_EBTR2$OFF 000000                      __CFG_EBTR3$OFF 000000  
            __size_of_LCD_string_xy 0062                       __CFG_WRTB$OFF 000000  
                     __CFG_WRTC$OFF 000000                       __CFG_WRTD$OFF 000000  
                 ??i1_LCD_string_xy 000A                      __CFG_EBTRB$OFF 000000  
                  __end_ofi1_M_stop 15B6                         LCD_char@dat 00A2  
                    __CFG_BOREN$OFF 000000                               tablat 000FF5  
                             plusw1 000FE3                               plusw2 000FDB  
                             ttemp5 006B                               ttemp6 006E  
                             ttemp7 0072                               status 000FD8  
                             wtemp8 006B                     _ParkingDistance 0068  
                        Rx_ISR@DuCy 005C                     __initialization 16C6  
               __size_of_LCD_string 008C                        __end_of_main 0C1E  
                        _L_turn_off 184C                    __end_of_M_set_DC 07D0  
               __size_ofi1_LCD_char 0074                      ??_LCD_hcommand 00A0  
                            ??_main 00AC                       M_set_DC@motor 0003  
                     __activetblptr 000002                   __end_of_LCD_clear 183C  
                       LCD_string@i 00A5                           ??_BT_init 00A0  
                            _CCP1M0 007DE8                              _CCP1M1 007DE9  
                            _CCP1M2 007DEA                              _CCP1M3 007DEB  
                            _CCP2M0 007DD0                              _CCP2M1 007DD1  
                            _CCP2M2 007DD2                              _CCP2M3 007DD3  
                            _CCPR1L 000FBE                              _CCPR2L 000FBB  
                            _T08BIT 007EAE                              _INT0IE 007F94  
                            i1l2000 1428                              i1l2010 146C  
                            i1l2002 1438                              i1l2020 1328  
                            i1l2012 147C                              i1l2004 1448  
                            i1l2100 1254                              i1l2014 12F8  
                            i1l2006 1452                              i1l2110 0966  
                            i1l2102 125E                              i1l2016 12FC  
                            i1l2008 1462                              i1l2120 09A4  
                            i1l2112 096E                              i1l2104 0944  
                            i1l2018 1320                              i1l2130 09F2  
                            i1l2122 09BA                              i1l2114 097C  
                            i1l2106 0948                              i1l2300 0D5C  
                            i1l2060 13D4                              i1l2132 0A10  
                            i1l2124 09C2                              i1l2140 0A3E  
                            i1l2116 098C                              i1l2108 0956  
                            i1l2220 0A84                              i1l2302 0D74  
                            i1l2214 1830                              i1l2070 1416  
                            i1l2062 13DA                              i1l2142 0A4E  
                            i1l2134 0A20                              i1l2126 09D2  
                            i1l2118 0994                              i1l2230 0B22  
                            i1l2222 0A86                              i1l2310 0DC0  
                            i1l2080 176E                              i1l2304 0D8C  
                            i1l2216 183A                              i1l2240 1844  
                            i1l2072 1420                              i1l2064 13EC  
                            i1l2144 0A62                              i1l2136 0A26  
                            i1l2128 09E8                              i1l2232 0B28  
                            i1l2224 0A8C                              i1l2320 0C1E  
                            i1l2312 0DE0                              i1l2400 011A  
                            i1l2082 178E                              i1l2242 184C  
                            i1l2250 1650                              i1l2066 13FE  
                            i1l2058 13C0                              i1l2146 0A76  
                            i1l2138 0A30                              i1l2234 0B34  
                            i1l2226 0AB6                              i1l2218 0A78  
                            i1l2330 0C72                              i1l2322 0C2E  
                            i1l2090 17BC                              i1l2314 0E00  
                            i1l2306 0D8E                              i1l2402 0122  
                            i1l2410 0164                              i1l2084 1798  
                            i1l2252 15FA                              i1l2244 15B6  
                            i1l2260 061C                              i1l2068 140A  
                            i1l2236 0B48                              i1l2228 0B1A  
                            i1l2340 0CBA                              i1l2332 0C7C  
                            i1l2324 0C44                              i1l2092 17C8  
                            i1l2316 0E1C                              i1l2308 0D96  
                            i1l2500 04CC                              i1l2420 01B8  
                            i1l2412 016C                              i1l2404 0126  
                            i1l2086 179E                              i1l2254 160C  
                            i1l2246 15C8                              i1l2270 06A2  
                            i1l2262 062C                              i1l2094 121E  
                            i1l2238 0B5A                              i1l2334 0C9A  
                            i1l2326 0C4C                              i1l2318 0E28  
                            i1l2342 156E                              i1l2502 04DC  
                            i1l2430 01E4                              i1l2422 01C0  
                            i1l2414 0182                              i1l2406 0140  
                            i1l1800 11B0                              i1l2256 1682  
                            i1l2248 163E                              i1l2280 0782  
                            i1l2272 06B8                              i1l2264 063C  
                            i1l2096 1232                              i1l2336 0CAA  
                            i1l2328 0C5C                              i1l2088 17A0  
                            i1l2344 1576                              i1l2504 04F0  
                            i1l2440 0228                              i1l2432 01E8  
                            i1l2424 01C8                              i1l2416 01A8  
                            i1l2408 0148                              i1l2290 0CD6  
                            i1l1810 11C2                              i1l1802 11BA  
                            i1l2258 1694                              i1l2282 0798  
                            i1l2274 06EE                              i1l2266 064E  
                            i1l2098 1240                              i1l2338 0CB0  
                            i1l2346 1588                              i1l2450 028C  
                            i1l2442 023C                              i1l2434 0204  
                            i1l2426 01CC                              i1l2418 01B0  
                            i1l2506 04F4                              i1l2292 0CDE  
                            i1l1820 1204                              i1l1812 11C4  
                            i1l1804 11BC                              i1l2276 0704  
                            i1l2268 066C                              i1l2284 079C  
                            i1l1900 0EB6                              i1l2460 0304  
                            i1l2452 02A0                              i1l2444 0250  
                            i1l2436 020C                              i1l2428 01D8  
                            i1l2380 007C                              i1l2294 0CF4  
                            i1l1822 1206                              i1l1814 11D4  
                            i1l1806 11BE                              i1l2278 073A  
                            i1l1830 1138                              i1l1910 0EFA  
                            i1l1902 0EBE                              i1l2470 03B0  
                            i1l2462 032E                              i1l2454 02B4  
                            i1l2446 0264                              i1l2438 0214  
                            i1l2390 00B0                              i1l2382 0080  
                            i1l2296 0CF6                              i1l1824 1208  
                            i1l1816 1200                              i1l1808 11C0  
                            i1l1840 114C                              i1l1832 113C  
                            i1l1904 0EE2                              i1l1912 0F08  
                            i1l2552 0508                              i1l2480 03E0  
                            i1l2472 03B8                              i1l2464 0358  
                            i1l2456 02C8                              i1l2448 0278  
                            i1l2392 00D2                              i1l2384 0090  
                            i1l2376 0056                              i1l2298 0D28  
                            i1l1826 120A                              i1l1818 1202  
                            i1l2554 07B0                              i1l1914 1814  
                            i1l1850 118E                              i1l1842 114E  
                            i1l1834 1146                              i1l1906 0EE6  
                            i1l2490 042C                              i1l2482 03F2  
                            i1l2474 03C4                              i1l2466 0390  
                            i1l2458 02DA                              i1l2394 00DE  
                            i1l2386 00A0                              i1l2378 0058  
                            i1l1828 121C                              i1l1916 182A  
                            i1l1860 11A8                              i1l1852 1190  
                            i1l1844 1150                              i1l1836 1148  
                            i1l1908 0EE8                              i1l2492 0438  
                            i1l2484 0404                              i1l2476 03C8  
                            i1l2468 039E                              i1l2396 00F0  
                            i1l2388 00AC                              i1l1870 0F6C  
                            i1l1862 0F3E                              i1l1854 1192  
                            i1l1846 1160                              i1l1838 114A  
                            i1l2494 0450                              i1l2486 041A  
                            i1l2478 03D4                              i1l2398 0104  
                            i1l1880 0FAC                              i1l1872 0F82  
                            i1l1864 0F46                              i1l1856 1194  
                            i1l1848 118C                              i1l2496 04A8  
                            i1l2488 0420                              i1l1882 0FB2  
                            i1l1874 0F88                              i1l1866 0F58  
                            i1l1890 10E4                              i1l1858 1196  
                            i1l2498 04B8                              i1l1876 0F9E  
                            i1l1868 0F60                              i1l1892 10FA  
                            i1l1884 10BE                              i1l1798 11AC  
                            i1l1878 0FA6                              i1l1894 1110  
                            i1l1886 10D0                              i1l1990 08D6  
                            i1l1982 07D0                              i1l1896 111C  
                            i1l1888 10D8                              i1l1992 08F4  
                            i1l1984 08A0                              i1l1898 1122  
                            i1l1994 0922                              i1l1986 08B0  
                            i1l1996 0942                              i1l1988 08CA  
                            i1l1998 1424                              _TMR0IE 007F95  
                            _TMR0IF 007F92                              _TMR2IF 007CF1  
                            _TMR0ON 007EAF                              _TMR2ON 007E52  
                         ??_US_init 00A0                  __size_of_L_turn_on 0008  
                            _L_init 183C                              _M_init 147E  
                            _M_stop 1526                 __size_of_BT_rx_char 0032  
                    __CFG_XINST$OFF 000000                              _Rx_ISR 0018  
               __size_of_BT_tx_char 0020                       _LCD_string_xy 135E  
                     ?i1_LCD_string 0004                              ___lmul 121E  
                         ??___aldiv 0015                              ___wmul 17A0  
                    __CFG_STVREN$ON 000000                           ??___lldiv 0015  
                            _atoi4D 0D8E                           ??___lwdiv 0005  
                         ??___lwmod 000C                              _itoa4D 07D0  
                            _nibble 0067                              clear_0 16E4  
                            clear_1 16F0              __size_ofi1_LCD_command 0074  
        ?_M_anticlockwise_direction 0001       __size_of_M_backward_direction 0044  
                      __pdataCOMRAM 0068                        __mediumconst 7C94  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         Rx_ISR@F2577 0080  
                       Rx_ISR@F2579 0060                          __accesstop 0080  
           __end_of__initialization 16F6                     __CFG_PBADEN$OFF 000000  
              __size_of_LCD_command 007C                           ?_LCD_char 0001  
                         ?_LCD_init 0001                       ___rparam_used 000001  
                   Rx_ISR@RxMessage 0036                       ?i1_BT_tx_char 0001  
                       Rx_ISR@DuCyT 0056             ??_M_clockwise_direction 0001  
                    ?_LCD_string_xy 00A6                      ??i1_LCD_string 0006  
                    __pcstackCOMRAM 0001                         ?_L_turn_off 0001  
                       Rx_ISR@motor 005B                           ?i1_M_stop 0001  
                  i1LCD_command@cmd 0003                   __end_of_L_turn_on 184C  
 __end_of_M_anticlockwise_direction 16C6                   M_set_DC@DutyCycle 0001  
                      ??_LCD_string 00A5                    ??i1_BT_tx_string 0004  
                        __pbssBANK0 0080                        ??i1_LCD_char 0001  
                         ?_M_set_DC 0001                       i1_LCD_command 11AA  
                        ??_LCD_char 00A0                __end_of_LCD_hcommand 176E  
                        ??_LCD_init 00A3                      ??i1_BT_tx_char 0001  
                           ?_L_init 0001                             ?_M_init 0001  
                           ?_M_stop 0001                             ?_Rx_ISR 0001  
                           ?___lmul 0001                             ?___wmul 0001  
                __end_of_LCD_string 0EB6                             ?_atoi4D 0007  
                        ??i1_M_stop 0001                    LCD_string_xy@msg 00A7  
                  LCD_string_xy@pos 00A6                             ?_itoa4D 000D  
                  LCD_string_xy@row 00AA                     i1_LCD_string_xy 1422  
                    ___lmul@product 0009                             _T2CKPS0 007E50  
                           _T2CKPS1 007E51                  __end_ofi1_LCD_char 11AA  
                      ??_BT_rx_char 0001                        ??_BT_tx_char 00A0  
                           _BT_init 17CA          __end_of_M_foward_direction 15FA  
               __size_of_L_turn_off 0008                      ?i1_LCD_command 0001  
                        ??_M_set_DC 0004                       ?_BT_rx_string 0001  
                           _US_init 1704                     ??_LCD_string_xy 00A9  
                     ?_BT_tx_string 00A1                             __Hparam 0000  
                   __size_of_L_init 0008                     __size_of_M_init 0056  
                           __Lparam 0000                     __size_of_M_stop 0048  
                __end_of_BT_rx_char 17A0                     __size_of_Rx_ISR 0600  
                __end_of_BT_tx_char 1812                             ___aldiv 0944  
                   __size_of___lmul 0072                   i1BT_tx_string@msg 0002  
                           ___lldiv 0C1E                     __size_of___wmul 002A  
                           ___lwdiv 0F3E                             ___lwmod 10BE  
                   __size_of_atoi4D 009C                     __size_of_itoa4D 0174  
                           __pcinit 16C6               __end_of_US_send_pulse 0B5C  
                           __ramtop 0600                             __ptext0 0B5C  
                           __ptext1 1704                             __ptext2 147E  
                           __ptext3 1526                             __ptext4 183C  
                           __ptext5 135E                             __ptext6 0E2A  
                           __ptext7 0FC6                             __ptext8 14D4  
                           __ptext9 173A                    ___aldiv@dividend 000D  
              __end_ofi1_LCD_string 0F3E                           _LCD_clear 1830  
              end_of_initialization 16F6                      ??_BT_rx_string 0003  
                     __Lmediumconst 7C94                      ??_BT_tx_string 00A3  
                   ___lldiv@divisor 0011                     ___lldiv@counter 0019  
           __end_ofi1_LCD_string_xy 147E                    ___aldiv@quotient 0017  
                           postinc0 000FEE                             postinc2 000FDE  
                         _PORTDbits 000F83         ??_M_anticlockwise_direction 0001  
              __end_ofi1_BT_tx_char 1830                           _TRISCbits 000F94  
                         _TRISDbits 000F95                     ??i1_LCD_command 0001  
             __size_of_LCD_hcommand 0034                          ?_LCD_clear 0001  
      __end_of_M_backward_direction 1682                  i1LCD_string_xy@msg 0008  
                i1LCD_string_xy@pos 0007                  i1LCD_string_xy@row 000B  
                 __size_of_LCD_char 007C                   __size_of_LCD_init 0052  
                    __end_of_L_init 1844                      __end_of_M_init 14D4  
    __size_of_M_clockwise_direction 0044                      __end_of_M_stop 156E  
     __end_of_M_clockwise_direction 163E                        ??_L_turn_off 0001  
                    __end_of_Rx_ISR 0618                      __end_of___lmul 1290  
                    __end_of___wmul 17CA                       __pidataCOMRAM 1854  
                    __end_of_atoi4D 0E2A                      __end_of_itoa4D 0944  
                 __size_ofi1_M_stop 0048                        _LCD_hcommand 173A  
               start_initialization 16C6                           _L_turn_on 1844  
                     ??_LCD_command 00A0             US_print_distance@dist4D 0014  
                __end_of_L_turn_off 1854           _M_anticlockwise_direction 1682  
                 __size_of_M_set_DC 01B4                            ??_L_init 00A0  
                          ??_M_init 00A0                            ??_M_stop 00A0  
                          ??_Rx_ISR 0025                    ?i1_LCD_string_xy 0007  
                          ??___lmul 0009                            ??___wmul 0005  
                          ??_atoi4D 0009                    __CFG_LPT1OSC$OFF 000000  
                          ??_itoa4D 0011                __end_of_BT_rx_string 0D8E  
             __size_ofi1_LCD_string 0088                __end_of_BT_tx_string 12F8  
                       __pbssCOMRAM 0060                       __pcstackBANK0 00A0  
                          ?_BT_init 0001                          ?_L_turn_on 0001  
                       ??_LCD_clear 0004                       i1LCD_char@dat 0003  
                          ?_US_init 0001                 __end_of_LCD_command 10BE  
                     LCD_string@msg 00A3                    ___lwdiv@dividend 0001  
                _M_foward_direction 15B6                   __CFG_CCP2MX$PORTC 000000  
                      i1_LCD_string 0EB6                       BT_rx_string@i 0008  
                     __pmediumconst 7C94                            ?___aldiv 000D  
                          ?___lldiv 000D                            ?___lwdiv 0001  
                          ?___lwmod 0008               __size_ofi1_BT_tx_char 001E  
                       __pintcodelo 0018                 ?_M_foward_direction 0001  
              _M_backward_direction 163E                       i1LCD_string@i 0006  
                  ___lwdiv@quotient 0005                   US_send_pulse@dist 0020  
              ??_M_foward_direction 0001                     ___aldiv@divisor 0011  
                 BT_rx_string@RxStr 0001                     ___aldiv@counter 0015  
                    ___wmul@product 0005                            _LATBbits 000F8A  
                          _LATCbits 000F8B                            _LATDbits 000F8C  
                          _LCD_char 0FC6                            _LCD_init 14D4  
                         atoi4D@arr 0007                           atoi4D@num 000A  
                          i1u112_20 0F58                            i1u120_20 0F28  
                          i1u200_20 0C44                            i1u112_21 0F54  
                          i1u200_21 0C40                            i1u120_27 0F1E  
                          i1u113_20 0F7A                            i1u121_20 0F38  
                          i1u201_20 0C6A                            i1u113_21 0F76  
                          i1u121_21 0F34                            i1u201_21 0C66  
                          i1u114_20 0F9E                            i1u122_20 1826  
                          i1u202_20 0C9A                            i1u210_20 00D2  
                          i1u114_21 0F9A                            i1u122_21 1822  
                          i1u202_21 0C96                            i1u210_21 00CE  
                          i1u115_20 10D0                            i1u123_20 08CA  
                          i1u203_20 1588                            i1u211_20 00F0  
                          i1u115_21 10CC                            i1u123_21 08C6  
                          i1u203_21 1584                            i1u211_21 00EC  
                          i1u140_20 1780                            i1u116_20 10F2  
                          i1u124_20 08F4                            i1u204_20 159C  
                          i1u220_20 0404                            i1u212_20 011A  
                          i1u140_21 177C                            i1u116_21 10EE  
                          i1u124_21 08F0                            i1u204_21 1596  
                          i1u220_21 0400                            i1u212_21 0116  
                          i1u141_20 178E                            i1u117_20 1110  
                          i1u125_20 0922                            i1u221_20 0416  
                          i1u213_20 013C                            i1u141_21 178A  
                          i1u117_21 110C                            i1u125_21 091E  
                          i1u221_21 0412                            i1u213_21 0138  
                          i1u205_25 159E                            i1u118_20 0EDE  
                          i1u126_20 1438                            i1u142_20 1240  
                          i1u206_20 15AE                            i1u214_20 0160  
                          i1u126_21 1434                            i1u142_21 123C  
                          i1u206_21 15A8                            i1u214_21 015C  
             __end_of_LCD_string_xy 13C0                            i1u118_27 0ED4  
                          i1u230_27 0A88                            i1u127_20 131C  
                          i1u119_20 0EFA                            i1u143_20 127E  
                          i1u215_20 0182                            i1u119_21 0EF6  
                          i1u143_21 127A                            i1u215_21 017E  
                          i1u207_25 15B0                            i1u127_27 1312  
                          i1u231_27 0B24                            i1u160_20 15EE  
                          i1u128_20 1348                            i1u144_20 0956  
                          i1u216_20 0390                            i1u160_21 15E8  
                          i1u144_21 0952                            i1u216_21 038C  
                          i1u208_21 0062                            i1u128_27 133E  
                          i1u232_27 0B4E                            i1u129_20 1358  
                          i1u145_20 097C                            i1u217_20 039E  
                          i1u129_21 1354                            i1u145_21 0978  
                          i1u217_21 039A                            i1u209_21 0074  
                          i1u161_25 15F0                            i1u233_27 1156  
                          i1u162_20 1650                            i1u170_20 1632  
                          i1u146_20 09BA                            i1u218_20 03AC  
                          i1u162_21 164C                            i1u170_21 162C  
                          i1u146_21 09B6                            i1u218_21 03A8  
                          i1u234_27 119C                            i1u163_20 1664  
                          i1u147_20 09E0                            i1u155_20 0AA0  
                          i1u219_20 03F2                            i1u163_21 165E  
                          i1u147_21 09DC                            i1u155_21 0A9C  
                          i1u219_21 03EE                            i1u171_25 1634  
                          i1u235_27 11CA                            i1u172_20 1694  
                          i1u180_20 0660                            i1u148_20 0A10  
                          i1u156_20 0AB4                            i1u172_21 1690  
                          i1u180_21 065C                            i1u148_21 0A0C  
                          i1u156_21 0AB0                            i1u164_25 1666  
                          i1u236_27 1210                            i1u173_20 16A8  
                          i1u165_20 1676                            i1u157_20 15C8  
                          i1u181_20 06A0                            i1u149_20 0A4E  
                          i1u173_21 16A2                            i1u165_21 1670  
                          i1u157_21 15C4                            i1u181_21 069A  
                          i1u149_21 0A4A                            i1u158_20 15DC  
                          i1u158_21 15D6                            i1u174_25 16AA  
                          i1u166_25 1678                            i1u190_25 073A  
                          i1u182_25 06A2                            i1u175_20 16BA  
                          i1u167_20 160C                            i1u191_20 074A  
                          i1u183_20 06B2                            i1u175_21 16B4  
                          i1u167_21 1608                            i1u191_21 0744  
                          i1u183_21 06AC                            i1u159_25 15DE  
                      i1_BT_tx_char 1812                            i1u168_20 1620  
                          i1u168_21 161A                            i1u176_25 16BC  
                          i1u192_25 074C                            i1u184_25 06B4  
                          i1u193_20 0780                            i1u185_20 06EC  
                          i1u177_20 062C                            i1u193_21 077A  
                          i1u185_21 06E6                            i1u177_21 0628  
                          i1u169_25 1622                            i1u178_20 063C  
                          i1u178_21 0638                            i1u194_25 0782  
                          i1u186_25 06EE                            i1u195_20 0792  
                          i1u187_20 06FE                            i1u179_20 064E  
                          i1u195_21 078C                            i1u187_21 06F8  
                          i1u179_21 064A                            i1u196_25 0794  
                          i1u188_25 0700                            i1u197_20 0D28  
                          i1u189_20 0738                            i1u197_21 0D24  
                          i1u189_21 0732                            i1u198_20 0D5C  
                          i1u198_21 0D58                            i1u199_20 0D6C  
                          i1u199_21 0D68             __size_ofi1_BT_tx_string 0066  
                  __CFG_WDTPS$32768 000000                   _US_print_distance 13C0  
                          i1_M_stop 156E                  ?_US_print_distance 0012  
                 ___wmul@multiplier 0001               ?_M_backward_direction 0001  
               ??_US_print_distance 0014                         ??_L_turn_on 0001  
                  __size_of_BT_init 0028                   ___lmul@multiplier 0001  
                       _LCD_command 1042                            _M_set_DC 061C  
                         itoa4D@arr 000D                           itoa4D@num 000F  
            __size_of_US_send_pulse 00E4                    __size_of_US_init 0036  
                          __Hrparam 0000                            __Lrparam 0000  
             __size_of_BT_rx_string 00B8           __end_of_US_print_distance 1422  
__size_of_M_anticlockwise_direction 0044               __size_of_BT_tx_string 0068  
                  __size_of___aldiv 0134                     i1LCD_string@msg 0004  
                  __size_of___lldiv 00B8                    __size_of___lwdiv 0088  
                  __size_of___lwmod 0078                     BT_tx_string@msg 00A1  
                      BT_tx_char@Tx 00A0                     ___lwdiv@divisor 0003  
                   ___lwdiv@counter 0007                            __ptext10 1042  
                          __ptext11 1290                            __ptext20 121E  
                          __ptext12 17F2                            __ptext21 0944  
                          __ptext13 17CA                            __ptext30 0F3E  
                          __ptext22 13C0                            __ptext31 061C  
                          __ptext23 1422                            __ptext15 156E  
                          __ptext40 0CD6                            __ptext32 15B6  
                          __ptext24 0EB6                            __ptext16 0D8E  
                          __ptext41 176E                            __ptext33 15FA  
                          __ptext25 1136                            __ptext17 17A0  
                          __ptext34 163E                            __ptext26 12F8  
                          __ptext18 0C1E                            __ptext35 1682  
                          __ptext27 1812                            __ptext19 0A78  
                          __ptext36 1844                            __ptext28 07D0  
                          __ptext37 184C                            __ptext29 10BE  
                          __ptext38 1830                            __ptext39 11AA  
                          _distance 0065               __end_ofi1_LCD_command 121E  
                      _BT_rx_string 0CD6                       __size_of_main 00C2  
                      _BT_tx_string 1290                            int$flags 006A  
             _M_clockwise_direction 15FA              ??_M_backward_direction 0001  
                     _US_send_pulse 0A78               US_print_distance@dist 0012  
                    i1BT_tx_char@Tx 0001             i1LCD_string_xy@location 000C  
                        _LCD_string 0E2A                            intlevel1 0000  
                        i1_LCD_char 1136                    ___lwmod@dividend 0008  
                  ___lldiv@dividend 000D                      i1_BT_tx_string 12F8  
        __size_of_US_print_distance 0062                      ?_US_send_pulse 0001  
          __size_ofi1_LCD_string_xy 005C                          _BT_rx_char 176E  
                  ___lldiv@quotient 0015                     ___lwmod@divisor 000A  
                        _BT_tx_char 17F2                     ___lwmod@counter 000C  
                      ___aldiv@sign 0016              __end_ofi1_BT_tx_string 135E  
                   LCD_hcommand@cmd 00A1                      LCD_command@cmd 00A2  
