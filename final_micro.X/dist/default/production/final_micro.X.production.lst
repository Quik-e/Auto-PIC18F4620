

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Feb 27 21:18:24 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18LF4520 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 273 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 452 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   112                           PORTC equ 0F82h ;# 
   113  0000                     # 634 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   114                           PORTD equ 0F83h ;# 
   115  0000                     # 776 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   116                           PORTE equ 0F84h ;# 
   117  0000                     # 979 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   118                           LATA equ 0F89h ;# 
   119  0000                     # 1091 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   120                           LATB equ 0F8Ah ;# 
   121  0000                     # 1203 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   122                           LATC equ 0F8Bh ;# 
   123  0000                     # 1315 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   124                           LATD equ 0F8Ch ;# 
   125  0000                     # 1427 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   126                           LATE equ 0F8Dh ;# 
   127  0000                     # 1479 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   128                           TRISA equ 0F92h ;# 
   129  0000                     # 1484 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   130                           DDRA equ 0F92h ;# 
   131  0000                     # 1701 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   132                           TRISB equ 0F93h ;# 
   133  0000                     # 1706 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   134                           DDRB equ 0F93h ;# 
   135  0000                     # 1923 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   136                           TRISC equ 0F94h ;# 
   137  0000                     # 1928 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   138                           DDRC equ 0F94h ;# 
   139  0000                     # 2145 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   140                           TRISD equ 0F95h ;# 
   141  0000                     # 2150 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   142                           DDRD equ 0F95h ;# 
   143  0000                     # 2367 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   144                           TRISE equ 0F96h ;# 
   145  0000                     # 2372 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   146                           DDRE equ 0F96h ;# 
   147  0000                     # 2531 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   148                           OSCTUNE equ 0F9Bh ;# 
   149  0000                     # 2596 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   150                           PIE1 equ 0F9Dh ;# 
   151  0000                     # 2673 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   152                           PIR1 equ 0F9Eh ;# 
   153  0000                     # 2750 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   154                           IPR1 equ 0F9Fh ;# 
   155  0000                     # 2827 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   156                           PIE2 equ 0FA0h ;# 
   157  0000                     # 2893 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   158                           PIR2 equ 0FA1h ;# 
   159  0000                     # 2959 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   160                           IPR2 equ 0FA2h ;# 
   161  0000                     # 3025 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   162                           EECON1 equ 0FA6h ;# 
   163  0000                     # 3091 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   164                           EECON2 equ 0FA7h ;# 
   165  0000                     # 3098 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   166                           EEDATA equ 0FA8h ;# 
   167  0000                     # 3105 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   168                           EEADR equ 0FA9h ;# 
   169  0000                     # 3112 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   170                           RCSTA equ 0FABh ;# 
   171  0000                     # 3117 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   172                           RCSTA1 equ 0FABh ;# 
   173  0000                     # 3322 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   174                           TXSTA equ 0FACh ;# 
   175  0000                     # 3327 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   176                           TXSTA1 equ 0FACh ;# 
   177  0000                     # 3578 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   178                           TXREG equ 0FADh ;# 
   179  0000                     # 3583 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   180                           TXREG1 equ 0FADh ;# 
   181  0000                     # 3590 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   182                           RCREG equ 0FAEh ;# 
   183  0000                     # 3595 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   184                           RCREG1 equ 0FAEh ;# 
   185  0000                     # 3602 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   186                           SPBRG equ 0FAFh ;# 
   187  0000                     # 3607 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   188                           SPBRG1 equ 0FAFh ;# 
   189  0000                     # 3614 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   190                           SPBRGH equ 0FB0h ;# 
   191  0000                     # 3621 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   192                           T3CON equ 0FB1h ;# 
   193  0000                     # 3733 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   194                           TMR3 equ 0FB2h ;# 
   195  0000                     # 3740 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   196                           TMR3L equ 0FB2h ;# 
   197  0000                     # 3747 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   198                           TMR3H equ 0FB3h ;# 
   199  0000                     # 3754 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   200                           CMCON equ 0FB4h ;# 
   201  0000                     # 3844 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   202                           CVRCON equ 0FB5h ;# 
   203  0000                     # 3923 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   204                           ECCP1AS equ 0FB6h ;# 
   205  0000                     # 3928 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   206                           ECCPAS equ 0FB6h ;# 
   207  0000                     # 4085 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   208                           PWM1CON equ 0FB7h ;# 
   209  0000                     # 4090 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   210                           ECCP1DEL equ 0FB7h ;# 
   211  0000                     # 4223 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   212                           BAUDCON equ 0FB8h ;# 
   213  0000                     # 4228 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   214                           BAUDCTL equ 0FB8h ;# 
   215  0000                     # 4403 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   216                           CCP2CON equ 0FBAh ;# 
   217  0000                     # 4482 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   218                           CCPR2 equ 0FBBh ;# 
   219  0000                     # 4489 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   220                           CCPR2L equ 0FBBh ;# 
   221  0000                     # 4496 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   222                           CCPR2H equ 0FBCh ;# 
   223  0000                     # 4503 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   224                           CCP1CON equ 0FBDh ;# 
   225  0000                     # 4600 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   226                           CCPR1 equ 0FBEh ;# 
   227  0000                     # 4607 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   228                           CCPR1L equ 0FBEh ;# 
   229  0000                     # 4614 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   230                           CCPR1H equ 0FBFh ;# 
   231  0000                     # 4621 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   232                           ADCON2 equ 0FC0h ;# 
   233  0000                     # 4692 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   234                           ADCON1 equ 0FC1h ;# 
   235  0000                     # 4777 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   236                           ADCON0 equ 0FC2h ;# 
   237  0000                     # 4896 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   238                           ADRES equ 0FC3h ;# 
   239  0000                     # 4903 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   240                           ADRESL equ 0FC3h ;# 
   241  0000                     # 4910 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   242                           ADRESH equ 0FC4h ;# 
   243  0000                     # 4917 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   244                           SSPCON2 equ 0FC5h ;# 
   245  0000                     # 5012 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   246                           SSPCON1 equ 0FC6h ;# 
   247  0000                     # 5082 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   248                           SSPSTAT equ 0FC7h ;# 
   249  0000                     # 5303 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   250                           SSPADD equ 0FC8h ;# 
   251  0000                     # 5310 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   252                           SSPBUF equ 0FC9h ;# 
   253  0000                     # 5317 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   254                           T2CON equ 0FCAh ;# 
   255  0000                     # 5415 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   256                           PR2 equ 0FCBh ;# 
   257  0000                     # 5420 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   258                           MEMCON equ 0FCBh ;# 
   259  0000                     # 5525 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   260                           TMR2 equ 0FCCh ;# 
   261  0000                     # 5532 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   262                           T1CON equ 0FCDh ;# 
   263  0000                     # 5635 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   264                           TMR1 equ 0FCEh ;# 
   265  0000                     # 5642 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   266                           TMR1L equ 0FCEh ;# 
   267  0000                     # 5649 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   268                           TMR1H equ 0FCFh ;# 
   269  0000                     # 5656 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   270                           RCON equ 0FD0h ;# 
   271  0000                     # 5789 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   272                           WDTCON equ 0FD1h ;# 
   273  0000                     # 5817 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   274                           HLVDCON equ 0FD2h ;# 
   275  0000                     # 5822 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   276                           LVDCON equ 0FD2h ;# 
   277  0000                     # 6087 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   278                           OSCCON equ 0FD3h ;# 
   279  0000                     # 6170 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   280                           T0CON equ 0FD5h ;# 
   281  0000                     # 6253 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   282                           TMR0 equ 0FD6h ;# 
   283  0000                     # 6260 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   284                           TMR0L equ 0FD6h ;# 
   285  0000                     # 6267 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   286                           TMR0H equ 0FD7h ;# 
   287  0000                     # 6274 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   288                           STATUS equ 0FD8h ;# 
   289  0000                     # 6345 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   290                           FSR2 equ 0FD9h ;# 
   291  0000                     # 6352 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   292                           FSR2L equ 0FD9h ;# 
   293  0000                     # 6359 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   294                           FSR2H equ 0FDAh ;# 
   295  0000                     # 6366 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   296                           PLUSW2 equ 0FDBh ;# 
   297  0000                     # 6373 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   298                           PREINC2 equ 0FDCh ;# 
   299  0000                     # 6380 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   300                           POSTDEC2 equ 0FDDh ;# 
   301  0000                     # 6387 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   302                           POSTINC2 equ 0FDEh ;# 
   303  0000                     # 6394 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   304                           INDF2 equ 0FDFh ;# 
   305  0000                     # 6401 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   306                           BSR equ 0FE0h ;# 
   307  0000                     # 6408 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   308                           FSR1 equ 0FE1h ;# 
   309  0000                     # 6415 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   310                           FSR1L equ 0FE1h ;# 
   311  0000                     # 6422 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   312                           FSR1H equ 0FE2h ;# 
   313  0000                     # 6429 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   314                           PLUSW1 equ 0FE3h ;# 
   315  0000                     # 6436 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   316                           PREINC1 equ 0FE4h ;# 
   317  0000                     # 6443 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   318                           POSTDEC1 equ 0FE5h ;# 
   319  0000                     # 6450 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   320                           POSTINC1 equ 0FE6h ;# 
   321  0000                     # 6457 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   322                           INDF1 equ 0FE7h ;# 
   323  0000                     # 6464 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   324                           WREG equ 0FE8h ;# 
   325  0000                     # 6476 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   326                           FSR0 equ 0FE9h ;# 
   327  0000                     # 6483 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   328                           FSR0L equ 0FE9h ;# 
   329  0000                     # 6490 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   330                           FSR0H equ 0FEAh ;# 
   331  0000                     # 6497 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   332                           PLUSW0 equ 0FEBh ;# 
   333  0000                     # 6504 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   334                           PREINC0 equ 0FECh ;# 
   335  0000                     # 6511 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   336                           POSTDEC0 equ 0FEDh ;# 
   337  0000                     # 6518 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   338                           POSTINC0 equ 0FEEh ;# 
   339  0000                     # 6525 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   340                           INDF0 equ 0FEFh ;# 
   341  0000                     # 6532 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   342                           INTCON3 equ 0FF0h ;# 
   343  0000                     # 6624 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   344                           INTCON2 equ 0FF1h ;# 
   345  0000                     # 6694 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   346                           INTCON equ 0FF2h ;# 
   347  0000                     # 6811 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   348                           PROD equ 0FF3h ;# 
   349  0000                     # 6818 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   350                           PRODL equ 0FF3h ;# 
   351  0000                     # 6825 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   352                           PRODH equ 0FF4h ;# 
   353  0000                     # 6832 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   354                           TABLAT equ 0FF5h ;# 
   355  0000                     # 6841 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   356                           TBLPTR equ 0FF6h ;# 
   357  0000                     # 6848 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   358                           TBLPTRL equ 0FF6h ;# 
   359  0000                     # 6855 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   360                           TBLPTRH equ 0FF7h ;# 
   361  0000                     # 6862 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   362                           TBLPTRU equ 0FF8h ;# 
   363  0000                     # 6871 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   364                           PCLAT equ 0FF9h ;# 
   365  0000                     # 6878 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   366                           PC equ 0FF9h ;# 
   367  0000                     # 6885 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   368                           PCL equ 0FF9h ;# 
   369  0000                     # 6892 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   370                           PCLATH equ 0FFAh ;# 
   371  0000                     # 6899 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   372                           PCLATU equ 0FFBh ;# 
   373  0000                     # 6906 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   374                           STKPTR equ 0FFCh ;# 
   375  0000                     # 6980 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   376                           TOS equ 0FFDh ;# 
   377  0000                     # 6987 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   378                           TOSL equ 0FFDh ;# 
   379  0000                     # 6994 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   380                           TOSH equ 0FFEh ;# 
   381  0000                     # 7001 "/opt/microchip/xc8/v2.00/pic/include/pic18lf4520.h"
   382                           TOSU equ 0FFFh ;# 
   383  0000                     	FNCALL	_main,_BT_init
   384                           	FNCALL	_main,_BT_tx_char
   385                           	FNCALL	_main,_BT_tx_string
   386                           	FNCALL	_main,_LCD_command
   387                           	FNCALL	_main,_LCD_init
   388                           	FNCALL	_main,_LCD_string_xy
   389                           	FNCALL	_main,_L_init
   390                           	FNCALL	_main,_M_init
   391                           	FNCALL	_main,_US_init
   392                           	FNCALL	_M_init,_M_stop
   393                           	FNCALL	_LCD_string_xy,_LCD_command
   394                           	FNCALL	_LCD_string_xy,_LCD_string
   395                           	FNCALL	_LCD_string,_LCD_char
   396                           	FNCALL	_LCD_string,_LCD_command
   397                           	FNCALL	_LCD_init,_LCD_command
   398                           	FNCALL	_LCD_init,_LCD_hcommand
   399                           	FNCALL	_BT_tx_string,_BT_tx_char
   400                           	FNROOT	_main
   401                           	FNCALL	_Rx_ISR,_BT_rx_string
   402                           	FNCALL	_Rx_ISR,_LCD_clear
   403                           	FNCALL	_Rx_ISR,_L_turn_off
   404                           	FNCALL	_Rx_ISR,_L_turn_on
   405                           	FNCALL	_Rx_ISR,_M_anticlockwise_direction
   406                           	FNCALL	_Rx_ISR,_M_backward_direction
   407                           	FNCALL	_Rx_ISR,_M_clockwise_direction
   408                           	FNCALL	_Rx_ISR,_M_foward_direction
   409                           	FNCALL	_Rx_ISR,_M_set_DC
   410                           	FNCALL	_Rx_ISR,_US_send_pulse
   411                           	FNCALL	_Rx_ISR,___lldiv
   412                           	FNCALL	_Rx_ISR,___lmul
   413                           	FNCALL	_Rx_ISR,_atoi4D
   414                           	FNCALL	_Rx_ISR,_itoa4D
   415                           	FNCALL	_Rx_ISR,i1_BT_tx_string
   416                           	FNCALL	_Rx_ISR,i1_LCD_string_xy
   417                           	FNCALL	_Rx_ISR,i1_M_stop
   418                           	FNCALL	_atoi4D,___wmul
   419                           	FNCALL	_US_send_pulse,_US_print_distance
   420                           	FNCALL	_US_send_pulse,___aldiv
   421                           	FNCALL	_US_send_pulse,___lmul
   422                           	FNCALL	_US_send_pulse,_itoa4D
   423                           	FNCALL	_US_print_distance,_itoa4D
   424                           	FNCALL	_US_print_distance,i1_BT_tx_char
   425                           	FNCALL	_US_print_distance,i1_BT_tx_string
   426                           	FNCALL	_US_print_distance,i1_LCD_command
   427                           	FNCALL	_US_print_distance,i1_LCD_string_xy
   428                           	FNCALL	i1_LCD_string_xy,i1_LCD_command
   429                           	FNCALL	i1_LCD_string_xy,i1_LCD_string
   430                           	FNCALL	i1_LCD_string,i1_LCD_char
   431                           	FNCALL	i1_LCD_string,i1_LCD_command
   432                           	FNCALL	i1_BT_tx_string,i1_BT_tx_char
   433                           	FNCALL	_itoa4D,___lwdiv
   434                           	FNCALL	_itoa4D,___lwmod
   435                           	FNCALL	_LCD_clear,i1_LCD_command
   436                           	FNCALL	_BT_rx_string,_BT_rx_char
   437                           	FNCALL	intlevel1,_Rx_ISR
   438                           	global	intlevel1
   439                           	FNROOT	intlevel1
   440                           	global	_ParkingDistance
   441                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
   442                           global __pidataCOMRAM
   443                           __pidataCOMRAM:
   444  001854                     	file	"main.c"
   445                           	line	129
   446                           
   447                           ;initializer for _ParkingDistance
   448                           	dw	(02Dh)&0ffffh
   449  001854  002D               	global	Rx_ISR@F2579
   450                           	global	_distance
   451                           	global	_nibble
   452                           	global	Rx_ISR@F2577
   453                           	global	_RCREG
   454                           _RCREG	set	0xFAE
   455  0000                     	global	_TXREG
   456                           _TXREG	set	0xFAD
   457  0000                     	global	_SPBRG
   458                           _SPBRG	set	0xFAF
   459  0000                     	global	_CCPR2L
   460                           _CCPR2L	set	0xFBB
   461  0000                     	global	_CCPR1L
   462                           _CCPR1L	set	0xFBE
   463  0000                     	global	_PR2
   464                           _PR2	set	0xFCB
   465  0000                     	global	_LATCbits
   466                           _LATCbits	set	0xF8B
   467  0000                     	global	_TRISCbits
   468                           _TRISCbits	set	0xF94
   469  0000                     	global	_PORTDbits
   470                           _PORTDbits	set	0xF83
   471  0000                     	global	_TRISDbits
   472                           _TRISDbits	set	0xF95
   473  0000                     	global	_LATDbits
   474                           _LATDbits	set	0xF8C
   475  0000                     	global	_LATBbits
   476                           _LATBbits	set	0xF8A
   477  0000                     	global	_TRISB
   478                           _TRISB	set	0xF93
   479  0000                     	global	_LATB
   480                           _LATB	set	0xF8A
   481  0000                     	global	_TMR0
   482                           _TMR0	set	0xFD6
   483  0000                     	global	_IOFS
   484                           _IOFS	set	0x7E9A
   485  0000                     	global	_IRCF0
   486                           _IRCF0	set	0x7E9C
   487  0000                     	global	_IRCF1
   488                           _IRCF1	set	0x7E9D
   489  0000                     	global	_IRCF2
   490                           _IRCF2	set	0x7E9E
   491  0000                     	global	_IDLEN
   492                           _IDLEN	set	0x7E9F
   493  0000                     	global	_OERR
   494                           _OERR	set	0x7D59
   495  0000                     	global	_RCIF
   496                           _RCIF	set	0x7CF5
   497  0000                     	global	_TXIF
   498                           _TXIF	set	0x7CF4
   499  0000                     	global	_RCIE
   500                           _RCIE	set	0x7CED
   501  0000                     	global	_ABDEN
   502                           _ABDEN	set	0x7DC0
   503  0000                     	global	_WUE
   504                           _WUE	set	0x7DC1
   505  0000                     	global	_BRG16
   506                           _BRG16	set	0x7DC3
   507  0000                     	global	_ADDEN
   508                           _ADDEN	set	0x7D5B
   509  0000                     	global	_CREN
   510                           _CREN	set	0x7D5C
   511  0000                     	global	_RX9
   512                           _RX9	set	0x7D5E
   513  0000                     	global	_SPEN
   514                           _SPEN	set	0x7D5F
   515  0000                     	global	_BRGH
   516                           _BRGH	set	0x7D62
   517  0000                     	global	_SENDB
   518                           _SENDB	set	0x7D63
   519  0000                     	global	_SYNC
   520                           _SYNC	set	0x7D64
   521  0000                     	global	_TXEN
   522                           _TXEN	set	0x7D65
   523  0000                     	global	_TX9
   524                           _TX9	set	0x7D66
   525  0000                     	global	_TMR2ON
   526                           _TMR2ON	set	0x7E52
   527  0000                     	global	_T2CKPS0
   528                           _T2CKPS0	set	0x7E50
   529  0000                     	global	_T2CKPS1
   530                           _T2CKPS1	set	0x7E51
   531  0000                     	global	_TMR2IF
   532                           _TMR2IF	set	0x7CF1
   533  0000                     	global	_DC2B0
   534                           _DC2B0	set	0x7DD4
   535  0000                     	global	_DC2B1
   536                           _DC2B1	set	0x7DD5
   537  0000                     	global	_DC1B0
   538                           _DC1B0	set	0x7DEC
   539  0000                     	global	_DC1B1
   540                           _DC1B1	set	0x7DED
   541  0000                     	global	_CCP2M0
   542                           _CCP2M0	set	0x7DD0
   543  0000                     	global	_CCP2M1
   544                           _CCP2M1	set	0x7DD1
   545  0000                     	global	_CCP2M2
   546                           _CCP2M2	set	0x7DD2
   547  0000                     	global	_CCP2M3
   548                           _CCP2M3	set	0x7DD3
   549  0000                     	global	_CCP1M0
   550                           _CCP1M0	set	0x7DE8
   551  0000                     	global	_CCP1M1
   552                           _CCP1M1	set	0x7DE9
   553  0000                     	global	_CCP1M2
   554                           _CCP1M2	set	0x7DEA
   555  0000                     	global	_CCP1M3
   556                           _CCP1M3	set	0x7DEB
   557  0000                     	global	_INT0IE
   558                           _INT0IE	set	0x7F94
   559  0000                     	global	_TMR0IE
   560                           _TMR0IE	set	0x7F95
   561  0000                     	global	_PEIE
   562                           _PEIE	set	0x7F96
   563  0000                     	global	_GIE
   564                           _GIE	set	0x7F97
   565  0000                     	global	_TMR0IF
   566                           _TMR0IF	set	0x7F92
   567  0000                     	global	_T0CS
   568                           _T0CS	set	0x7EAD
   569  0000                     	global	_T0PS0
   570                           _T0PS0	set	0x7EA8
   571  0000                     	global	_T0PS1
   572                           _T0PS1	set	0x7EA9
   573  0000                     	global	_T0PS2
   574                           _T0PS2	set	0x7EAA
   575  0000                     	global	_PSA
   576                           _PSA	set	0x7EAB
   577  0000                     	global	_T0SE
   578                           _T0SE	set	0x7EAC
   579  0000                     	global	_T08BIT
   580                           _T08BIT	set	0x7EAE
   581  0000                     	global	_TMR0ON
   582                           _TMR0ON	set	0x7EAF
   583  0000                     	global	_RBIF
   584                           _RBIF	set	0x7F90
   585  0000                     	global	_RBIE
   586                           _RBIE	set	0x7F93
   587  0000                     psect	mediumconst,class=MEDIUMCONST,space=0,reloc=2,noexec
   588                           global __pmediumconst
   589                           __pmediumconst:
   590  007ED4                     	db	0
   591  007ED4  00                 	
   592                           STR_14:
   593  007ED5                     	db	87	;'W'
   594  007ED5  57                 	db	104	;'h'
   595  007ED6  68                 	db	105	;'i'
   596  007ED7  69                 	db	99	;'c'
   597  007ED8  63                 	db	104	;'h'
   598  007ED9  68                 	db	32
   599  007EDA  20                 	db	109	;'m'
   600  007EDB  6D                 	db	111	;'o'
   601  007EDC  6F                 	db	116	;'t'
   602  007EDD  74                 	db	111	;'o'
   603  007EDE  6F                 	db	114	;'r'
   604  007EDF  72                 	db	32
   605  007EE0  20                 	db	100	;'d'
   606  007EE1  64                 	db	111	;'o'
   607  007EE2  6F                 	db	32
   608  007EE3  20                 	db	121	;'y'
   609  007EE4  79                 	db	111	;'o'
   610  007EE5  6F                 	db	117	;'u'
   611  007EE6  75                 	db	32
   612  007EE7  20                 	db	119	;'w'
   613  007EE8  77                 	db	97	;'a'
   614  007EE9  61                 	db	110	;'n'
   615  007EEA  6E                 	db	116	;'t'
   616  007EEB  74                 	db	32
   617  007EEC  20                 	db	116	;'t'
   618  007EED  74                 	db	111	;'o'
   619  007EEE  6F                 	db	32
   620  007EEF  20                 	db	115	;'s'
   621  007EF0  73                 	db	101	;'e'
   622  007EF1  65                 	db	116	;'t'
   623  007EF2  74                 	db	32
   624  007EF3  20                 	db	68	;'D'
   625  007EF4  44                 	db	67	;'C'
   626  007EF5  43                 	db	63	;'?'
   627  007EF6  3F                 	db	32
   628  007EF7  20                 	db	77	;'M'
   629  007EF8  4D                 	db	111	;'o'
   630  007EF9  6F                 	db	116	;'t'
   631  007EFA  74                 	db	111	;'o'
   632  007EFB  6F                 	db	114	;'r'
   633  007EFC  72                 	db	32
   634  007EFD  20                 	db	49	;'1'
   635  007EFE  31                 	db	32
   636  007EFF  20                 	db	40
   637  007F00  28                 	db	49	;'1'
   638  007F01  31                 	db	41
   639  007F02  29                 	db	44
   640  007F03  2C                 	db	32
   641  007F04  20                 	db	77	;'M'
   642  007F05  4D                 	db	111	;'o'
   643  007F06  6F                 	db	116	;'t'
   644  007F07  74                 	db	111	;'o'
   645  007F08  6F                 	db	114	;'r'
   646  007F09  72                 	db	32
   647  007F0A  20                 	db	50	;'2'
   648  007F0B  32                 	db	32
   649  007F0C  20                 	db	40
   650  007F0D  28                 	db	50	;'2'
   651  007F0E  32                 	db	41
   652  007F0F  29                 	db	32
   653  007F10  20                 	db	111	;'o'
   654  007F11  6F                 	db	114	;'r'
   655  007F12  72                 	db	32
   656  007F13  20                 	db	98	;'b'
   657  007F14  62                 	db	111	;'o'
   658  007F15  6F                 	db	116	;'t'
   659  007F16  74                 	db	104	;'h'
   660  007F17  68                 	db	32
   661  007F18  20                 	db	40
   662  007F19  28                 	db	51	;'3'
   663  007F1A  33                 	db	41
   664  007F1B  29                 	db	10
   665  007F1C  0A                 	db	0
   666  007F1D  00                 	
   667                           STR_13:
   668  007F1E                     	db	87	;'W'
   669  007F1E  57                 	db	114	;'r'
   670  007F1F  72                 	db	105	;'i'
   671  007F20  69                 	db	116	;'t'
   672  007F21  74                 	db	101	;'e'
   673  007F22  65                 	db	32
   674  007F23  20                 	db	119	;'w'
   675  007F24  77                 	db	104	;'h'
   676  007F25  68                 	db	97	;'a'
   677  007F26  61                 	db	116	;'t'
   678  007F27  74                 	db	32
   679  007F28  20                 	db	121	;'y'
   680  007F29  79                 	db	111	;'o'
   681  007F2A  6F                 	db	117	;'u'
   682  007F2B  75                 	db	32
   683  007F2C  20                 	db	119	;'w'
   684  007F2D  77                 	db	97	;'a'
   685  007F2E  61                 	db	110	;'n'
   686  007F2F  6E                 	db	116	;'t'
   687  007F30  74                 	db	32
   688  007F31  20                 	db	116	;'t'
   689  007F32  74                 	db	111	;'o'
   690  007F33  6F                 	db	32
   691  007F34  20                 	db	115	;'s'
   692  007F35  73                 	db	101	;'e'
   693  007F36  65                 	db	101	;'e'
   694  007F37  65                 	db	32
   695  007F38  20                 	db	111	;'o'
   696  007F39  6F                 	db	110	;'n'
   697  007F3A  6E                 	db	32
   698  007F3B  20                 	db	116	;'t'
   699  007F3C  74                 	db	104	;'h'
   700  007F3D  68                 	db	101	;'e'
   701  007F3E  65                 	db	32
   702  007F3F  20                 	db	76	;'L'
   703  007F40  4C                 	db	67	;'C'
   704  007F41  43                 	db	68	;'D'
   705  007F42  44                 	db	10
   706  007F43  0A                 	db	0
   707  007F44  00                 	
   708                           STR_15:
   709  007F45                     	db	80	;'P'
   710  007F45  50                 	db	108	;'l'
   711  007F46  6C                 	db	101	;'e'
   712  007F47  65                 	db	97	;'a'
   713  007F48  61                 	db	115	;'s'
   714  007F49  73                 	db	101	;'e'
   715  007F4A  65                 	db	32
   716  007F4B  20                 	db	101	;'e'
   717  007F4C  65                 	db	110	;'n'
   718  007F4D  6E                 	db	116	;'t'
   719  007F4E  74                 	db	101	;'e'
   720  007F4F  65                 	db	114	;'r'
   721  007F50  72                 	db	32
   722  007F51  20                 	db	68	;'D'
   723  007F52  44                 	db	67	;'C'
   724  007F53  43                 	db	32
   725  007F54  20                 	db	118	;'v'
   726  007F55  76                 	db	97	;'a'
   727  007F56  61                 	db	108	;'l'
   728  007F57  6C                 	db	117	;'u'
   729  007F58  75                 	db	101	;'e'
   730  007F59  65                 	db	32
   731  007F5A  20                 	db	40
   732  007F5B  28                 	db	37
   733  007F5C  25                 	db	41
   734  007F5D  29                 	db	10
   735  007F5E  0A                 	db	0
   736  007F5F  00                 	
   737                           STR_10:
   738  007F60                     	db	80	;'P'
   739  007F60  50                 	db	97	;'a'
   740  007F61  61                 	db	114	;'r'
   741  007F62  72                 	db	107	;'k'
   742  007F63  6B                 	db	105	;'i'
   743  007F64  69                 	db	110	;'n'
   744  007F65  6E                 	db	103	;'g'
   745  007F66  67                 	db	32
   746  007F67  20                 	db	115	;'s'
   747  007F68  73                 	db	116	;'t'
   748  007F69  74                 	db	111	;'o'
   749  007F6A  6F                 	db	112	;'p'
   750  007F6B  70                 	db	112	;'p'
   751  007F6C  70                 	db	101	;'e'
   752  007F6D  65                 	db	100	;'d'
   753  007F6E  64                 	db	10
   754  007F6F  0A                 	db	0
   755  007F70  00                 	
   756                           STR_4:
   757  007F71                     	db	77	;'M'
   758  007F71  4D                 	db	111	;'o'
   759  007F72  6F                 	db	116	;'t'
   760  007F73  74                 	db	111	;'o'
   761  007F74  6F                 	db	114	;'r'
   762  007F75  72                 	db	32
   763  007F76  20                 	db	99	;'c'
   764  007F77  63                 	db	111	;'o'
   765  007F78  6F                 	db	110	;'n'
   766  007F79  6E                 	db	110	;'n'
   767  007F7A  6E                 	db	101	;'e'
   768  007F7B  65                 	db	99	;'c'
   769  007F7C  63                 	db	116	;'t'
   770  007F7D  74                 	db	101	;'e'
   771  007F7E  65                 	db	100	;'d'
   772  007F7F  64                 	db	10
   773  007F80  0A                 	db	0
   774  007F81  00                 	
   775                           STR_16:
   776  007F82                     	db	87	;'W'
   777  007F82  57                 	db	114	;'r'
   778  007F83  72                 	db	111	;'o'
   779  007F84  6F                 	db	110	;'n'
   780  007F85  6E                 	db	103	;'g'
   781  007F86  67                 	db	32
   782  007F87  20                 	db	65	;'A'
   783  007F88  41                 	db	110	;'n'
   784  007F89  6E                 	db	115	;'s'
   785  007F8A  73                 	db	119	;'w'
   786  007F8B  77                 	db	101	;'e'
   787  007F8C  65                 	db	114	;'r'
   788  007F8D  72                 	db	33
   789  007F8E  21                 	db	33
   790  007F8F  21                 	db	10
   791  007F90  0A                 	db	0
   792  007F91  00                 	
   793                           STR_3:
   794  007F92                     	db	77	;'M'
   795  007F92  4D                 	db	111	;'o'
   796  007F93  6F                 	db	116	;'t'
   797  007F94  74                 	db	111	;'o'
   798  007F95  6F                 	db	114	;'r'
   799  007F96  72                 	db	32
   800  007F97  20                 	db	99	;'c'
   801  007F98  63                 	db	111	;'o'
   802  007F99  6F                 	db	110	;'n'
   803  007F9A  6E                 	db	110	;'n'
   804  007F9B  6E                 	db	101	;'e'
   805  007F9C  65                 	db	99	;'c'
   806  007F9D  63                 	db	116	;'t'
   807  007F9E  74                 	db	101	;'e'
   808  007F9F  65                 	db	100	;'d'
   809  007FA0  64                 	db	0
   810  007FA1  00                 	
   811                           STR_2:
   812  007FA2                     	db	76	;'L'
   813  007FA2  4C                 	db	67	;'C'
   814  007FA3  43                 	db	68	;'D'
   815  007FA4  44                 	db	32
   816  007FA5  20                 	db	99	;'c'
   817  007FA6  63                 	db	111	;'o'
   818  007FA7  6F                 	db	110	;'n'
   819  007FA8  6E                 	db	110	;'n'
   820  007FA9  6E                 	db	101	;'e'
   821  007FAA  65                 	db	99	;'c'
   822  007FAB  63                 	db	116	;'t'
   823  007FAC  74                 	db	101	;'e'
   824  007FAD  65                 	db	100	;'d'
   825  007FAE  64                 	db	10
   826  007FAF  0A                 	db	0
   827  007FB0  00                 	
   828                           STR_7:
   829  007FB1                     	db	68	;'D'
   830  007FB1  44                 	db	105	;'i'
   831  007FB2  69                 	db	115	;'s'
   832  007FB3  73                 	db	116	;'t'
   833  007FB4  74                 	db	97	;'a'
   834  007FB5  61                 	db	110	;'n'
   835  007FB6  6E                 	db	99	;'c'
   836  007FB7  63                 	db	101	;'e'
   837  007FB8  65                 	db	32
   838  007FB9  20                 	db	40
   839  007FBA  28                 	db	109	;'m'
   840  007FBB  6D                 	db	109	;'m'
   841  007FBC  6D                 	db	41
   842  007FBD  29                 	db	58	;':'
   843  007FBE  3A                 	db	0
   844  007FBF  00                 	
   845                           STR_6:
   846  007FC0                     	db	85	;'U'
   847  007FC0  55                 	db	83	;'S'
   848  007FC1  53                 	db	32
   849  007FC2  20                 	db	99	;'c'
   850  007FC3  63                 	db	111	;'o'
   851  007FC4  6F                 	db	110	;'n'
   852  007FC5  6E                 	db	110	;'n'
   853  007FC6  6E                 	db	101	;'e'
   854  007FC7  65                 	db	99	;'c'
   855  007FC8  63                 	db	116	;'t'
   856  007FC9  74                 	db	101	;'e'
   857  007FCA  65                 	db	100	;'d'
   858  007FCB  64                 	db	10
   859  007FCC  0A                 	db	0
   860  007FCD  00                 	
   861                           STR_1:
   862  007FCE                     	db	76	;'L'
   863  007FCE  4C                 	db	67	;'C'
   864  007FCF  43                 	db	68	;'D'
   865  007FD0  44                 	db	32
   866  007FD1  20                 	db	99	;'c'
   867  007FD2  63                 	db	111	;'o'
   868  007FD3  6F                 	db	110	;'n'
   869  007FD4  6E                 	db	110	;'n'
   870  007FD5  6E                 	db	101	;'e'
   871  007FD6  65                 	db	99	;'c'
   872  007FD7  63                 	db	116	;'t'
   873  007FD8  74                 	db	101	;'e'
   874  007FD9  65                 	db	100	;'d'
   875  007FDA  64                 	db	0
   876  007FDB  00                 	
   877                           STR_5:
   878  007FDC                     	db	85	;'U'
   879  007FDC  55                 	db	83	;'S'
   880  007FDD  53                 	db	32
   881  007FDE  20                 	db	99	;'c'
   882  007FDF  63                 	db	111	;'o'
   883  007FE0  6F                 	db	110	;'n'
   884  007FE1  6E                 	db	110	;'n'
   885  007FE2  6E                 	db	101	;'e'
   886  007FE3  65                 	db	99	;'c'
   887  007FE4  63                 	db	116	;'t'
   888  007FE5  74                 	db	101	;'e'
   889  007FE6  65                 	db	100	;'d'
   890  007FE7  64                 	db	0
   891  007FE8  00                 	
   892                           STR_9:
   893  007FE9                     	db	80	;'P'
   894  007FE9  50                 	db	97	;'a'
   895  007FEA  61                 	db	114	;'r'
   896  007FEB  72                 	db	107	;'k'
   897  007FEC  6B                 	db	105	;'i'
   898  007FED  69                 	db	110	;'n'
   899  007FEE  6E                 	db	103	;'g'
   900  007FEF  67                 	db	10
   901  007FF0  0A                 	db	0
   902  007FF1  00                 	
   903                           STR_12:
   904  007FF2                     	db	68	;'D'
   905  007FF2  44                 	db	79	;'O'
   906  007FF3  4F                 	db	78	;'N'
   907  007FF4  4E                 	db	69	;'E'
   908  007FF5  45                 	db	33
   909  007FF6  21                 	db	33
   910  007FF7  21                 	db	10
   911  007FF8  0A                 	db	0
   912  007FF9  00                 	
   913                           STR_11:
   914  007FFA                     	db	68	;'D'
   915  007FFA  44                 	db	79	;'O'
   916  007FFB  4F                 	db	78	;'N'
   917  007FFC  4E                 	db	69	;'E'
   918  007FFD  45                 	db	0
   919  007FFE  00                 STR_8	equ	STR_7+0
   920  0000                     ; #config settings
   921                           global __CFG_OSC$HS
   922                           __CFG_OSC$HS equ 0x0
   923  0000                     global __CFG_FCMEN$OFF
   924                           __CFG_FCMEN$OFF equ 0x0
   925  0000                     global __CFG_IESO$OFF
   926                           __CFG_IESO$OFF equ 0x0
   927  0000                     global __CFG_PWRT$OFF
   928                           __CFG_PWRT$OFF equ 0x0
   929  0000                     global __CFG_BOREN$OFF
   930                           __CFG_BOREN$OFF equ 0x0
   931  0000                     global __CFG_BORV$3
   932                           __CFG_BORV$3 equ 0x0
   933  0000                     global __CFG_WDT$OFF
   934                           __CFG_WDT$OFF equ 0x0
   935  0000                     global __CFG_WDTPS$32768
   936                           __CFG_WDTPS$32768 equ 0x0
   937  0000                     global __CFG_CCP2MX$PORTC
   938                           __CFG_CCP2MX$PORTC equ 0x0
   939  0000                     global __CFG_PBADEN$OFF
   940                           __CFG_PBADEN$OFF equ 0x0
   941  0000                     global __CFG_LPT1OSC$OFF
   942                           __CFG_LPT1OSC$OFF equ 0x0
   943  0000                     global __CFG_MCLRE$ON
   944                           __CFG_MCLRE$ON equ 0x0
   945  0000                     global __CFG_STVREN$ON
   946                           __CFG_STVREN$ON equ 0x0
   947  0000                     global __CFG_LVP$OFF
   948                           __CFG_LVP$OFF equ 0x0
   949  0000                     global __CFG_XINST$OFF
   950                           __CFG_XINST$OFF equ 0x0
   951  0000                     global __CFG_CP0$OFF
   952                           __CFG_CP0$OFF equ 0x0
   953  0000                     global __CFG_CP1$OFF
   954                           __CFG_CP1$OFF equ 0x0
   955  0000                     global __CFG_CP2$OFF
   956                           __CFG_CP2$OFF equ 0x0
   957  0000                     global __CFG_CP3$OFF
   958                           __CFG_CP3$OFF equ 0x0
   959  0000                     global __CFG_CPB$OFF
   960                           __CFG_CPB$OFF equ 0x0
   961  0000                     global __CFG_CPD$OFF
   962                           __CFG_CPD$OFF equ 0x0
   963  0000                     global __CFG_WRT0$OFF
   964                           __CFG_WRT0$OFF equ 0x0
   965  0000                     global __CFG_WRT1$OFF
   966                           __CFG_WRT1$OFF equ 0x0
   967  0000                     global __CFG_WRT2$OFF
   968                           __CFG_WRT2$OFF equ 0x0
   969  0000                     global __CFG_WRT3$OFF
   970                           __CFG_WRT3$OFF equ 0x0
   971  0000                     global __CFG_WRTC$OFF
   972                           __CFG_WRTC$OFF equ 0x0
   973  0000                     global __CFG_WRTB$OFF
   974                           __CFG_WRTB$OFF equ 0x0
   975  0000                     global __CFG_WRTD$OFF
   976                           __CFG_WRTD$OFF equ 0x0
   977  0000                     global __CFG_EBTR0$OFF
   978                           __CFG_EBTR0$OFF equ 0x0
   979  0000                     global __CFG_EBTR1$OFF
   980                           __CFG_EBTR1$OFF equ 0x0
   981  0000                     global __CFG_EBTR2$OFF
   982                           __CFG_EBTR2$OFF equ 0x0
   983  0000                     global __CFG_EBTR3$OFF
   984                           __CFG_EBTR3$OFF equ 0x0
   985  0000                     global __CFG_EBTRB$OFF
   986                           __CFG_EBTRB$OFF equ 0x0
   987  0000                     	file	"/tmp/xcX4EUVa3"
   988                           	line	#
   989                           psect	cinit,class=CODE,delta=1,reloc=2
   990                           global __pcinit
   991                           __pcinit:
   992  0016C6                     global start_initialization
   993                           start_initialization:
   994  0016C6                     
   995                           global __initialization
   996                           __initialization:
   997  0016C6                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   998                           global __pbssCOMRAM
   999                           __pbssCOMRAM:
  1000  000060                     Rx_ISR@F2579:
  1001  000060                            ds      5
  1002  000060                     	global	_distance
  1003                           _distance:
  1004  000065                            ds      2
  1005  000065                     	global	_nibble
  1006                           _nibble:
  1007  000067                            ds      1
  1008  000067                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
  1009                           global __pdataCOMRAM
  1010                           __pdataCOMRAM:
  1011  000068                     	file	"main.c"
  1012                           	line	129
  1013                           	global	_ParkingDistance
  1014                           _ParkingDistance:
  1015  000068                            ds      2
  1016  000068                     psect	bssBANK0,class=BANK0,space=1,noexec,lowdata
  1017                           global __pbssBANK0
  1018                           __pbssBANK0:
  1019  000080                     Rx_ISR@F2577:
  1020  000080                            ds      32
  1021  000080                     	file	"/tmp/xcX4EUVa3"
  1022                           	line	#
  1023                           psect	cinit
  1024                           ; Initialize objects allocated to COMRAM (2 bytes)
  1025                           	global __pidataCOMRAM
  1026                           	; load TBLPTR registers with __pidataCOMRAM
  1027                           	movlw	low (__pidataCOMRAM)
  1028  0016C6  0E54               	movwf	tblptrl
  1029  0016C8  6EF6               	movlw	high(__pidataCOMRAM)
  1030  0016CA  0E18               	movwf	tblptrh
  1031  0016CC  6EF7               	movlw	low highword(__pidataCOMRAM)
  1032  0016CE  0E00               	movwf	tblptru
  1033  0016D0  6EF8               	tblrd*+ ;fetch initializer
  1034  0016D2  0009               	movff	tablat, __pdataCOMRAM+0		
  1035  0016D4  CFF5 F068          	tblrd*+ ;fetch initializer
  1036  0016D8  0009               	movff	tablat, __pdataCOMRAM+1		
  1037  0016DA  CFF5 F069          	line	#
  1038                           ; Clear objects allocated to BANK0 (32 bytes)
  1039                           	global __pbssBANK0
  1040                           lfsr	0,__pbssBANK0
  1041  0016DE  EE00  F080         movlw	32
  1042  0016E2  0E20               clear_0:
  1043  0016E4                     clrf	postinc0,c
  1044  0016E4  6AEE               decf	wreg
  1045  0016E6  06E8               bnz	clear_0
  1046  0016E8  E1FD               ; Clear objects allocated to COMRAM (8 bytes)
  1047                           	global __pbssCOMRAM
  1048                           lfsr	0,__pbssCOMRAM
  1049  0016EA  EE00  F060         movlw	8
  1050  0016EE  0E08               clear_1:
  1051  0016F0                     clrf	postinc0,c
  1052  0016F0  6AEE               decf	wreg
  1053  0016F2  06E8               bnz	clear_1
  1054  0016F4  E1FD               psect cinit,class=CODE,delta=1
  1055                           global end_of_initialization,__end_of__initialization
  1056                           
  1057                           ;End of C runtime variable initialization code
  1058                           
  1059                           end_of_initialization:
  1060  0016F6                     __end_of__initialization:
  1061  0016F6                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  1062  0016F6  906A               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  1063  0016F8  926A               	GLOBAL	__Lmediumconst
  1064                           	movlw	low highword(__Lmediumconst)
  1065  0016FA  0E00               	movwf	tblptru
  1066  0016FC  6EF8               movlb 0
  1067  0016FE  0100               goto _main	;jump to C main() function
  1068  001700  EFAE  F005         psect	cstackBANK0,class=BANK0,space=1,noexec
  1069                           global __pcstackBANK0
  1070                           __pcstackBANK0:
  1071  0000A0                     ??_BT_init:	; 1 bytes @ 0x0
  1072  0000A0                     ??_L_init:	; 1 bytes @ 0x0
  1073  0000A0                     ??_BT_tx_char:	; 1 bytes @ 0x0
  1074  0000A0                     ??_M_init:	; 1 bytes @ 0x0
  1075  0000A0                     ??_US_init:	; 1 bytes @ 0x0
  1076  0000A0                     ??_LCD_command:	; 1 bytes @ 0x0
  1077  0000A0                     ??_LCD_hcommand:	; 1 bytes @ 0x0
  1078  0000A0                     ??_M_stop:	; 1 bytes @ 0x0
  1079  0000A0                     ??_LCD_char:	; 1 bytes @ 0x0
  1080  0000A0                     	global	BT_tx_char@Tx
  1081                           BT_tx_char@Tx:	; 1 bytes @ 0x0
  1082  0000A0                     	ds   1
  1083  0000A0                     ?_BT_tx_string:	; 1 bytes @ 0x1
  1084  0000A1                     	global	LCD_hcommand@cmd
  1085                           LCD_hcommand@cmd:	; 1 bytes @ 0x1
  1086  0000A1                     	global	BT_tx_string@msg
  1087                           BT_tx_string@msg:	; 2 bytes @ 0x1
  1088  0000A1                     	ds   1
  1089  0000A1                     	global	LCD_command@cmd
  1090                           LCD_command@cmd:	; 1 bytes @ 0x2
  1091  0000A2                     	global	LCD_char@dat
  1092                           LCD_char@dat:	; 1 bytes @ 0x2
  1093  0000A2                     	ds   1
  1094  0000A2                     ??_LCD_init:	; 1 bytes @ 0x3
  1095  0000A3                     ??_BT_tx_string:	; 1 bytes @ 0x3
  1096  0000A3                     ?_LCD_string:	; 1 bytes @ 0x3
  1097  0000A3                     	global	LCD_string@msg
  1098                           LCD_string@msg:	; 2 bytes @ 0x3
  1099  0000A3                     	ds   2
  1100  0000A3                     ??_LCD_string:	; 1 bytes @ 0x5
  1101  0000A5                     	global	LCD_string@i
  1102                           LCD_string@i:	; 1 bytes @ 0x5
  1103  0000A5                     	ds   1
  1104  0000A5                     ?_LCD_string_xy:	; 1 bytes @ 0x6
  1105  0000A6                     	global	LCD_string_xy@pos
  1106                           LCD_string_xy@pos:	; 1 bytes @ 0x6
  1107  0000A6                     	ds   1
  1108  0000A6                     	global	LCD_string_xy@msg
  1109                           LCD_string_xy@msg:	; 2 bytes @ 0x7
  1110  0000A7                     	ds   2
  1111  0000A7                     ??_LCD_string_xy:	; 1 bytes @ 0x9
  1112  0000A9                     	ds   1
  1113  0000A9                     	global	LCD_string_xy@row
  1114                           LCD_string_xy@row:	; 1 bytes @ 0xA
  1115  0000AA                     	ds   1
  1116  0000AA                     	global	LCD_string_xy@location
  1117                           LCD_string_xy@location:	; 1 bytes @ 0xB
  1118  0000AB                     	ds   1
  1119  0000AB                     ??_main:	; 1 bytes @ 0xC
  1120  0000AC                     	ds   2
  1121  0000AC                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
  1122                           global __pcstackCOMRAM
  1123                           __pcstackCOMRAM:
  1124  000001                     ?_BT_init:	; 1 bytes @ 0x0
  1125  000001                     ?_LCD_init:	; 1 bytes @ 0x0
  1126  000001                     ?_L_init:	; 1 bytes @ 0x0
  1127  000001                     ?_BT_tx_char:	; 1 bytes @ 0x0
  1128  000001                     ?_M_init:	; 1 bytes @ 0x0
  1129  000001                     ?_US_init:	; 1 bytes @ 0x0
  1130  000001                     ?_LCD_command:	; 1 bytes @ 0x0
  1131  000001                     ?_LCD_hcommand:	; 1 bytes @ 0x0
  1132  000001                     ?_M_stop:	; 1 bytes @ 0x0
  1133  000001                     ?_BT_rx_char:	; 1 bytes @ 0x0
  1134  000001                     ??_BT_rx_char:	; 1 bytes @ 0x0
  1135  000001                     ?_main:	; 1 bytes @ 0x0
  1136  000001                     ?_LCD_char:	; 1 bytes @ 0x0
  1137  000001                     ?_LCD_clear:	; 1 bytes @ 0x0
  1138  000001                     ?_US_send_pulse:	; 1 bytes @ 0x0
  1139  000001                     ?_L_turn_on:	; 1 bytes @ 0x0
  1140  000001                     ??_L_turn_on:	; 1 bytes @ 0x0
  1141  000001                     ?_L_turn_off:	; 1 bytes @ 0x0
  1142  000001                     ??_L_turn_off:	; 1 bytes @ 0x0
  1143  000001                     ?_M_foward_direction:	; 1 bytes @ 0x0
  1144  000001                     ??_M_foward_direction:	; 1 bytes @ 0x0
  1145  000001                     ?_M_backward_direction:	; 1 bytes @ 0x0
  1146  000001                     ??_M_backward_direction:	; 1 bytes @ 0x0
  1147  000001                     ?_M_clockwise_direction:	; 1 bytes @ 0x0
  1148  000001                     ??_M_clockwise_direction:	; 1 bytes @ 0x0
  1149  000001                     ?_M_anticlockwise_direction:	; 1 bytes @ 0x0
  1150  000001                     ??_M_anticlockwise_direction:	; 1 bytes @ 0x0
  1151  000001                     ?_M_set_DC:	; 1 bytes @ 0x0
  1152  000001                     ?_BT_rx_string:	; 1 bytes @ 0x0
  1153  000001                     ?_Rx_ISR:	; 1 bytes @ 0x0
  1154  000001                     ?i1_LCD_command:	; 1 bytes @ 0x0
  1155  000001                     ??i1_LCD_command:	; 1 bytes @ 0x0
  1156  000001                     ?i1_LCD_char:	; 1 bytes @ 0x0
  1157  000001                     ??i1_LCD_char:	; 1 bytes @ 0x0
  1158  000001                     ?i1_M_stop:	; 1 bytes @ 0x0
  1159  000001                     ??i1_M_stop:	; 1 bytes @ 0x0
  1160  000001                     ?i1_BT_tx_char:	; 1 bytes @ 0x0
  1161  000001                     ??i1_BT_tx_char:	; 1 bytes @ 0x0
  1162  000001                     	global	?___wmul
  1163                           ?___wmul:	; 2 bytes @ 0x0
  1164  000001                     	global	?___lwdiv
  1165                           ?___lwdiv:	; 2 bytes @ 0x0
  1166  000001                     	global	?___lmul
  1167                           ?___lmul:	; 4 bytes @ 0x0
  1168  000001                     	global	i1BT_tx_char@Tx
  1169                           i1BT_tx_char@Tx:	; 1 bytes @ 0x0
  1170  000001                     	global	M_set_DC@DutyCycle
  1171                           M_set_DC@DutyCycle:	; 2 bytes @ 0x0
  1172  000001                     	global	BT_rx_string@RxStr
  1173                           BT_rx_string@RxStr:	; 2 bytes @ 0x0
  1174  000001                     	global	___wmul@multiplier
  1175                           ___wmul@multiplier:	; 2 bytes @ 0x0
  1176  000001                     	global	___lwdiv@dividend
  1177                           ___lwdiv@dividend:	; 2 bytes @ 0x0
  1178  000001                     	global	___lmul@multiplier
  1179                           ___lmul@multiplier:	; 4 bytes @ 0x0
  1180  000001                     	ds   1
  1181  000001                     ?i1_BT_tx_string:	; 1 bytes @ 0x1
  1182  000002                     	global	i1BT_tx_string@msg
  1183                           i1BT_tx_string@msg:	; 2 bytes @ 0x1
  1184  000002                     	ds   1
  1185  000002                     ??_BT_rx_string:	; 1 bytes @ 0x2
  1186  000003                     	global	M_set_DC@motor
  1187                           M_set_DC@motor:	; 1 bytes @ 0x2
  1188  000003                     	global	i1LCD_command@cmd
  1189                           i1LCD_command@cmd:	; 1 bytes @ 0x2
  1190  000003                     	global	i1LCD_char@dat
  1191                           i1LCD_char@dat:	; 1 bytes @ 0x2
  1192  000003                     	global	___wmul@multiplicand
  1193                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  1194  000003                     	global	___lwdiv@divisor
  1195                           ___lwdiv@divisor:	; 2 bytes @ 0x2
  1196  000003                     	ds   1
  1197  000003                     ??_LCD_clear:	; 1 bytes @ 0x3
  1198  000004                     ??_M_set_DC:	; 1 bytes @ 0x3
  1199  000004                     ?i1_LCD_string:	; 1 bytes @ 0x3
  1200  000004                     ??i1_BT_tx_string:	; 1 bytes @ 0x3
  1201  000004                     	global	i1LCD_string@msg
  1202                           i1LCD_string@msg:	; 2 bytes @ 0x3
  1203  000004                     	ds   1
  1204  000004                     ??___wmul:	; 1 bytes @ 0x4
  1205  000005                     ??___lwdiv:	; 1 bytes @ 0x4
  1206  000005                     	global	___wmul@product
  1207                           ___wmul@product:	; 2 bytes @ 0x4
  1208  000005                     	global	___lwdiv@quotient
  1209                           ___lwdiv@quotient:	; 2 bytes @ 0x4
  1210  000005                     	global	___lmul@multiplicand
  1211                           ___lmul@multiplicand:	; 4 bytes @ 0x4
  1212  000005                     	ds   1
  1213  000005                     ??i1_LCD_string:	; 1 bytes @ 0x5
  1214  000006                     	global	i1LCD_string@i
  1215                           i1LCD_string@i:	; 1 bytes @ 0x5
  1216  000006                     	ds   1
  1217  000006                     ?i1_LCD_string_xy:	; 1 bytes @ 0x6
  1218  000007                     	global	?_atoi4D
  1219                           ?_atoi4D:	; 2 bytes @ 0x6
  1220  000007                     	global	___lwdiv@counter
  1221                           ___lwdiv@counter:	; 1 bytes @ 0x6
  1222  000007                     	global	i1LCD_string_xy@pos
  1223                           i1LCD_string_xy@pos:	; 1 bytes @ 0x6
  1224  000007                     	global	atoi4D@arr
  1225                           atoi4D@arr:	; 2 bytes @ 0x6
  1226  000007                     	ds   1
  1227  000007                     	global	?___lwmod
  1228                           ?___lwmod:	; 2 bytes @ 0x7
  1229  000008                     	global	BT_rx_string@i
  1230                           BT_rx_string@i:	; 1 bytes @ 0x7
  1231  000008                     	global	___lwmod@dividend
  1232                           ___lwmod@dividend:	; 2 bytes @ 0x7
  1233  000008                     	global	i1LCD_string_xy@msg
  1234                           i1LCD_string_xy@msg:	; 2 bytes @ 0x7
  1235  000008                     	ds   1
  1236  000008                     ??_atoi4D:	; 1 bytes @ 0x8
  1237  000009                     ??___lmul:	; 1 bytes @ 0x8
  1238  000009                     	global	___lmul@product
  1239                           ___lmul@product:	; 4 bytes @ 0x8
  1240  000009                     	ds   1
  1241  000009                     ??i1_LCD_string_xy:	; 1 bytes @ 0x9
  1242  00000A                     	global	atoi4D@num
  1243                           atoi4D@num:	; 2 bytes @ 0x9
  1244  00000A                     	global	___lwmod@divisor
  1245                           ___lwmod@divisor:	; 2 bytes @ 0x9
  1246  00000A                     	ds   1
  1247  00000A                     	global	i1LCD_string_xy@row
  1248                           i1LCD_string_xy@row:	; 1 bytes @ 0xA
  1249  00000B                     	ds   1
  1250  00000B                     ??___lwmod:	; 1 bytes @ 0xB
  1251  00000C                     	global	___lwmod@counter
  1252                           ___lwmod@counter:	; 1 bytes @ 0xB
  1253  00000C                     	global	i1LCD_string_xy@location
  1254                           i1LCD_string_xy@location:	; 1 bytes @ 0xB
  1255  00000C                     	ds   1
  1256  00000C                     ?_itoa4D:	; 1 bytes @ 0xC
  1257  00000D                     	global	?___lldiv
  1258                           ?___lldiv:	; 4 bytes @ 0xC
  1259  00000D                     	global	?___aldiv
  1260                           ?___aldiv:	; 4 bytes @ 0xC
  1261  00000D                     	global	itoa4D@arr
  1262                           itoa4D@arr:	; 2 bytes @ 0xC
  1263  00000D                     	global	___lldiv@dividend
  1264                           ___lldiv@dividend:	; 4 bytes @ 0xC
  1265  00000D                     	global	___aldiv@dividend
  1266                           ___aldiv@dividend:	; 4 bytes @ 0xC
  1267  00000D                     	ds   2
  1268  00000D                     	global	itoa4D@num
  1269                           itoa4D@num:	; 2 bytes @ 0xE
  1270  00000F                     	ds   2
  1271  00000F                     ??_itoa4D:	; 1 bytes @ 0x10
  1272  000011                     	global	___lldiv@divisor
  1273                           ___lldiv@divisor:	; 4 bytes @ 0x10
  1274  000011                     	global	___aldiv@divisor
  1275                           ___aldiv@divisor:	; 4 bytes @ 0x10
  1276  000011                     	ds   1
  1277  000011                     ?_US_print_distance:	; 1 bytes @ 0x11
  1278  000012                     	global	US_print_distance@dist
  1279                           US_print_distance@dist:	; 2 bytes @ 0x11
  1280  000012                     	ds   2
  1281  000012                     ??_US_print_distance:	; 1 bytes @ 0x13
  1282  000014                     	global	US_print_distance@dist4D
  1283                           US_print_distance@dist4D:	; 5 bytes @ 0x13
  1284  000014                     	ds   1
  1285  000014                     ??___lldiv:	; 1 bytes @ 0x14
  1286  000015                     ??___aldiv:	; 1 bytes @ 0x14
  1287  000015                     	global	___aldiv@counter
  1288                           ___aldiv@counter:	; 1 bytes @ 0x14
  1289  000015                     	global	___lldiv@quotient
  1290                           ___lldiv@quotient:	; 4 bytes @ 0x14
  1291  000015                     	ds   1
  1292  000015                     	global	___aldiv@sign
  1293                           ___aldiv@sign:	; 1 bytes @ 0x15
  1294  000016                     	ds   1
  1295  000016                     	global	___aldiv@quotient
  1296                           ___aldiv@quotient:	; 4 bytes @ 0x16
  1297  000017                     	ds   2
  1298  000017                     	global	___lldiv@counter
  1299                           ___lldiv@counter:	; 1 bytes @ 0x18
  1300  000019                     	ds   2
  1301  000019                     ??_US_send_pulse:	; 1 bytes @ 0x1A
  1302  00001B                     	ds   4
  1303  00001B                     	global	US_send_pulse@i
  1304                           US_send_pulse@i:	; 1 bytes @ 0x1E
  1305  00001F                     	ds   1
  1306  00001F                     	global	US_send_pulse@dist
  1307                           US_send_pulse@dist:	; 5 bytes @ 0x1F
  1308  000020                     	ds   5
  1309  000020                     ??_Rx_ISR:	; 1 bytes @ 0x24
  1310  000025                     	ds   17
  1311  000025                     	global	Rx_ISR@RxMessage
  1312                           Rx_ISR@RxMessage:	; 32 bytes @ 0x35
  1313  000036                     	ds   32
  1314  000036                     	global	Rx_ISR@DuCyT
  1315                           Rx_ISR@DuCyT:	; 5 bytes @ 0x55
  1316  000056                     	ds   5
  1317  000056                     	global	Rx_ISR@motor
  1318                           Rx_ISR@motor:	; 1 bytes @ 0x5A
  1319  00005B                     	ds   1
  1320  00005B                     	global	Rx_ISR@DuCy
  1321                           Rx_ISR@DuCy:	; 4 bytes @ 0x5B
  1322  00005C                     	ds   4
  1323  00005C                     ;!
  1324                           ;!Data Sizes:
  1325                           ;!    Strings     298
  1326                           ;!    Constant    0
  1327                           ;!    Data        2
  1328                           ;!    BSS         40
  1329                           ;!    Persistent  0
  1330                           ;!    Stack       0
  1331                           ;!
  1332                           ;!Auto Spaces:
  1333                           ;!    Space          Size  Autos    Used
  1334                           ;!    COMRAM          126     95     105
  1335                           ;!    BANK0           128     14      46
  1336                           ;!    BANK1           256      0       0
  1337                           ;!    BANK2           256      0       0
  1338                           ;!    BANK3           256      0       0
  1339                           ;!    BANK4           256      0       0
  1340                           ;!    BANK5           256      0       0
  1341                           
  1342                           ;!
  1343                           ;!Pointer List with Targets:
  1344                           ;!
  1345                           ;!    atoi4D@arr	PTR unsigned char  size(2) Largest target is 32
  1346                           ;!		 -> Rx_ISR@RxMessage(COMRAM[32]), 
  1347                           ;!
  1348                           ;!    itoa4D@arr	PTR unsigned char  size(2) Largest target is 5
  1349                           ;!		 -> Rx_ISR@DuCyT(COMRAM[5]), US_print_distance@dist4D(COMRAM[5]), US_send_pulse@dist
                                 (COMRAM[5]), 
  1350                           ;!
  1351                           ;!    BT_rx_string@RxStr	PTR unsigned char  size(2) Largest target is 32
  1352                           ;!		 -> Rx_ISR@RxMessage(COMRAM[32]), 
  1353                           ;!
  1354                           ;!    BT_tx_string@msg	PTR const unsigned char  size(2) Largest target is 73
  1355                           ;!		 -> STR_16(CODE[16]), STR_15(CODE[27]), STR_14(CODE[73]), STR_13(CODE[39]), 
  1356                           ;!		 -> STR_12(CODE[8]), STR_10(CODE[17]), STR_9(CODE[9]), Rx_ISR@DuCyT(COMRAM[5]), 
  1357                           ;!		 -> STR_8(CODE[15]), US_print_distance@dist4D(COMRAM[5]), STR_6(CODE[14]), STR_4(COD
                                 E[17]), 
  1358                           ;!		 -> STR_2(CODE[15]), 
  1359                           ;!
  1360                           ;!    LCD_string_xy@msg	PTR const unsigned char  size(2) Largest target is 32
  1361                           ;!		 -> STR_11(CODE[5]), Rx_ISR@RxMessage(COMRAM[32]), STR_7(CODE[15]), US_print_distanc
                                 e@dist4D(COMRAM[5]), 
  1362                           ;!		 -> STR_5(CODE[13]), STR_3(CODE[16]), STR_1(CODE[14]), 
  1363                           ;!
  1364                           ;!    LCD_string@msg	PTR const unsigned char  size(2) Largest target is 32
  1365                           ;!		 -> STR_11(CODE[5]), Rx_ISR@RxMessage(COMRAM[32]), STR_7(CODE[15]), US_print_distanc
                                 e@dist4D(COMRAM[5]), 
  1366                           ;!		 -> STR_5(CODE[13]), STR_3(CODE[16]), STR_1(CODE[14]), 
  1367                           ;!
  1368                           
  1369                           
  1370                           ;!
  1371                           ;!Critical Paths under _main in COMRAM
  1372                           ;!
  1373                           ;!    None.
  1374                           ;!
  1375                           ;!Critical Paths under _Rx_ISR in COMRAM
  1376                           ;!
  1377                           ;!    _Rx_ISR->_US_send_pulse
  1378                           ;!    _atoi4D->___wmul
  1379                           ;!    ___lldiv->___lmul
  1380                           ;!    _US_send_pulse->___aldiv
  1381                           ;!    ___aldiv->___lmul
  1382                           ;!    _US_print_distance->_itoa4D
  1383                           ;!    i1_LCD_string_xy->i1_LCD_string
  1384                           ;!    i1_LCD_string->i1_LCD_char
  1385                           ;!    i1_LCD_string->i1_LCD_command
  1386                           ;!    i1_BT_tx_string->i1_BT_tx_char
  1387                           ;!    _itoa4D->___lwmod
  1388                           ;!    ___lwmod->___lwdiv
  1389                           ;!    _LCD_clear->i1_LCD_command
  1390                           ;!
  1391                           ;!Critical Paths under _main in BANK0
  1392                           ;!
  1393                           ;!    _main->_LCD_string_xy
  1394                           ;!    _LCD_string_xy->_LCD_string
  1395                           ;!    _LCD_string->_LCD_char
  1396                           ;!    _LCD_string->_LCD_command
  1397                           ;!    _LCD_init->_LCD_command
  1398                           ;!    _BT_tx_string->_BT_tx_char
  1399                           ;!
  1400                           ;!Critical Paths under _Rx_ISR in BANK0
  1401                           ;!
  1402                           ;!    None.
  1403                           ;!
  1404                           ;!Critical Paths under _main in BANK1
  1405                           ;!
  1406                           ;!    None.
  1407                           ;!
  1408                           ;!Critical Paths under _Rx_ISR in BANK1
  1409                           ;!
  1410                           ;!    None.
  1411                           ;!
  1412                           ;!Critical Paths under _main in BANK2
  1413                           ;!
  1414                           ;!    None.
  1415                           ;!
  1416                           ;!Critical Paths under _Rx_ISR in BANK2
  1417                           ;!
  1418                           ;!    None.
  1419                           ;!
  1420                           ;!Critical Paths under _main in BANK3
  1421                           ;!
  1422                           ;!    None.
  1423                           ;!
  1424                           ;!Critical Paths under _Rx_ISR in BANK3
  1425                           ;!
  1426                           ;!    None.
  1427                           ;!
  1428                           ;!Critical Paths under _main in BANK4
  1429                           ;!
  1430                           ;!    None.
  1431                           ;!
  1432                           ;!Critical Paths under _Rx_ISR in BANK4
  1433                           ;!
  1434                           ;!    None.
  1435                           ;!
  1436                           ;!Critical Paths under _main in BANK5
  1437                           ;!
  1438                           ;!    None.
  1439                           ;!
  1440                           ;!Critical Paths under _Rx_ISR in BANK5
  1441                           ;!
  1442                           ;!    None.
  1443                           
  1444 ;;
  1445 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1446 ;;
  1447                           
  1448                           ;!
  1449                           ;!Call Graph Tables:
  1450                           ;!
  1451                           ;! ---------------------------------------------------------------------------------
  1452                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1453                           ;! ---------------------------------------------------------------------------------
  1454                           ;! (0) _main                                                 2     2      0    2195
  1455                           ;!                                             12 BANK0      2     2      0
  1456                           ;!                            _BT_init
  1457                           ;!                         _BT_tx_char
  1458                           ;!                       _BT_tx_string
  1459                           ;!                        _LCD_command
  1460                           ;!                           _LCD_init
  1461                           ;!                      _LCD_string_xy
  1462                           ;!                             _L_init
  1463                           ;!                             _M_init
  1464                           ;!                            _US_init
  1465                           ;! ---------------------------------------------------------------------------------
  1466                           ;! (1) _US_init                                              0     0      0       0
  1467                           ;! ---------------------------------------------------------------------------------
  1468                           ;! (1) _M_init                                               0     0      0       0
  1469                           ;!                             _M_stop
  1470                           ;! ---------------------------------------------------------------------------------
  1471                           ;! (2) _M_stop                                               0     0      0       0
  1472                           ;! ---------------------------------------------------------------------------------
  1473                           ;! (1) _L_init                                               0     0      0       0
  1474                           ;! ---------------------------------------------------------------------------------
  1475                           ;! (1) _LCD_string_xy                                        6     3      3    1268
  1476                           ;!                                              6 BANK0      6     3      3
  1477                           ;!                        _LCD_command
  1478                           ;!                         _LCD_string
  1479                           ;! ---------------------------------------------------------------------------------
  1480                           ;! (2) _LCD_string                                           3     1      2     233
  1481                           ;!                                              3 BANK0      3     1      2
  1482                           ;!                           _LCD_char
  1483                           ;!                        _LCD_command
  1484                           ;! ---------------------------------------------------------------------------------
  1485                           ;! (3) _LCD_char                                             3     3      0      44
  1486                           ;!                                              0 BANK0      3     3      0
  1487                           ;! ---------------------------------------------------------------------------------
  1488                           ;! (1) _LCD_init                                             2     2      0      66
  1489                           ;!                                              3 BANK0      2     2      0
  1490                           ;!                        _LCD_command
  1491                           ;!                       _LCD_hcommand
  1492                           ;! ---------------------------------------------------------------------------------
  1493                           ;! (2) _LCD_hcommand                                         2     2      0      22
  1494                           ;!                                              0 BANK0      2     2      0
  1495                           ;! ---------------------------------------------------------------------------------
  1496                           ;! (3) _LCD_command                                          3     3      0      44
  1497                           ;!                                              0 BANK0      3     3      0
  1498                           ;! ---------------------------------------------------------------------------------
  1499                           ;! (1) _BT_tx_string                                         2     0      2     795
  1500                           ;!                                              1 BANK0      2     0      2
  1501                           ;!                         _BT_tx_char
  1502                           ;! ---------------------------------------------------------------------------------
  1503                           ;! (2) _BT_tx_char                                           1     1      0      22
  1504                           ;!                                              0 BANK0      1     1      0
  1505                           ;! ---------------------------------------------------------------------------------
  1506                           ;! (1) _BT_init                                              0     0      0       0
  1507                           ;! ---------------------------------------------------------------------------------
  1508                           ;! Estimated maximum stack depth 3
  1509                           ;! ---------------------------------------------------------------------------------
  1510                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1511                           ;! ---------------------------------------------------------------------------------
  1512                           ;! (4) _Rx_ISR                                              59    59      0   15418
  1513                           ;!                                             36 COMRAM    59    59      0
  1514                           ;!                       _BT_rx_string
  1515                           ;!                          _LCD_clear
  1516                           ;!                         _L_turn_off
  1517                           ;!                          _L_turn_on
  1518                           ;!          _M_anticlockwise_direction
  1519                           ;!               _M_backward_direction
  1520                           ;!              _M_clockwise_direction
  1521                           ;!                 _M_foward_direction
  1522                           ;!                           _M_set_DC
  1523                           ;!                      _US_send_pulse
  1524                           ;!                            ___lldiv
  1525                           ;!                             ___lmul
  1526                           ;!                             _atoi4D
  1527                           ;!                             _itoa4D
  1528                           ;!                     i1_BT_tx_string
  1529                           ;!                    i1_LCD_string_xy
  1530                           ;!                           i1_M_stop
  1531                           ;! ---------------------------------------------------------------------------------
  1532                           ;! (5) i1_M_stop                                             0     0      0       0
  1533                           ;! ---------------------------------------------------------------------------------
  1534                           ;! (5) _atoi4D                                               5     3      2     502
  1535                           ;!                                              6 COMRAM     5     3      2
  1536                           ;!                             ___wmul
  1537                           ;! ---------------------------------------------------------------------------------
  1538                           ;! (6) ___wmul                                               6     2      4     311
  1539                           ;!                                              0 COMRAM     6     2      4
  1540                           ;! ---------------------------------------------------------------------------------
  1541                           ;! (5) ___lldiv                                             13     5      8     314
  1542                           ;!                                             12 COMRAM    13     5      8
  1543                           ;!                             ___lmul (ARG)
  1544                           ;! ---------------------------------------------------------------------------------
  1545                           ;! (5) _US_send_pulse                                       10    10      0    6512
  1546                           ;!                                             26 COMRAM    10    10      0
  1547                           ;!                  _US_print_distance
  1548                           ;!                            ___aldiv
  1549                           ;!                             ___lmul
  1550                           ;!                             _itoa4D
  1551                           ;! ---------------------------------------------------------------------------------
  1552                           ;! (5) ___lmul                                              12     4      8     522
  1553                           ;!                                              0 COMRAM    12     4      8
  1554                           ;! ---------------------------------------------------------------------------------
  1555                           ;! (6) ___aldiv                                             14     6      8     452
  1556                           ;!                                             12 COMRAM    14     6      8
  1557                           ;!                             ___lmul (ARG)
  1558                           ;! ---------------------------------------------------------------------------------
  1559                           ;! (6) _US_print_distance                                    7     5      2    3325
  1560                           ;!                                             17 COMRAM     7     5      2
  1561                           ;!                             _itoa4D
  1562                           ;!                       i1_BT_tx_char
  1563                           ;!                     i1_BT_tx_string
  1564                           ;!                      i1_LCD_command
  1565                           ;!                    i1_LCD_string_xy
  1566                           ;! ---------------------------------------------------------------------------------
  1567                           ;! (5) i1_LCD_string_xy                                      6     3      3     570
  1568                           ;!                                              6 COMRAM     6     3      3
  1569                           ;!                      i1_LCD_command
  1570                           ;!                       i1_LCD_string
  1571                           ;! ---------------------------------------------------------------------------------
  1572                           ;! (6) i1_LCD_string                                         3     1      2     183
  1573                           ;!                                              3 COMRAM     3     1      2
  1574                           ;!                         i1_LCD_char
  1575                           ;!                      i1_LCD_command
  1576                           ;! ---------------------------------------------------------------------------------
  1577                           ;! (7) i1_LCD_char                                           3     3      0      44
  1578                           ;!                                              0 COMRAM     3     3      0
  1579                           ;! ---------------------------------------------------------------------------------
  1580                           ;! (5) i1_BT_tx_string                                       2     0      2     327
  1581                           ;!                                              1 COMRAM     2     0      2
  1582                           ;!                       i1_BT_tx_char
  1583                           ;! ---------------------------------------------------------------------------------
  1584                           ;! (6) i1_BT_tx_char                                         1     1      0      22
  1585                           ;!                                              0 COMRAM     1     1      0
  1586                           ;! ---------------------------------------------------------------------------------
  1587                           ;! (5) _itoa4D                                               5     1      4    2171
  1588                           ;!                                             12 COMRAM     5     1      4
  1589                           ;!                            ___lwdiv
  1590                           ;!                            ___lwmod
  1591                           ;! ---------------------------------------------------------------------------------
  1592                           ;! (6) ___lwmod                                              5     1      4     767
  1593                           ;!                                              7 COMRAM     5     1      4
  1594                           ;!                            ___lwdiv (ARG)
  1595                           ;! ---------------------------------------------------------------------------------
  1596                           ;! (6) ___lwdiv                                              7     3      4     618
  1597                           ;!                                              0 COMRAM     7     3      4
  1598                           ;! ---------------------------------------------------------------------------------
  1599                           ;! (5) _M_set_DC                                             5     2      3    3414
  1600                           ;!                                              0 COMRAM     5     2      3
  1601                           ;! ---------------------------------------------------------------------------------
  1602                           ;! (5) _M_foward_direction                                   0     0      0       0
  1603                           ;! ---------------------------------------------------------------------------------
  1604                           ;! (5) _M_clockwise_direction                                0     0      0       0
  1605                           ;! ---------------------------------------------------------------------------------
  1606                           ;! (5) _M_backward_direction                                 0     0      0       0
  1607                           ;! ---------------------------------------------------------------------------------
  1608                           ;! (5) _M_anticlockwise_direction                            0     0      0       0
  1609                           ;! ---------------------------------------------------------------------------------
  1610                           ;! (5) _L_turn_on                                            0     0      0       0
  1611                           ;! ---------------------------------------------------------------------------------
  1612                           ;! (5) _L_turn_off                                           0     0      0       0
  1613                           ;! ---------------------------------------------------------------------------------
  1614                           ;! (5) _LCD_clear                                            0     0      0      44
  1615                           ;!                      i1_LCD_command
  1616                           ;! ---------------------------------------------------------------------------------
  1617                           ;! (7) i1_LCD_command                                        3     3      0      44
  1618                           ;!                                              0 COMRAM     3     3      0
  1619                           ;! ---------------------------------------------------------------------------------
  1620                           ;! (5) _BT_rx_string                                         8     6      2     580
  1621                           ;!                                              0 COMRAM     8     6      2
  1622                           ;!                         _BT_rx_char
  1623                           ;! ---------------------------------------------------------------------------------
  1624                           ;! (6) _BT_rx_char                                           0     0      0       0
  1625                           ;! ---------------------------------------------------------------------------------
  1626                           ;! Estimated maximum stack depth 7
  1627                           ;! ---------------------------------------------------------------------------------
  1628                           ;!
  1629                           ;! Call Graph Graphs:
  1630                           ;!
  1631                           ;! _main (ROOT)
  1632                           ;!   _BT_init
  1633                           ;!   _BT_tx_char
  1634                           ;!   _BT_tx_string
  1635                           ;!     _BT_tx_char
  1636                           ;!   _LCD_command
  1637                           ;!   _LCD_init
  1638                           ;!     _LCD_command
  1639                           ;!     _LCD_hcommand
  1640                           ;!   _LCD_string_xy
  1641                           ;!     _LCD_command
  1642                           ;!     _LCD_string
  1643                           ;!       _LCD_char
  1644                           ;!       _LCD_command
  1645                           ;!   _L_init
  1646                           ;!   _M_init
  1647                           ;!     _M_stop
  1648                           ;!   _US_init
  1649                           ;!
  1650                           ;! _Rx_ISR (ROOT)
  1651                           ;!   _BT_rx_string
  1652                           ;!     _BT_rx_char
  1653                           ;!   _LCD_clear
  1654                           ;!     i1_LCD_command
  1655                           ;!   _L_turn_off
  1656                           ;!   _L_turn_on
  1657                           ;!   _M_anticlockwise_direction
  1658                           ;!   _M_backward_direction
  1659                           ;!   _M_clockwise_direction
  1660                           ;!   _M_foward_direction
  1661                           ;!   _M_set_DC
  1662                           ;!   _US_send_pulse
  1663                           ;!     _US_print_distance
  1664                           ;!       _itoa4D
  1665                           ;!         ___lwdiv
  1666                           ;!         ___lwmod
  1667                           ;!           ___lwdiv (ARG)
  1668                           ;!       i1_BT_tx_char
  1669                           ;!       i1_BT_tx_string
  1670                           ;!         i1_BT_tx_char
  1671                           ;!       i1_LCD_command
  1672                           ;!       i1_LCD_string_xy
  1673                           ;!         i1_LCD_command
  1674                           ;!         i1_LCD_string
  1675                           ;!           i1_LCD_char
  1676                           ;!           i1_LCD_command
  1677                           ;!     ___aldiv
  1678                           ;!       ___lmul (ARG)
  1679                           ;!     ___lmul
  1680                           ;!     _itoa4D
  1681                           ;!       ___lwdiv
  1682                           ;!       ___lwmod
  1683                           ;!         ___lwdiv (ARG)
  1684                           ;!   ___lldiv
  1685                           ;!     ___lmul (ARG)
  1686                           ;!   ___lmul
  1687                           ;!   _atoi4D
  1688                           ;!     ___wmul
  1689                           ;!   _itoa4D
  1690                           ;!     ___lwdiv
  1691                           ;!     ___lwmod
  1692                           ;!       ___lwdiv (ARG)
  1693                           ;!   i1_BT_tx_string
  1694                           ;!     i1_BT_tx_char
  1695                           ;!   i1_LCD_string_xy
  1696                           ;!     i1_LCD_command
  1697                           ;!     i1_LCD_string
  1698                           ;!       i1_LCD_char
  1699                           ;!       i1_LCD_command
  1700                           ;!   i1_M_stop
  1701                           ;!
  1702                           
  1703                           ;! Address spaces:
  1704                           
  1705                           ;!Name               Size   Autos  Total    Cost      Usage
  1706                           ;!BIGRAM             5FF      0       0      17        0.0%
  1707                           ;!EEDATA             100      0       0       0        0.0%
  1708                           ;!BITBANK5           100      0       0      16        0.0%
  1709                           ;!BANK5              100      0       0      14        0.0%
  1710                           ;!BITBANK4           100      0       0      12        0.0%
  1711                           ;!BANK4              100      0       0      13        0.0%
  1712                           ;!BITBANK3           100      0       0      10        0.0%
  1713                           ;!BANK3              100      0       0      11        0.0%
  1714                           ;!BITBANK2           100      0       0       8        0.0%
  1715                           ;!BANK2              100      0       0       9        0.0%
  1716                           ;!BITBANK1           100      0       0       6        0.0%
  1717                           ;!BANK1              100      0       0       7        0.0%
  1718                           ;!BITBANK0            80      0       0       4        0.0%
  1719                           ;!BANK0               80      E      2E       5       35.9%
  1720                           ;!BITCOMRAM           7E      0       0       0        0.0%
  1721                           ;!COMRAM              7E     5F      69       1       83.3%
  1722                           ;!BITSFR               0      0       0     200        0.0%
  1723                           ;!SFR                  0      0       0     200        0.0%
  1724                           ;!STACK                0      0       0       2        0.0%
  1725                           ;!NULL                 0      0       0       0        0.0%
  1726                           ;!ABS                  0      0      97      15        0.0%
  1727                           ;!DATA                 0      0      97       3        0.0%
  1728                           ;!CODE                 0      0       0       0        0.0%
  1729                           
  1730                           	global	_main
  1731                           
  1732 ;; *************** function _main *****************
  1733 ;; Defined at:
  1734 ;;		line 157 in file "main.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;		None
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;		None
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1748 ;;      Params:         0       0       0       0       0       0       0
  1749 ;;      Locals:         0       0       0       0       0       0       0
  1750 ;;      Temps:          0       2       0       0       0       0       0
  1751 ;;      Totals:         0       2       0       0       0       0       0
  1752 ;;Total ram usage:        2 bytes
  1753 ;; Hardware stack levels required when called:    9
  1754 ;; This function calls:
  1755 ;;		_BT_init
  1756 ;;		_BT_tx_char
  1757 ;;		_BT_tx_string
  1758 ;;		_LCD_command
  1759 ;;		_LCD_init
  1760 ;;		_LCD_string_xy
  1761 ;;		_L_init
  1762 ;;		_M_init
  1763 ;;		_US_init
  1764 ;; This function is called by:
  1765 ;;		Startup code after reset
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1769                           	file	"main.c"
  1770                           	line	157
  1771                           global __ptext0
  1772                           __ptext0:
  1773  000B5C                     psect	text0
  1774                           	file	"main.c"
  1775                           	line	157
  1776                           	global	__size_of_main
  1777                           	__size_of_main	equ	__end_of_main-_main
  1778  0000                     	
  1779                           _main:
  1780  000B5C                     ;incstack = 0
  1781                           	opt	stack 22
  1782                           	line	159
  1783                           	
  1784                           l2348:
  1785  000B5C                     ;main.c: 159:     BT_init();
  1786                           	call	_BT_init	;wreg free
  1787  000B5C  ECE5  F00B         	line	160
  1788                           	
  1789                           l2350:
  1790  000B60                     ;main.c: 160:     LCD_init();
  1791                           	call	_LCD_init	;wreg free
  1792  000B60  EC6A  F00A         	line	161
  1793                           	
  1794                           l2352:
  1795  000B64                     ;main.c: 161:     L_init();
  1796                           	call	_L_init	;wreg free
  1797  000B64  EC1E  F00C         	line	162
  1798                           	
  1799                           l2354:
  1800  000B68                     ;main.c: 162:     BT_tx_char('\n');
  1801                           	movlw	(0Ah)&0ffh
  1802  000B68  0E0A               	
  1803                           	call	_BT_tx_char
  1804  000B6A  ECF9  F00B         	line	163
  1805                           	
  1806                           l2356:
  1807  000B6E                     ;main.c: 163:     LCD_string_xy(1,1,"LCD connected");
  1808                           	movlw	low(01h)
  1809  000B6E  0E01               	movlb	0	; () banked
  1810  000B70  0100               	movwf	((LCD_string_xy@pos))&0ffh
  1811  000B72  6FA6               		movlw	low(STR_1)
  1812  000B74  0ECE               	movwf	((LCD_string_xy@msg))&0ffh
  1813  000B76  6FA7               	movlw	high(STR_1)
  1814  000B78  0E7F               	movwf	((LCD_string_xy@msg+1))&0ffh
  1815  000B7A  6FA8               
  1816                           	movlw	(01h)&0ffh
  1817  000B7C  0E01               	
  1818                           	call	_LCD_string_xy
  1819  000B7E  ECAF  F009         	line	164
  1820                           	
  1821                           l2358:
  1822  000B82                     ;main.c: 164:     BT_tx_string("LCD connected\n");
  1823                           		movlw	low(STR_2)
  1824  000B82  0EA2               	movlb	0	; () banked
  1825  000B84  0100               	movwf	((BT_tx_string@msg))&0ffh
  1826  000B86  6FA1               	movlw	high(STR_2)
  1827  000B88  0E7F               	movwf	((BT_tx_string@msg+1))&0ffh
  1828  000B8A  6FA2               
  1829                           	call	_BT_tx_string	;wreg free
  1830  000B8C  EC48  F009         	line	165
  1831                           	
  1832                           l2360:
  1833  000B90                     ;main.c: 165:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1834                           	opt asmopt_push
  1835                           opt asmopt_off
  1836                           movlw  26
  1837  000B90  0E1A               	movlb	0	; () banked
  1838  000B92  0100               movwf	(??_main+0+0+1)&0ffh,f
  1839  000B94  6FAD               movlw	94
  1840  000B96  0E5E               movwf	(??_main+0+0)&0ffh,f
  1841  000B98  6FAC               	movlw	110
  1842  000B9A  0E6E               u2227:
  1843  000B9C                     decfsz	wreg,f
  1844  000B9C  2EE8               	bra	u2227
  1845  000B9E  D7FE               	decfsz	(??_main+0+0)&0ffh,f
  1846  000BA0  2FAC               	bra	u2227
  1847  000BA2  D7FC               	decfsz	(??_main+0+0+1)&0ffh,f
  1848  000BA4  2FAD               	bra	u2227
  1849  000BA6  D7FA               	nop
  1850  000BA8  F000               opt asmopt_pop
  1851                           
  1852                           	line	166
  1853                           	
  1854                           l2362:
  1855  000BAA                     ;main.c: 166:     M_init();
  1856                           	call	_M_init	;wreg free
  1857  000BAA  EC3F  F00A         	line	167
  1858                           	
  1859                           l2364:
  1860  000BAE                     ;main.c: 167:     LCD_string_xy(2,1,"Motor connected");
  1861                           	movlw	low(01h)
  1862  000BAE  0E01               	movlb	0	; () banked
  1863  000BB0  0100               	movwf	((LCD_string_xy@pos))&0ffh
  1864  000BB2  6FA6               		movlw	low(STR_3)
  1865  000BB4  0E92               	movwf	((LCD_string_xy@msg))&0ffh
  1866  000BB6  6FA7               	movlw	high(STR_3)
  1867  000BB8  0E7F               	movwf	((LCD_string_xy@msg+1))&0ffh
  1868  000BBA  6FA8               
  1869                           	movlw	(02h)&0ffh
  1870  000BBC  0E02               	
  1871                           	call	_LCD_string_xy
  1872  000BBE  ECAF  F009         	line	168
  1873                           	
  1874                           l2366:
  1875  000BC2                     ;main.c: 168:     BT_tx_string("Motor connected\n");
  1876                           		movlw	low(STR_4)
  1877  000BC2  0E71               	movlb	0	; () banked
  1878  000BC4  0100               	movwf	((BT_tx_string@msg))&0ffh
  1879  000BC6  6FA1               	movlw	high(STR_4)
  1880  000BC8  0E7F               	movwf	((BT_tx_string@msg+1))&0ffh
  1881  000BCA  6FA2               
  1882                           	call	_BT_tx_string	;wreg free
  1883  000BCC  EC48  F009         	line	169
  1884                           ;main.c: 169:     US_init();
  1885                           	call	_US_init	;wreg free
  1886  000BD0  EC82  F00B         	line	170
  1887                           	
  1888                           l2368:
  1889  000BD4                     ;main.c: 170:     LCD_string_xy(1,1,"US connected");
  1890                           	movlw	low(01h)
  1891  000BD4  0E01               	movlb	0	; () banked
  1892  000BD6  0100               	movwf	((LCD_string_xy@pos))&0ffh
  1893  000BD8  6FA6               		movlw	low(STR_5)
  1894  000BDA  0EDC               	movwf	((LCD_string_xy@msg))&0ffh
  1895  000BDC  6FA7               	movlw	high(STR_5)
  1896  000BDE  0E7F               	movwf	((LCD_string_xy@msg+1))&0ffh
  1897  000BE0  6FA8               
  1898                           	movlw	(01h)&0ffh
  1899  000BE2  0E01               	
  1900                           	call	_LCD_string_xy
  1901  000BE4  ECAF  F009         	line	171
  1902                           	
  1903                           l2370:
  1904  000BE8                     ;main.c: 171:     BT_tx_string("US connected\n");
  1905                           		movlw	low(STR_6)
  1906  000BE8  0EC0               	movlb	0	; () banked
  1907  000BEA  0100               	movwf	((BT_tx_string@msg))&0ffh
  1908  000BEC  6FA1               	movlw	high(STR_6)
  1909  000BEE  0E7F               	movwf	((BT_tx_string@msg+1))&0ffh
  1910  000BF0  6FA2               
  1911                           	call	_BT_tx_string	;wreg free
  1912  000BF2  EC48  F009         	line	172
  1913                           	
  1914                           l2372:
  1915  000BF6                     ;main.c: 172:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1916                           	opt asmopt_push
  1917                           opt asmopt_off
  1918                           movlw  26
  1919  000BF6  0E1A               	movlb	0	; () banked
  1920  000BF8  0100               movwf	(??_main+0+0+1)&0ffh,f
  1921  000BFA  6FAD               movlw	94
  1922  000BFC  0E5E               movwf	(??_main+0+0)&0ffh,f
  1923  000BFE  6FAC               	movlw	110
  1924  000C00  0E6E               u2237:
  1925  000C02                     decfsz	wreg,f
  1926  000C02  2EE8               	bra	u2237
  1927  000C04  D7FE               	decfsz	(??_main+0+0)&0ffh,f
  1928  000C06  2FAC               	bra	u2237
  1929  000C08  D7FC               	decfsz	(??_main+0+0+1)&0ffh,f
  1930  000C0A  2FAD               	bra	u2237
  1931  000C0C  D7FA               	nop
  1932  000C0E  F000               opt asmopt_pop
  1933                           
  1934                           	line	173
  1935                           	
  1936                           l2374:
  1937  000C10                     ;main.c: 173:     LCD_command(0x01);
  1938                           	movlw	(01h)&0ffh
  1939  000C10  0E01               	
  1940                           	call	_LCD_command
  1941  000C12  EC21  F008         	line	174
  1942                           ;main.c: 174:     while(1);
  1943                           	
  1944                           l179:
  1945  000C16                     	
  1946                           l180:
  1947  000C16                     	goto	l179
  1948  000C16  EF0B  F006         	
  1949                           l181:
  1950  000C1A                     	line	176
  1951                           ;main.c: 175:     return;
  1952                           	
  1953                           l182:
  1954  000C1A                     	global	start
  1955                           	goto	start
  1956  000C1A  EF0C  F003         	opt stack 0
  1957                           GLOBAL	__end_of_main
  1958                           	__end_of_main:
  1959  000C1E                     	signat	_main,89
  1960                           	global	_US_init
  1961                           
  1962 ;; *************** function _US_init *****************
  1963 ;; Defined at:
  1964 ;;		line 289 in file "main.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1978 ;;      Params:         0       0       0       0       0       0       0
  1979 ;;      Locals:         0       0       0       0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0
  1981 ;;      Totals:         0       0       0       0       0       0       0
  1982 ;;Total ram usage:        0 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    6
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           psect	text1,class=CODE,space=0,reloc=2,group=0
  1992                           	line	289
  1993                           global __ptext1
  1994                           __ptext1:
  1995  001704                     psect	text1
  1996                           	file	"main.c"
  1997                           	line	289
  1998                           	global	__size_of_US_init
  1999                           	__size_of_US_init	equ	__end_of_US_init-_US_init
  2000  0000                     	
  2001                           _US_init:
  2002  001704                     ;incstack = 0
  2003                           	opt	stack 24
  2004                           	line	291
  2005                           	
  2006                           l2208:
  2007  001704                     ;main.c: 291:     RBIE=1;
  2008                           	bsf	c:(32659/8),(32659)&7	;volatile
  2009  001704  86F2               	line	292
  2010                           ;main.c: 292:     RBIF=0;
  2011                           	bcf	c:(32656/8),(32656)&7	;volatile
  2012  001706  90F2               	line	293
  2013                           ;main.c: 293:     LATDbits.LD0=0;
  2014                           	bcf	((c:3980)),c,0	;volatile
  2015  001708  908C               	line	294
  2016                           ;main.c: 294:     TRISDbits.RD0=0;
  2017                           	bcf	((c:3989)),c,0	;volatile
  2018  00170A  9095               	line	295
  2019                           ;main.c: 295:     TRISDbits.RD1=1;
  2020                           	bsf	((c:3989)),c,1	;volatile
  2021  00170C  8295               	line	296
  2022                           ;main.c: 296:     TMR0ON=0;
  2023                           	bcf	c:(32431/8),(32431)&7	;volatile
  2024  00170E  9ED5               	line	297
  2025                           ;main.c: 297:     T08BIT=0;
  2026                           	bcf	c:(32430/8),(32430)&7	;volatile
  2027  001710  9CD5               	line	298
  2028                           ;main.c: 298:     T0SE=1;
  2029                           	bsf	c:(32428/8),(32428)&7	;volatile
  2030  001712  88D5               	line	299
  2031                           ;main.c: 299:     PSA=0;
  2032                           	bcf	c:(32427/8),(32427)&7	;volatile
  2033  001714  96D5               	line	300
  2034                           ;main.c: 300:     T0PS2=1;
  2035                           	bsf	c:(32426/8),(32426)&7	;volatile
  2036  001716  84D5               	line	301
  2037                           ;main.c: 301:     T0PS1=0;
  2038                           	bcf	c:(32425/8),(32425)&7	;volatile
  2039  001718  92D5               	line	302
  2040                           ;main.c: 302:     T0PS0=0;
  2041                           	bcf	c:(32424/8),(32424)&7	;volatile
  2042  00171A  90D5               	line	303
  2043                           ;main.c: 303:     T0CS=0;
  2044                           	bcf	c:(32429/8),(32429)&7	;volatile
  2045  00171C  9AD5               	line	304
  2046                           ;main.c: 304:     TMR0IF=0;
  2047                           	bcf	c:(32658/8),(32658)&7	;volatile
  2048  00171E  94F2               	line	305
  2049                           ;main.c: 305:     RBIF=0;
  2050                           	bcf	c:(32656/8),(32656)&7	;volatile
  2051  001720  90F2               	line	306
  2052                           ;main.c: 306:     GIE=1;
  2053                           	bsf	c:(32663/8),(32663)&7	;volatile
  2054  001722  8EF2               	line	307
  2055                           ;main.c: 307:     PEIE=1;
  2056                           	bsf	c:(32662/8),(32662)&7	;volatile
  2057  001724  8CF2               	line	308
  2058                           ;main.c: 308:     TMR0IE=1;
  2059                           	bsf	c:(32661/8),(32661)&7	;volatile
  2060  001726  8AF2               	line	309
  2061                           ;main.c: 309:     INT0IE=0;
  2062                           	bcf	c:(32660/8),(32660)&7	;volatile
  2063  001728  98F2               	line	310
  2064                           ;main.c: 310:     TMR0IF=0;
  2065                           	bcf	c:(32658/8),(32658)&7	;volatile
  2066  00172A  94F2               	line	311
  2067                           	
  2068                           l2210:
  2069  00172C                     ;main.c: 311:     TMR0=26472;
  2070                           	movlw	high(06768h)
  2071  00172C  0E67               	movwf	((c:4054+1)),c	;volatile
  2072  00172E  6ED7               	movlw	low(06768h)
  2073  001730  0E68               	movwf	((c:4054)),c	;volatile
  2074  001732  6ED6               	goto	l212
  2075  001734  EF9C  F00B         	line	312
  2076                           	
  2077                           l2212:
  2078  001738                     	line	313
  2079                           ;main.c: 312:     return;
  2080                           	
  2081                           l212:
  2082  001738                     	return	;funcret
  2083  001738  0012               	opt stack 0
  2084                           GLOBAL	__end_of_US_init
  2085                           	__end_of_US_init:
  2086  00173A                     	signat	_US_init,89
  2087                           	global	_M_init
  2088                           
  2089 ;; *************** function _M_init *****************
  2090 ;; Defined at:
  2091 ;;		line 375 in file "main.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;		None
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;		None
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg, status,2, status,0, cstack
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2105 ;;      Params:         0       0       0       0       0       0       0
  2106 ;;      Locals:         0       0       0       0       0       0       0
  2107 ;;      Temps:          0       0       0       0       0       0       0
  2108 ;;      Totals:         0       0       0       0       0       0       0
  2109 ;;Total ram usage:        0 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; Hardware stack levels required when called:    7
  2112 ;; This function calls:
  2113 ;;		_M_stop
  2114 ;; This function is called by:
  2115 ;;		_main
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           psect	text2,class=CODE,space=0,reloc=2,group=0
  2119                           	line	375
  2120                           global __ptext2
  2121                           __ptext2:
  2122  00147E                     psect	text2
  2123                           	file	"main.c"
  2124                           	line	375
  2125                           	global	__size_of_M_init
  2126                           	__size_of_M_init	equ	__end_of_M_init-_M_init
  2127  0000                     	
  2128                           _M_init:
  2129  00147E                     ;incstack = 0
  2130                           	opt	stack 23
  2131                           	line	377
  2132                           	
  2133                           l2204:
  2134  00147E                     ;main.c: 377:     LATDbits.LD4=0;LATDbits.LD5=0;LATDbits.LD6=1;LATDbits.LD7=0;
  2135                           	bcf	((c:3980)),c,4	;volatile
  2136  00147E  988C               	bcf	((c:3980)),c,5	;volatile
  2137  001480  9A8C               	bsf	((c:3980)),c,6	;volatile
  2138  001482  8C8C               	bcf	((c:3980)),c,7	;volatile
  2139  001484  9E8C               	line	378
  2140                           ;main.c: 378:     TRISCbits.RC2=1;TRISCbits.RC1=1;TRISDbits.RD4=0;TRISDbits.RD5=0;TRISDb
                                 its.RD6=0;TRISDbits.RD7=0;
  2141                           	bsf	((c:3988)),c,2	;volatile
  2142  001486  8494               	bsf	((c:3988)),c,1	;volatile
  2143  001488  8294               	bcf	((c:3989)),c,4	;volatile
  2144  00148A  9895               	bcf	((c:3989)),c,5	;volatile
  2145  00148C  9A95               	bcf	((c:3989)),c,6	;volatile
  2146  00148E  9C95               	bcf	((c:3989)),c,7	;volatile
  2147  001490  9E95               	line	379
  2148                           ;main.c: 379:     PR2=0xFF;
  2149                           	setf	((c:4043)),c	;volatile
  2150  001492  68CB               	line	380
  2151                           ;main.c: 380:     CCP1M3=1;
  2152                           	bsf	c:(32235/8),(32235)&7	;volatile
  2153  001494  86BD               	line	381
  2154                           ;main.c: 381:     CCP1M2=1;
  2155                           	bsf	c:(32234/8),(32234)&7	;volatile
  2156  001496  84BD               	line	382
  2157                           ;main.c: 382:     CCP1M1=0;
  2158                           	bcf	c:(32233/8),(32233)&7	;volatile
  2159  001498  92BD               	line	383
  2160                           ;main.c: 383:     CCP1M0=0;
  2161                           	bcf	c:(32232/8),(32232)&7	;volatile
  2162  00149A  90BD               	line	384
  2163                           ;main.c: 384:     CCP2M3=1;
  2164                           	bsf	c:(32211/8),(32211)&7	;volatile
  2165  00149C  86BA               	line	385
  2166                           ;main.c: 385:     CCP2M2=1;
  2167                           	bsf	c:(32210/8),(32210)&7	;volatile
  2168  00149E  84BA               	line	386
  2169                           ;main.c: 386:     CCP2M1=0;
  2170                           	bcf	c:(32209/8),(32209)&7	;volatile
  2171  0014A0  92BA               	line	387
  2172                           ;main.c: 387:     CCP2M0=0;
  2173                           	bcf	c:(32208/8),(32208)&7	;volatile
  2174  0014A2  90BA               	line	388
  2175                           ;main.c: 388:     CCPR1L=0xFF;
  2176                           	setf	((c:4030)),c	;volatile
  2177  0014A4  68BE               	line	389
  2178                           ;main.c: 389:     DC1B1=1;
  2179                           	bsf	c:(32237/8),(32237)&7	;volatile
  2180  0014A6  8ABD               	line	390
  2181                           ;main.c: 390:     DC1B0=1;
  2182                           	bsf	c:(32236/8),(32236)&7	;volatile
  2183  0014A8  88BD               	line	391
  2184                           ;main.c: 391:     CCPR2L=0xFF;
  2185                           	setf	((c:4027)),c	;volatile
  2186  0014AA  68BB               	line	392
  2187                           ;main.c: 392:     DC2B1=1;
  2188                           	bsf	c:(32213/8),(32213)&7	;volatile
  2189  0014AC  8ABA               	line	393
  2190                           ;main.c: 393:     DC2B0=1;
  2191                           	bsf	c:(32212/8),(32212)&7	;volatile
  2192  0014AE  88BA               	line	394
  2193                           ;main.c: 394:     TMR2IF=0;
  2194                           	bcf	c:(31985/8),(31985)&7	;volatile
  2195  0014B0  929E               	line	395
  2196                           ;main.c: 395:     T2CKPS1=1;
  2197                           	bsf	c:(32337/8),(32337)&7	;volatile
  2198  0014B2  82CA               	line	396
  2199                           ;main.c: 396:     T2CKPS0=1;
  2200                           	bsf	c:(32336/8),(32336)&7	;volatile
  2201  0014B4  80CA               	line	397
  2202                           ;main.c: 397:     TMR2ON=1;
  2203                           	bsf	c:(32338/8),(32338)&7	;volatile
  2204  0014B6  84CA               	line	398
  2205                           ;main.c: 398:     while(!TMR2IF);
  2206                           	goto	l236
  2207  0014B8  EF5E  F00A         	
  2208                           l237:
  2209  0014BC                     	
  2210                           l236:
  2211  0014BC                     	btfss	c:(31985/8),(31985)&7	;volatile
  2212  0014BC  A29E               	goto	u1541
  2213  0014BE  EF63  F00A         	goto	u1540
  2214  0014C2  EF65  F00A         u1541:
  2215  0014C6                     	goto	l236
  2216  0014C6  EF5E  F00A         u1540:
  2217  0014CA                     	
  2218                           l238:
  2219  0014CA                     	line	399
  2220                           ;main.c: 399:     TRISCbits.RC2=0;TRISCbits.RC1=0;
  2221                           	bcf	((c:3988)),c,2	;volatile
  2222  0014CA  9494               	bcf	((c:3988)),c,1	;volatile
  2223  0014CC  9294               	line	400
  2224                           	
  2225                           l2206:
  2226  0014CE                     ;main.c: 400:     M_stop();
  2227                           	call	_M_stop	;wreg free
  2228  0014CE  EC93  F00A         	line	401
  2229                           	
  2230                           l239:
  2231  0014D2                     	return	;funcret
  2232  0014D2  0012               	opt stack 0
  2233                           GLOBAL	__end_of_M_init
  2234                           	__end_of_M_init:
  2235  0014D4                     	signat	_M_init,89
  2236                           	global	_M_stop
  2237                           
  2238 ;; *************** function _M_stop *****************
  2239 ;; Defined at:
  2240 ;;		line 447 in file "main.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;		None
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, status,2, status,0
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2254 ;;      Params:         0       0       0       0       0       0       0
  2255 ;;      Locals:         0       0       0       0       0       0       0
  2256 ;;      Temps:          0       0       0       0       0       0       0
  2257 ;;      Totals:         0       0       0       0       0       0       0
  2258 ;;Total ram usage:        0 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    6
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_M_init
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           psect	text3,class=CODE,space=0,reloc=2,group=0
  2268                           	line	447
  2269                           global __ptext3
  2270                           __ptext3:
  2271  001526                     psect	text3
  2272                           	file	"main.c"
  2273                           	line	447
  2274                           	global	__size_of_M_stop
  2275                           	__size_of_M_stop	equ	__end_of_M_stop-_M_stop
  2276  0000                     	
  2277                           _M_stop:
  2278  001526                     ;incstack = 0
  2279                           	opt	stack 23
  2280                           	line	449
  2281                           	
  2282                           l2074:
  2283  001526                     ;main.c: 449:     LATDbits.LD4=0;LATDbits.LD6=0;LATDbits.LD5=0;LATDbits.LD7=0;
  2284                           	bcf	((c:3980)),c,4	;volatile
  2285  001526  988C               	bcf	((c:3980)),c,6	;volatile
  2286  001528  9C8C               	bcf	((c:3980)),c,5	;volatile
  2287  00152A  9A8C               	bcf	((c:3980)),c,7	;volatile
  2288  00152C  9E8C               	line	450
  2289                           	
  2290                           l2076:
  2291  00152E                     ;main.c: 450:     if(CCPR1L!=CCPR2L)
  2292                           	movf	((c:4027)),c,w	;volatile
  2293  00152E  50BB               xorwf	((c:4030)),c,w	;volatile
  2294  001530  18BE               	btfsc	status,2
  2295  001532  B4D8               	goto	u1351
  2296  001534  EF9E  F00A         	goto	u1350
  2297  001538  EFA0  F00A         
  2298                           u1351:
  2299  00153C                     	goto	l259
  2300  00153C  EFB6  F00A         u1350:
  2301  001540                     	line	452
  2302                           	
  2303                           l2078:
  2304  001540                     ;main.c: 451:     {;main.c: 452:         CCPR2L=CCPR1L;
  2305                           	movff	(c:4030),(c:4027)	;volatile
  2306  001540  CFBE FFBB          	line	453
  2307                           ;main.c: 453:         DC2B1=DC1B1;
  2308                           	btfsc	c:(32237/8),(32237)&7	;volatile
  2309  001544  BABD               	goto	u1361
  2310  001546  EFA7  F00A         	goto	u1360
  2311  00154A  EFAA  F00A         u1361:
  2312  00154E                     	bsf	c:(32213/8),(32213)&7	;volatile
  2313  00154E  8ABA               	goto	u1375
  2314  001550  EFAB  F00A         u1360:
  2315  001554                     	bcf	c:(32213/8),(32213)&7	;volatile
  2316  001554  9ABA               u1375:
  2317  001556                     	line	454
  2318                           ;main.c: 454:         DC2B0=DC1B0;
  2319                           	btfsc	c:(32236/8),(32236)&7	;volatile
  2320  001556  B8BD               	goto	u1381
  2321  001558  EFB0  F00A         	goto	u1380
  2322  00155C  EFB3  F00A         u1381:
  2323  001560                     	bsf	c:(32212/8),(32212)&7	;volatile
  2324  001560  88BA               	goto	u1395
  2325  001562  EFB4  F00A         u1380:
  2326  001566                     	bcf	c:(32212/8),(32212)&7	;volatile
  2327  001566  98BA               u1395:
  2328  001568                     	goto	l259
  2329  001568  EFB6  F00A         	line	455
  2330                           ;main.c: 455:     }
  2331                           	
  2332                           l258:
  2333  00156C                     	line	456
  2334                           	
  2335                           l259:
  2336  00156C                     	return	;funcret
  2337  00156C  0012               	opt stack 0
  2338                           GLOBAL	__end_of_M_stop
  2339                           	__end_of_M_stop:
  2340  00156E                     	signat	_M_stop,89
  2341                           	global	_L_init
  2342                           
  2343 ;; *************** function _L_init *****************
  2344 ;; Defined at:
  2345 ;;		line 350 in file "main.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;		None
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		None
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2359 ;;      Params:         0       0       0       0       0       0       0
  2360 ;;      Locals:         0       0       0       0       0       0       0
  2361 ;;      Temps:          0       0       0       0       0       0       0
  2362 ;;      Totals:         0       0       0       0       0       0       0
  2363 ;;Total ram usage:        0 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    6
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_main
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           psect	text4,class=CODE,space=0,reloc=2,group=0
  2373                           	line	350
  2374                           global __ptext4
  2375                           __ptext4:
  2376  00183C                     psect	text4
  2377                           	file	"main.c"
  2378                           	line	350
  2379                           	global	__size_of_L_init
  2380                           	__size_of_L_init	equ	__end_of_L_init-_L_init
  2381  0000                     	
  2382                           _L_init:
  2383  00183C                     ;incstack = 0
  2384                           	opt	stack 24
  2385                           	line	352
  2386                           	
  2387                           l2178:
  2388  00183C                     ;main.c: 352:     TRISCbits.RC3=0;
  2389                           	bcf	((c:3988)),c,3	;volatile
  2390  00183C  9694               	line	353
  2391                           ;main.c: 353:     TRISCbits.RC4=0;
  2392                           	bcf	((c:3988)),c,4	;volatile
  2393  00183E  9894               	line	354
  2394                           ;main.c: 354:     TRISCbits.RC5=0;
  2395                           	bcf	((c:3988)),c,5	;volatile
  2396  001840  9A94               	line	356
  2397                           ;main.c: 355:     return;
  2398                           	
  2399                           l227:
  2400  001842                     	return	;funcret
  2401  001842  0012               	opt stack 0
  2402                           GLOBAL	__end_of_L_init
  2403                           	__end_of_L_init:
  2404  001844                     	signat	_L_init,89
  2405                           	global	_LCD_string_xy
  2406                           
  2407 ;; *************** function _LCD_string_xy *****************
  2408 ;; Defined at:
  2409 ;;		line 262 in file "main.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  row             1    wreg     unsigned char 
  2412 ;;  pos             1    6[BANK0 ] unsigned char 
  2413 ;;  msg             2    7[BANK0 ] PTR const unsigned char 
  2414 ;;		 -> STR_11(5), Rx_ISR@RxMessage(32), STR_7(15), US_print_distance@dist4D(5), 
  2415 ;;		 -> STR_5(13), STR_3(16), STR_1(14), 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  row             1   10[BANK0 ] unsigned char 
  2418 ;;  location        1   11[BANK0 ] unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2428 ;;      Params:         0       3       0       0       0       0       0
  2429 ;;      Locals:         0       2       0       0       0       0       0
  2430 ;;      Temps:          0       1       0       0       0       0       0
  2431 ;;      Totals:         0       6       0       0       0       0       0
  2432 ;;Total ram usage:        6 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    8
  2435 ;; This function calls:
  2436 ;;		_LCD_command
  2437 ;;		_LCD_string
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           psect	text5,class=CODE,space=0,reloc=2,group=0
  2443                           	line	262
  2444                           global __ptext5
  2445                           __ptext5:
  2446  00135E                     psect	text5
  2447                           	file	"main.c"
  2448                           	line	262
  2449                           	global	__size_of_LCD_string_xy
  2450                           	__size_of_LCD_string_xy	equ	__end_of_LCD_string_xy-_LCD_string_xy
  2451  0000                     	
  2452                           _LCD_string_xy:
  2453  00135E                     ;incstack = 0
  2454                           	opt	stack 22
  2455                           ;LCD_string_xy@row stored from wreg
  2456                           	movlb	0	; () banked
  2457  00135E  0100               	movwf	((LCD_string_xy@row))&0ffh
  2458  001360  6FAA               	line	264
  2459                           	
  2460                           l2180:
  2461  001362                     ;main.c: 262: void LCD_string_xy(char row,char pos,const char *msg);main.c: 263: {;main.
                                 c: 264:     char location=0;
  2462                           	movlw	low(0)
  2463  001362  0E00               	movlb	0	; () banked
  2464  001364  0100               	movwf	((LCD_string_xy@location))&0ffh
  2465  001366  6FAB               	line	265
  2466                           	
  2467                           l2182:; BSR set to: 0
  2468  001368                     
  2469                           ;main.c: 265:     if(row<=1)
  2470                           		movlw	02h-0
  2471  001368  0E02               	cpfslt	((LCD_string_xy@row))&0ffh
  2472  00136A  61AA               	goto	u1501
  2473  00136C  EFBA  F009         	goto	u1500
  2474  001370  EFBC  F009         
  2475                           u1501:
  2476  001374                     	goto	l2188
  2477  001374  EFC9  F009         u1500:
  2478  001378                     	line	267
  2479                           	
  2480                           l2184:; BSR set to: 0
  2481  001378                     
  2482                           ;main.c: 266:     {;main.c: 267:         location=((0x80) | ((pos) & 0x0f))-1;
  2483                           	movff	(LCD_string_xy@pos),??_LCD_string_xy+0+0
  2484  001378  C0A6  F0A9         	movlw	0Fh
  2485  00137C  0E0F               	andwf	(??_LCD_string_xy+0+0)&0ffh
  2486  00137E  17A9               	movlw	080h
  2487  001380  0E80               	iorwf	(??_LCD_string_xy+0+0)&0ffh
  2488  001382  13A9               	decf	(??_LCD_string_xy+0+0)&0ffh,w
  2489  001384  05A9               	movwf	((LCD_string_xy@location))&0ffh
  2490  001386  6FAB               	line	268
  2491                           	
  2492                           l2186:; BSR set to: 0
  2493  001388                     
  2494                           ;main.c: 268:         LCD_command(location);
  2495                           	movf	((LCD_string_xy@location))&0ffh,w
  2496  001388  51AB               	
  2497                           	call	_LCD_command
  2498  00138A  EC21  F008         	line	269
  2499                           ;main.c: 269:     }
  2500                           	goto	l2192
  2501  00138E  EFD7  F009         	line	270
  2502                           ;main.c: 270:     else
  2503                           	
  2504                           l204:
  2505  001392                     	line	272
  2506                           	
  2507                           l2188:
  2508  001392                     ;main.c: 271:     {;main.c: 272:         location=((0xC0) | ((pos) & 0x0f))-1;
  2509                           	movff	(LCD_string_xy@pos),??_LCD_string_xy+0+0
  2510  001392  C0A6  F0A9         	movlw	0Fh
  2511  001396  0E0F               	movlb	0	; () banked
  2512  001398  0100               	andwf	(??_LCD_string_xy+0+0)&0ffh
  2513  00139A  17A9               	movlw	0C0h
  2514  00139C  0EC0               	iorwf	(??_LCD_string_xy+0+0)&0ffh
  2515  00139E  13A9               	decf	(??_LCD_string_xy+0+0)&0ffh,w
  2516  0013A0  05A9               	movwf	((LCD_string_xy@location))&0ffh
  2517  0013A2  6FAB               	line	273
  2518                           	
  2519                           l2190:; BSR set to: 0
  2520  0013A4                     
  2521                           ;main.c: 273:         LCD_command(location);
  2522                           	movf	((LCD_string_xy@location))&0ffh,w
  2523  0013A4  51AB               	
  2524                           	call	_LCD_command
  2525  0013A6  EC21  F008         	goto	l2192
  2526  0013AA  EFD7  F009         	line	274
  2527                           ;main.c: 274:     }
  2528                           	
  2529                           l205:
  2530  0013AE                     	line	275
  2531                           	
  2532                           l2192:
  2533  0013AE                     ;main.c: 275:     LCD_string(msg);
  2534                           		movff	(LCD_string_xy@msg),(LCD_string@msg)
  2535  0013AE  C0A7  F0A3         	movff	(LCD_string_xy@msg+1),(LCD_string@msg+1)
  2536  0013B2  C0A8  F0A4         
  2537                           	call	_LCD_string	;wreg free
  2538  0013B6  EC15  F007         	goto	l206
  2539  0013BA  EFDF  F009         	line	276
  2540                           	
  2541                           l2194:
  2542  0013BE                     	line	277
  2543                           ;main.c: 276:     return;
  2544                           	
  2545                           l206:
  2546  0013BE                     	return	;funcret
  2547  0013BE  0012               	opt stack 0
  2548                           GLOBAL	__end_of_LCD_string_xy
  2549                           	__end_of_LCD_string_xy:
  2550  0013C0                     	signat	_LCD_string_xy,12409
  2551                           	global	_LCD_string
  2552                           
  2553 ;; *************** function _LCD_string *****************
  2554 ;; Defined at:
  2555 ;;		line 249 in file "main.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;  msg             2    3[BANK0 ] PTR const unsigned char 
  2558 ;;		 -> STR_11(5), Rx_ISR@RxMessage(32), STR_7(15), US_print_distance@dist4D(5), 
  2559 ;;		 -> STR_5(13), STR_3(16), STR_1(14), 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  i               1    5[BANK0 ] unsigned char 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2571 ;;      Params:         0       2       0       0       0       0       0
  2572 ;;      Locals:         0       1       0       0       0       0       0
  2573 ;;      Temps:          0       0       0       0       0       0       0
  2574 ;;      Totals:         0       3       0       0       0       0       0
  2575 ;;Total ram usage:        3 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    7
  2578 ;; This function calls:
  2579 ;;		_LCD_char
  2580 ;;		_LCD_command
  2581 ;; This function is called by:
  2582 ;;		_LCD_string_xy
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           psect	text6,class=CODE,space=0,reloc=2,group=0
  2586                           	line	249
  2587                           global __ptext6
  2588                           __ptext6:
  2589  000E2A                     psect	text6
  2590                           	file	"main.c"
  2591                           	line	249
  2592                           	global	__size_of_LCD_string
  2593                           	__size_of_LCD_string	equ	__end_of_LCD_string-_LCD_string
  2594  0000                     	
  2595                           _LCD_string:
  2596  000E2A                     ;incstack = 0
  2597                           	opt	stack 22
  2598                           	line	251
  2599                           	
  2600                           l2044:
  2601  000E2A                     ;main.c: 249: void LCD_string(const char *msg);main.c: 250: {;main.c: 251:     unsigned 
                                 char i=0;
  2602                           	movlw	low(0)
  2603  000E2A  0E00               	movlb	0	; () banked
  2604  000E2C  0100               	movwf	((LCD_string@i))&0ffh
  2605  000E2E  6FA5               	line	252
  2606                           ;main.c: 252:     while((*msg)!=0)
  2607                           	goto	l2056
  2608  000E30  EF40  F007         	
  2609                           l198:; BSR set to: 0
  2610  000E34                     
  2611                           	line	254
  2612                           	
  2613                           l2046:
  2614  000E34                     ;main.c: 253:     {;main.c: 254:         LCD_char(*msg);
  2615                           	movff	(LCD_string@msg),tblptrl
  2616  000E34  C0A3  FFF6         	movff	(LCD_string@msg+1),tblptrh
  2617  000E38  C0A4  FFF7         	clrf	tblptru
  2618  000E3C  6AF8               	
  2619                           	movlw	high __ramtop-1
  2620  000E3E  0E05               	cpfsgt	tblptrh
  2621  000E40  64F7               	bra	u1317
  2622  000E42  D003               	tblrd	*
  2623  000E44  0008               	
  2624                           	movf	tablat,w
  2625  000E46  50F5               	bra	u1310
  2626  000E48  D005               u1317:
  2627  000E4A                     	movff	tblptrl,fsr0l
  2628  000E4A  CFF6 FFE9          	movff	tblptrh,fsr0h
  2629  000E4E  CFF7 FFEA          	movf	indf0,w
  2630  000E52  50EF               u1310:
  2631  000E54                     	
  2632                           	call	_LCD_char
  2633  000E54  ECE3  F007         	line	255
  2634                           	
  2635                           l2048:
  2636  000E58                     ;main.c: 255:         msg++;
  2637                           	movlb	0	; () banked
  2638  000E58  0100               	infsnz	((LCD_string@msg))&0ffh
  2639  000E5A  4BA3               	incf	((LCD_string@msg+1))&0ffh
  2640  000E5C  2BA4               	line	256
  2641                           	
  2642                           l2050:; BSR set to: 0
  2643  000E5E                     
  2644                           ;main.c: 256:         i++;
  2645                           	incf	((LCD_string@i))&0ffh
  2646  000E5E  2BA5               	line	257
  2647                           	
  2648                           l2052:; BSR set to: 0
  2649  000E60                     
  2650                           ;main.c: 257:         if(i==16) LCD_command(0xC0);
  2651                           		movlw	16
  2652  000E60  0E10               	xorwf	((LCD_string@i))&0ffh,w
  2653  000E62  19A5               	btfss	status,2
  2654  000E64  A4D8               	goto	u1321
  2655  000E66  EF37  F007         	goto	u1320
  2656  000E6A  EF39  F007         
  2657                           u1321:
  2658  000E6E                     	goto	l2056
  2659  000E6E  EF40  F007         u1320:
  2660  000E72                     	
  2661                           l2054:; BSR set to: 0
  2662  000E72                     
  2663                           	movlw	(0C0h)&0ffh
  2664  000E72  0EC0               	
  2665                           	call	_LCD_command
  2666  000E74  EC21  F008         	goto	l2056
  2667  000E78  EF40  F007         	
  2668                           l199:
  2669  000E7C                     	goto	l2056
  2670  000E7C  EF40  F007         	line	258
  2671                           ;main.c: 258:     }
  2672                           	
  2673                           l197:
  2674  000E80                     	line	252
  2675                           	
  2676                           l2056:
  2677  000E80                     ;main.c: 252:     while((*msg)!=0)
  2678                           	movff	(LCD_string@msg),tblptrl
  2679  000E80  C0A3  FFF6         	movff	(LCD_string@msg+1),tblptrh
  2680  000E84  C0A4  FFF7         	clrf	tblptru
  2681  000E88  6AF8               	
  2682                           	movlw	high __ramtop-1
  2683  000E8A  0E05               	cpfsgt	tblptrh
  2684  000E8C  64F7               	bra	u1337
  2685  000E8E  D003               	tblrd	*
  2686  000E90  0008               	
  2687                           	movf	tablat,w
  2688  000E92  50F5               	bra	u1330
  2689  000E94  D005               u1337:
  2690  000E96                     	movff	tblptrl,fsr0l
  2691  000E96  CFF6 FFE9          	movff	tblptrh,fsr0h
  2692  000E9A  CFF7 FFEA          	movf	indf0,w
  2693  000E9E  50EF               u1330:
  2694  000EA0                     	iorlw	0
  2695  000EA0  0900               	btfss	status,2
  2696  000EA2  A4D8               	goto	u1341
  2697  000EA4  EF56  F007         	goto	u1340
  2698  000EA8  EF58  F007         u1341:
  2699  000EAC                     	goto	l2046
  2700  000EAC  EF1A  F007         u1340:
  2701  000EB0                     	goto	l201
  2702  000EB0  EF5A  F007         	
  2703                           l200:
  2704  000EB4                     	line	260
  2705                           ;main.c: 259:     return;
  2706                           	
  2707                           l201:
  2708  000EB4                     	return	;funcret
  2709  000EB4  0012               	opt stack 0
  2710                           GLOBAL	__end_of_LCD_string
  2711                           	__end_of_LCD_string:
  2712  000EB6                     	signat	_LCD_string,4217
  2713                           	global	_LCD_char
  2714                           
  2715 ;; *************** function _LCD_char *****************
  2716 ;; Defined at:
  2717 ;;		line 228 in file "main.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  dat             1    wreg     unsigned char 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  dat             1    2[BANK0 ] unsigned char 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2731 ;;      Params:         0       0       0       0       0       0       0
  2732 ;;      Locals:         0       1       0       0       0       0       0
  2733 ;;      Temps:          0       2       0       0       0       0       0
  2734 ;;      Totals:         0       3       0       0       0       0       0
  2735 ;;Total ram usage:        3 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    6
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_LCD_string
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           psect	text7,class=CODE,space=0,reloc=2,group=0
  2745                           	line	228
  2746                           global __ptext7
  2747                           __ptext7:
  2748  000FC6                     psect	text7
  2749                           	file	"main.c"
  2750                           	line	228
  2751                           	global	__size_of_LCD_char
  2752                           	__size_of_LCD_char	equ	__end_of_LCD_char-_LCD_char
  2753  0000                     	
  2754                           _LCD_char:
  2755  000FC6                     ;incstack = 0
  2756                           	opt	stack 22
  2757                           ;LCD_char@dat stored from wreg
  2758                           	movlb	0	; () banked
  2759  000FC6  0100               	movwf	((LCD_char@dat))&0ffh
  2760  000FC8  6FA2               	line	230
  2761                           	
  2762                           l1950:
  2763  000FCA                     ;main.c: 228: void LCD_char(unsigned char dat);main.c: 229: {;main.c: 230:     nibble=da
                                 t;
  2764                           	movff	(LCD_char@dat),(c:_nibble)	;volatile
  2765  000FCA  C0A2  F067         	line	231
  2766                           	
  2767                           l1952:
  2768  000FCE                     ;main.c: 231:     LATB = (0xF0 & nibble)>>2;
  2769                           	rrncf	((c:_nibble)),c,w	;volatile
  2770  000FCE  4067               	rrncf	wreg
  2771  000FD0  42E8               	andlw	(0ffh shr 2) & 0ffh
  2772  000FD2  0B3F               	andlw	low(03Ch)
  2773  000FD4  0B3C               	movwf	((c:3978)),c	;volatile
  2774  000FD6  6E8A               	line	232
  2775                           	
  2776                           l1954:
  2777  000FD8                     ;main.c: 232:     LATBbits.LB0 = 1;
  2778                           	bsf	((c:3978)),c,0	;volatile
  2779  000FD8  808A               	line	233
  2780                           	
  2781                           l1956:
  2782  000FDA                     ;main.c: 233:     __nop();
  2783                           	opt	asmopt_push
  2784                           	opt	asmopt_off
  2785                           	nop
  2786  000FDA  F000               	opt	asmopt_pop
  2787                           	line	234
  2788                           	
  2789                           l1958:
  2790  000FDC                     ;main.c: 234:     LATBbits.LB1 = 1;
  2791                           	bsf	((c:3978)),c,1	;volatile
  2792  000FDC  828A               	line	235
  2793                           	
  2794                           l1960:
  2795  000FDE                     ;main.c: 235:     __nop();
  2796                           	opt	asmopt_push
  2797                           	opt	asmopt_off
  2798                           	nop
  2799  000FDE  F000               	opt	asmopt_pop
  2800                           	line	236
  2801                           	
  2802                           l1962:
  2803  000FE0                     ;main.c: 236:     LATBbits.LB1 = 0;
  2804                           	bcf	((c:3978)),c,1	;volatile
  2805  000FE0  928A               	line	237
  2806                           	
  2807                           l1964:
  2808  000FE2                     ;main.c: 237:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2809                           	opt asmopt_push
  2810                           opt asmopt_off
  2811                           movlw	7
  2812  000FE2  0E07               	movlb	0	; () banked
  2813  000FE4  0100               movwf	(??_LCD_char+0+0)&0ffh,f
  2814  000FE6  6FA0               	movlw	125
  2815  000FE8  0E7D               u2247:
  2816  000FEA                     decfsz	wreg,f
  2817  000FEA  2EE8               	bra	u2247
  2818  000FEC  D7FE               	decfsz	(??_LCD_char+0+0)&0ffh,f
  2819  000FEE  2FA0               	bra	u2247
  2820  000FF0  D7FC               opt asmopt_pop
  2821                           
  2822                           	line	238
  2823                           	
  2824                           l1966:
  2825  000FF2                     ;main.c: 238:     nibble=dat;
  2826                           	movff	(LCD_char@dat),(c:_nibble)	;volatile
  2827  000FF2  C0A2  F067         	line	239
  2828                           ;main.c: 239:     LATB = (nibble<<4)>>2;
  2829                           	movf	((c:_nibble)),c,w	;volatile
  2830  000FF6  5067               	movlb	0	; () banked
  2831  000FF8  0100               	movwf	(??_LCD_char+0+0)&0ffh
  2832  000FFA  6FA0               	clrf	(??_LCD_char+0+0+1)&0ffh
  2833  000FFC  6BA1               
  2834                           	swapf	(??_LCD_char+0+0)&0ffh
  2835  000FFE  3BA0               	swapf	(??_LCD_char+0+1)&0ffh
  2836  001000  3BA1               	movlw	0f0h
  2837  001002  0EF0               	andwf	(??_LCD_char+0+1)&0ffh
  2838  001004  17A1               	movf	(??_LCD_char+0+0)&0ffh,w
  2839  001006  51A0               	andlw	0fh
  2840  001008  0B0F               	iorwf	(??_LCD_char+0+1)&0ffh
  2841  00100A  13A1               	movlw	0f0h
  2842  00100C  0EF0               	andwf	(??_LCD_char+0+0)&0ffh
  2843  00100E  17A0               	rlcf	(??_LCD_char+0+1)&0ffh,w
  2844  001010  35A1               	rrcf	(??_LCD_char+0+1)&0ffh
  2845  001012  33A1               	rrcf	(??_LCD_char+0+0)&0ffh
  2846  001014  33A0               	rlcf	(??_LCD_char+0+1)&0ffh,w
  2847  001016  35A1               	rrcf	(??_LCD_char+0+1)&0ffh
  2848  001018  33A1               	rrcf	(??_LCD_char+0+0)&0ffh
  2849  00101A  33A0               	movf	(??_LCD_char+0+0)&0ffh,w
  2850  00101C  51A0               	movwf	((c:3978)),c	;volatile
  2851  00101E  6E8A               	line	240
  2852                           	
  2853                           l1968:; BSR set to: 0
  2854  001020                     
  2855                           ;main.c: 240:     LATBbits.LB0=1;
  2856                           	bsf	((c:3978)),c,0	;volatile
  2857  001020  808A               	line	241
  2858                           	
  2859                           l1970:; BSR set to: 0
  2860  001022                     
  2861                           ;main.c: 241:     __nop();
  2862                           	opt	asmopt_push
  2863                           	opt	asmopt_off
  2864                           	nop
  2865  001022  F000               	opt	asmopt_pop
  2866                           	line	242
  2867                           	
  2868                           l1972:
  2869  001024                     ;main.c: 242:     LATBbits.LB1 = 1;
  2870                           	bsf	((c:3978)),c,1	;volatile
  2871  001024  828A               	line	243
  2872                           	
  2873                           l1974:
  2874  001026                     ;main.c: 243:     __nop();
  2875                           	opt	asmopt_push
  2876                           	opt	asmopt_off
  2877                           	nop
  2878  001026  F000               	opt	asmopt_pop
  2879                           	line	244
  2880                           	
  2881                           l1976:
  2882  001028                     ;main.c: 244:     LATBbits.LB1 = 0;
  2883                           	bcf	((c:3978)),c,1	;volatile
  2884  001028  928A               	line	245
  2885                           	
  2886                           l1978:
  2887  00102A                     ;main.c: 245:     _delay((unsigned long)((2)*(20000000/4000.0)));
  2888                           	opt asmopt_push
  2889                           opt asmopt_off
  2890                           movlw	13
  2891  00102A  0E0D               	movlb	0	; () banked
  2892  00102C  0100               movwf	(??_LCD_char+0+0)&0ffh,f
  2893  00102E  6FA0               	movlw	251
  2894  001030  0EFB               u2257:
  2895  001032                     decfsz	wreg,f
  2896  001032  2EE8               	bra	u2257
  2897  001034  D7FE               	decfsz	(??_LCD_char+0+0)&0ffh,f
  2898  001036  2FA0               	bra	u2257
  2899  001038  D7FC               	nop2
  2900  00103A  D000               opt asmopt_pop
  2901                           
  2902                           	goto	l194
  2903  00103C  EF20  F008         	line	246
  2904                           	
  2905                           l1980:
  2906  001040                     	line	247
  2907                           ;main.c: 246:     return;
  2908                           	
  2909                           l194:
  2910  001040                     	return	;funcret
  2911  001040  0012               	opt stack 0
  2912                           GLOBAL	__end_of_LCD_char
  2913                           	__end_of_LCD_char:
  2914  001042                     	signat	_LCD_char,4217
  2915                           	global	_LCD_init
  2916                           
  2917 ;; *************** function _LCD_init *****************
  2918 ;; Defined at:
  2919 ;;		line 179 in file "main.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;		None
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;		None
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      void 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, status,0, cstack
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2933 ;;      Params:         0       0       0       0       0       0       0
  2934 ;;      Locals:         0       0       0       0       0       0       0
  2935 ;;      Temps:          0       2       0       0       0       0       0
  2936 ;;      Totals:         0       2       0       0       0       0       0
  2937 ;;Total ram usage:        2 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:    7
  2940 ;; This function calls:
  2941 ;;		_LCD_command
  2942 ;;		_LCD_hcommand
  2943 ;; This function is called by:
  2944 ;;		_main
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           psect	text8,class=CODE,space=0,reloc=2,group=0
  2948                           	line	179
  2949                           global __ptext8
  2950                           __ptext8:
  2951  0014D4                     psect	text8
  2952                           	file	"main.c"
  2953                           	line	179
  2954                           	global	__size_of_LCD_init
  2955                           	__size_of_LCD_init	equ	__end_of_LCD_init-_LCD_init
  2956  0000                     	
  2957                           _LCD_init:
  2958  0014D4                     ;incstack = 0
  2959                           	opt	stack 23
  2960                           	line	181
  2961                           	
  2962                           l2158:
  2963  0014D4                     ;main.c: 181:     LATB=0x00;
  2964                           	movlw	low(0)
  2965  0014D4  0E00               	movwf	((c:3978)),c	;volatile
  2966  0014D6  6E8A               	line	182
  2967                           ;main.c: 182:     TRISB=0x00;
  2968                           	movlw	low(0)
  2969  0014D8  0E00               	movwf	((c:3987)),c	;volatile
  2970  0014DA  6E93               	line	183
  2971                           	
  2972                           l2160:
  2973  0014DC                     ;main.c: 183:     _delay((unsigned long)((50)*(20000000/4000.0)));
  2974                           	opt asmopt_push
  2975                           opt asmopt_off
  2976                           movlw  2
  2977  0014DC  0E02               	movlb	0	; () banked
  2978  0014DE  0100               movwf	(??_LCD_init+0+0+1)&0ffh,f
  2979  0014E0  6FA4               movlw	69
  2980  0014E2  0E45               movwf	(??_LCD_init+0+0)&0ffh,f
  2981  0014E4  6FA3               	movlw	169
  2982  0014E6  0EA9               u2267:
  2983  0014E8                     decfsz	wreg,f
  2984  0014E8  2EE8               	bra	u2267
  2985  0014EA  D7FE               	decfsz	(??_LCD_init+0+0)&0ffh,f
  2986  0014EC  2FA3               	bra	u2267
  2987  0014EE  D7FC               	decfsz	(??_LCD_init+0+0+1)&0ffh,f
  2988  0014F0  2FA4               	bra	u2267
  2989  0014F2  D7FA               	nop2
  2990  0014F4  D000               opt asmopt_pop
  2991                           
  2992                           	line	184
  2993                           	
  2994                           l2162:
  2995  0014F6                     ;main.c: 184:     LCD_hcommand(0x30);
  2996                           	movlw	(030h)&0ffh
  2997  0014F6  0E30               	
  2998                           	call	_LCD_hcommand
  2999  0014F8  EC9D  F00B         	line	185
  3000                           	
  3001                           l2164:
  3002  0014FC                     ;main.c: 185:     LCD_command(0x28);
  3003                           	movlw	(028h)&0ffh
  3004  0014FC  0E28               	
  3005                           	call	_LCD_command
  3006  0014FE  EC21  F008         	line	186
  3007                           	
  3008                           l2166:
  3009  001502                     ;main.c: 186:     LCD_command(0x28);
  3010                           	movlw	(028h)&0ffh
  3011  001502  0E28               	
  3012                           	call	_LCD_command
  3013  001504  EC21  F008         	line	187
  3014                           	
  3015                           l2168:
  3016  001508                     ;main.c: 187:     LCD_command(0x0C);
  3017                           	movlw	(0Ch)&0ffh
  3018  001508  0E0C               	
  3019                           	call	_LCD_command
  3020  00150A  EC21  F008         	line	188
  3021                           	
  3022                           l2170:
  3023  00150E                     ;main.c: 188:     LCD_command(0x01);
  3024                           	movlw	(01h)&0ffh
  3025  00150E  0E01               	
  3026                           	call	_LCD_command
  3027  001510  EC21  F008         	line	189
  3028                           	
  3029                           l2172:
  3030  001514                     ;main.c: 189:     LCD_command(0x06);
  3031                           	movlw	(06h)&0ffh
  3032  001514  0E06               	
  3033                           	call	_LCD_command
  3034  001516  EC21  F008         	line	190
  3035                           	
  3036                           l2174:
  3037  00151A                     ;main.c: 190:     LCD_command(0x02);
  3038                           	movlw	(02h)&0ffh
  3039  00151A  0E02               	
  3040                           	call	_LCD_command
  3041  00151C  EC21  F008         	goto	l185
  3042  001520  EF92  F00A         	line	191
  3043                           	
  3044                           l2176:
  3045  001524                     	line	192
  3046                           ;main.c: 191:     return;
  3047                           	
  3048                           l185:
  3049  001524                     	return	;funcret
  3050  001524  0012               	opt stack 0
  3051                           GLOBAL	__end_of_LCD_init
  3052                           	__end_of_LCD_init:
  3053  001526                     	signat	_LCD_init,89
  3054                           	global	_LCD_hcommand
  3055                           
  3056 ;; *************** function _LCD_hcommand *****************
  3057 ;; Defined at:
  3058 ;;		line 194 in file "main.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;  cmd             1    wreg     unsigned char 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;  cmd             1    1[BANK0 ] unsigned char 
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  1    wreg      void 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2, status,0
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3072 ;;      Params:         0       0       0       0       0       0       0
  3073 ;;      Locals:         0       1       0       0       0       0       0
  3074 ;;      Temps:          0       1       0       0       0       0       0
  3075 ;;      Totals:         0       2       0       0       0       0       0
  3076 ;;Total ram usage:        2 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:    6
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		_LCD_init
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           psect	text9,class=CODE,space=0,reloc=2,group=0
  3086                           	line	194
  3087                           global __ptext9
  3088                           __ptext9:
  3089  00173A                     psect	text9
  3090                           	file	"main.c"
  3091                           	line	194
  3092                           	global	__size_of_LCD_hcommand
  3093                           	__size_of_LCD_hcommand	equ	__end_of_LCD_hcommand-_LCD_hcommand
  3094  0000                     	
  3095                           _LCD_hcommand:
  3096  00173A                     ;incstack = 0
  3097                           	opt	stack 23
  3098                           ;LCD_hcommand@cmd stored from wreg
  3099                           	movlb	0	; () banked
  3100  00173A  0100               	movwf	((LCD_hcommand@cmd))&0ffh
  3101  00173C  6FA1               	line	196
  3102                           	
  3103                           l2026:
  3104  00173E                     ;main.c: 194: void LCD_hcommand(unsigned char cmd );main.c: 195: {;main.c: 196:     nibb
                                 le=cmd;
  3105                           	movff	(LCD_hcommand@cmd),(c:_nibble)	;volatile
  3106  00173E  C0A1  F067         	line	197
  3107                           	
  3108                           l2028:
  3109  001742                     ;main.c: 197:     LATB = (0xF0 & nibble)>>2;
  3110                           	rrncf	((c:_nibble)),c,w	;volatile
  3111  001742  4067               	rrncf	wreg
  3112  001744  42E8               	andlw	(0ffh shr 2) & 0ffh
  3113  001746  0B3F               	andlw	low(03Ch)
  3114  001748  0B3C               	movwf	((c:3978)),c	;volatile
  3115  00174A  6E8A               	line	198
  3116                           	
  3117                           l2030:
  3118  00174C                     ;main.c: 198:     LATBbits.LB0 = 0;
  3119                           	bcf	((c:3978)),c,0	;volatile
  3120  00174C  908A               	line	199
  3121                           	
  3122                           l2032:
  3123  00174E                     ;main.c: 199:     __nop();
  3124                           	opt	asmopt_push
  3125                           	opt	asmopt_off
  3126                           	nop
  3127  00174E  F000               	opt	asmopt_pop
  3128                           	line	200
  3129                           	
  3130                           l2034:
  3131  001750                     ;main.c: 200:     LATBbits.LB1 = 1;
  3132                           	bsf	((c:3978)),c,1	;volatile
  3133  001750  828A               	line	201
  3134                           	
  3135                           l2036:
  3136  001752                     ;main.c: 201:     __nop();
  3137                           	opt	asmopt_push
  3138                           	opt	asmopt_off
  3139                           	nop
  3140  001752  F000               	opt	asmopt_pop
  3141                           	line	202
  3142                           	
  3143                           l2038:
  3144  001754                     ;main.c: 202:     LATBbits.LB1 = 0;
  3145                           	bcf	((c:3978)),c,1	;volatile
  3146  001754  928A               	line	203
  3147                           	
  3148                           l2040:
  3149  001756                     ;main.c: 203:     _delay((unsigned long)((3)*(20000000/4000.0)));
  3150                           	opt asmopt_push
  3151                           opt asmopt_off
  3152                           movlw	20
  3153  001756  0E14               	movlb	0	; () banked
  3154  001758  0100               movwf	(??_LCD_hcommand+0+0)&0ffh,f
  3155  00175A  6FA0               	movlw	121
  3156  00175C  0E79               u2277:
  3157  00175E                     decfsz	wreg,f
  3158  00175E  2EE8               	bra	u2277
  3159  001760  D7FE               	decfsz	(??_LCD_hcommand+0+0)&0ffh,f
  3160  001762  2FA0               	bra	u2277
  3161  001764  D7FC               	nop2
  3162  001766  D000               opt asmopt_pop
  3163                           
  3164                           	goto	l188
  3165  001768  EFB6  F00B         	line	204
  3166                           	
  3167                           l2042:
  3168  00176C                     	line	205
  3169                           ;main.c: 204:     return;
  3170                           	
  3171                           l188:
  3172  00176C                     	return	;funcret
  3173  00176C  0012               	opt stack 0
  3174                           GLOBAL	__end_of_LCD_hcommand
  3175                           	__end_of_LCD_hcommand:
  3176  00176E                     	signat	_LCD_hcommand,4217
  3177                           	global	_LCD_command
  3178                           
  3179 ;; *************** function _LCD_command *****************
  3180 ;; Defined at:
  3181 ;;		line 207 in file "main.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  cmd             1    wreg     unsigned char 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  cmd             1    2[BANK0 ] unsigned char 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3195 ;;      Params:         0       0       0       0       0       0       0
  3196 ;;      Locals:         0       1       0       0       0       0       0
  3197 ;;      Temps:          0       2       0       0       0       0       0
  3198 ;;      Totals:         0       3       0       0       0       0       0
  3199 ;;Total ram usage:        3 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; Hardware stack levels required when called:    6
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_main
  3206 ;;		_LCD_init
  3207 ;;		_LCD_string
  3208 ;;		_LCD_string_xy
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           psect	text10,class=CODE,space=0,reloc=2,group=0
  3212                           	line	207
  3213                           global __ptext10
  3214                           __ptext10:
  3215  001042                     psect	text10
  3216                           	file	"main.c"
  3217                           	line	207
  3218                           	global	__size_of_LCD_command
  3219                           	__size_of_LCD_command	equ	__end_of_LCD_command-_LCD_command
  3220  0000                     	
  3221                           _LCD_command:
  3222  001042                     ;incstack = 0
  3223                           	opt	stack 22
  3224                           ;LCD_command@cmd stored from wreg
  3225                           	movlb	0	; () banked
  3226  001042  0100               	movwf	((LCD_command@cmd))&0ffh
  3227  001044  6FA2               	line	209
  3228                           	
  3229                           l1918:
  3230  001046                     ;main.c: 207: void LCD_command(unsigned char cmd );main.c: 208: {;main.c: 209:     nibbl
                                 e=cmd;
  3231                           	movff	(LCD_command@cmd),(c:_nibble)	;volatile
  3232  001046  C0A2  F067         	line	210
  3233                           	
  3234                           l1920:
  3235  00104A                     ;main.c: 210:     LATB = (0xF0 & nibble)>>2;
  3236                           	rrncf	((c:_nibble)),c,w	;volatile
  3237  00104A  4067               	rrncf	wreg
  3238  00104C  42E8               	andlw	(0ffh shr 2) & 0ffh
  3239  00104E  0B3F               	andlw	low(03Ch)
  3240  001050  0B3C               	movwf	((c:3978)),c	;volatile
  3241  001052  6E8A               	line	211
  3242                           	
  3243                           l1922:
  3244  001054                     ;main.c: 211:     LATBbits.LB0 = 0;
  3245                           	bcf	((c:3978)),c,0	;volatile
  3246  001054  908A               	line	212
  3247                           	
  3248                           l1924:
  3249  001056                     ;main.c: 212:     __nop();
  3250                           	opt	asmopt_push
  3251                           	opt	asmopt_off
  3252                           	nop
  3253  001056  F000               	opt	asmopt_pop
  3254                           	line	213
  3255                           	
  3256                           l1926:
  3257  001058                     ;main.c: 213:     LATBbits.LB1 = 1;
  3258                           	bsf	((c:3978)),c,1	;volatile
  3259  001058  828A               	line	214
  3260                           	
  3261                           l1928:
  3262  00105A                     ;main.c: 214:     __nop();
  3263                           	opt	asmopt_push
  3264                           	opt	asmopt_off
  3265                           	nop
  3266  00105A  F000               	opt	asmopt_pop
  3267                           	line	215
  3268                           	
  3269                           l1930:
  3270  00105C                     ;main.c: 215:     LATBbits.LB1 = 0;
  3271                           	bcf	((c:3978)),c,1	;volatile
  3272  00105C  928A               	line	216
  3273                           	
  3274                           l1932:
  3275  00105E                     ;main.c: 216:     _delay((unsigned long)((1)*(20000000/4000.0)));
  3276                           	opt asmopt_push
  3277                           opt asmopt_off
  3278                           movlw	7
  3279  00105E  0E07               	movlb	0	; () banked
  3280  001060  0100               movwf	(??_LCD_command+0+0)&0ffh,f
  3281  001062  6FA0               	movlw	125
  3282  001064  0E7D               u2287:
  3283  001066                     decfsz	wreg,f
  3284  001066  2EE8               	bra	u2287
  3285  001068  D7FE               	decfsz	(??_LCD_command+0+0)&0ffh,f
  3286  00106A  2FA0               	bra	u2287
  3287  00106C  D7FC               opt asmopt_pop
  3288                           
  3289                           	line	217
  3290                           	
  3291                           l1934:
  3292  00106E                     ;main.c: 217:     nibble=cmd;
  3293                           	movff	(LCD_command@cmd),(c:_nibble)	;volatile
  3294  00106E  C0A2  F067         	line	218
  3295                           ;main.c: 218:     LATB = (nibble<<4)>>2;
  3296                           	movf	((c:_nibble)),c,w	;volatile
  3297  001072  5067               	movlb	0	; () banked
  3298  001074  0100               	movwf	(??_LCD_command+0+0)&0ffh
  3299  001076  6FA0               	clrf	(??_LCD_command+0+0+1)&0ffh
  3300  001078  6BA1               
  3301                           	swapf	(??_LCD_command+0+0)&0ffh
  3302  00107A  3BA0               	swapf	(??_LCD_command+0+1)&0ffh
  3303  00107C  3BA1               	movlw	0f0h
  3304  00107E  0EF0               	andwf	(??_LCD_command+0+1)&0ffh
  3305  001080  17A1               	movf	(??_LCD_command+0+0)&0ffh,w
  3306  001082  51A0               	andlw	0fh
  3307  001084  0B0F               	iorwf	(??_LCD_command+0+1)&0ffh
  3308  001086  13A1               	movlw	0f0h
  3309  001088  0EF0               	andwf	(??_LCD_command+0+0)&0ffh
  3310  00108A  17A0               	rlcf	(??_LCD_command+0+1)&0ffh,w
  3311  00108C  35A1               	rrcf	(??_LCD_command+0+1)&0ffh
  3312  00108E  33A1               	rrcf	(??_LCD_command+0+0)&0ffh
  3313  001090  33A0               	rlcf	(??_LCD_command+0+1)&0ffh,w
  3314  001092  35A1               	rrcf	(??_LCD_command+0+1)&0ffh
  3315  001094  33A1               	rrcf	(??_LCD_command+0+0)&0ffh
  3316  001096  33A0               	movf	(??_LCD_command+0+0)&0ffh,w
  3317  001098  51A0               	movwf	((c:3978)),c	;volatile
  3318  00109A  6E8A               	line	219
  3319                           	
  3320                           l1936:; BSR set to: 0
  3321  00109C                     
  3322                           ;main.c: 219:     LATBbits.LB0=0;
  3323                           	bcf	((c:3978)),c,0	;volatile
  3324  00109C  908A               	line	220
  3325                           	
  3326                           l1938:; BSR set to: 0
  3327  00109E                     
  3328                           ;main.c: 220:     __nop();
  3329                           	opt	asmopt_push
  3330                           	opt	asmopt_off
  3331                           	nop
  3332  00109E  F000               	opt	asmopt_pop
  3333                           	line	221
  3334                           	
  3335                           l1940:
  3336  0010A0                     ;main.c: 221:     LATBbits.LB1 = 1;
  3337                           	bsf	((c:3978)),c,1	;volatile
  3338  0010A0  828A               	line	222
  3339                           	
  3340                           l1942:
  3341  0010A2                     ;main.c: 222:     __nop();
  3342                           	opt	asmopt_push
  3343                           	opt	asmopt_off
  3344                           	nop
  3345  0010A2  F000               	opt	asmopt_pop
  3346                           	line	223
  3347                           	
  3348                           l1944:
  3349  0010A4                     ;main.c: 223:     LATBbits.LB1 = 0;
  3350                           	bcf	((c:3978)),c,1	;volatile
  3351  0010A4  928A               	line	224
  3352                           	
  3353                           l1946:
  3354  0010A6                     ;main.c: 224:     _delay((unsigned long)((3)*(20000000/4000.0)));
  3355                           	opt asmopt_push
  3356                           opt asmopt_off
  3357                           movlw	20
  3358  0010A6  0E14               	movlb	0	; () banked
  3359  0010A8  0100               movwf	(??_LCD_command+0+0)&0ffh,f
  3360  0010AA  6FA0               	movlw	121
  3361  0010AC  0E79               u2297:
  3362  0010AE                     decfsz	wreg,f
  3363  0010AE  2EE8               	bra	u2297
  3364  0010B0  D7FE               	decfsz	(??_LCD_command+0+0)&0ffh,f
  3365  0010B2  2FA0               	bra	u2297
  3366  0010B4  D7FC               	nop2
  3367  0010B6  D000               opt asmopt_pop
  3368                           
  3369                           	goto	l191
  3370  0010B8  EF5E  F008         	line	225
  3371                           	
  3372                           l1948:
  3373  0010BC                     	line	226
  3374                           ;main.c: 225:     return;
  3375                           	
  3376                           l191:
  3377  0010BC                     	return	;funcret
  3378  0010BC  0012               	opt stack 0
  3379                           GLOBAL	__end_of_LCD_command
  3380                           	__end_of_LCD_command:
  3381  0010BE                     	signat	_LCD_command,4217
  3382                           	global	_BT_tx_string
  3383                           
  3384 ;; *************** function _BT_tx_string *****************
  3385 ;; Defined at:
  3386 ;;		line 517 in file "main.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  msg             2    1[BANK0 ] PTR const unsigned char 
  3389 ;;		 -> STR_16(16), STR_15(27), STR_14(73), STR_13(39), 
  3390 ;;		 -> STR_12(8), STR_10(17), STR_9(9), Rx_ISR@DuCyT(5), 
  3391 ;;		 -> STR_8(15), US_print_distance@dist4D(5), STR_6(14), STR_4(17), 
  3392 ;;		 -> STR_2(15), 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;		None
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1    wreg      void 
  3397 ;; Registers used:
  3398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3404 ;;      Params:         0       2       0       0       0       0       0
  3405 ;;      Locals:         0       0       0       0       0       0       0
  3406 ;;      Temps:          0       0       0       0       0       0       0
  3407 ;;      Totals:         0       2       0       0       0       0       0
  3408 ;;Total ram usage:        2 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:    7
  3411 ;; This function calls:
  3412 ;;		_BT_tx_char
  3413 ;; This function is called by:
  3414 ;;		_main
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           psect	text11,class=CODE,space=0,reloc=2,group=0
  3418                           	line	517
  3419                           global __ptext11
  3420                           __ptext11:
  3421  001290                     psect	text11
  3422                           	file	"main.c"
  3423                           	line	517
  3424                           	global	__size_of_BT_tx_string
  3425                           	__size_of_BT_tx_string	equ	__end_of_BT_tx_string-_BT_tx_string
  3426  0000                     	
  3427                           _BT_tx_string:
  3428  001290                     ;incstack = 0
  3429                           	opt	stack 23
  3430                           	line	519
  3431                           	
  3432                           l2196:
  3433  001290                     ;main.c: 517: void BT_tx_string(const unsigned char *msg);main.c: 518: {;main.c: 519:   
                                   while((*msg)!=0)
  3434                           	goto	l2202
  3435  001290  EF61  F009         	
  3436                           l283:
  3437  001294                     	line	521
  3438                           	
  3439                           l2198:
  3440  001294                     ;main.c: 520:     {;main.c: 521:         BT_tx_char(*msg);
  3441                           	movff	(BT_tx_string@msg),tblptrl
  3442  001294  C0A1  FFF6         	movff	(BT_tx_string@msg+1),tblptrh
  3443  001298  C0A2  FFF7         	clrf	tblptru
  3444  00129C  6AF8               	
  3445                           	movlw	high __ramtop-1
  3446  00129E  0E05               	cpfsgt	tblptrh
  3447  0012A0  64F7               	bra	u1517
  3448  0012A2  D003               	tblrd	*
  3449  0012A4  0008               	
  3450                           	movf	tablat,w
  3451  0012A6  50F5               	bra	u1510
  3452  0012A8  D005               u1517:
  3453  0012AA                     	movff	tblptrl,fsr0l
  3454  0012AA  CFF6 FFE9          	movff	tblptrh,fsr0h
  3455  0012AE  CFF7 FFEA          	movf	indf0,w
  3456  0012B2  50EF               u1510:
  3457  0012B4                     	
  3458                           	call	_BT_tx_char
  3459  0012B4  ECF9  F00B         	line	522
  3460                           	
  3461                           l2200:
  3462  0012B8                     ;main.c: 522:  msg++;
  3463                           	movlb	0	; () banked
  3464  0012B8  0100               	infsnz	((BT_tx_string@msg))&0ffh
  3465  0012BA  4BA1               	incf	((BT_tx_string@msg+1))&0ffh
  3466  0012BC  2BA2               	goto	l2202
  3467  0012BE  EF61  F009         	line	523
  3468                           ;main.c: 523:     }
  3469                           	
  3470                           l282:; BSR set to: 0
  3471  0012C2                     
  3472                           	line	519
  3473                           	
  3474                           l2202:
  3475  0012C2                     ;main.c: 519:     while((*msg)!=0)
  3476                           	movff	(BT_tx_string@msg),tblptrl
  3477  0012C2  C0A1  FFF6         	movff	(BT_tx_string@msg+1),tblptrh
  3478  0012C6  C0A2  FFF7         	clrf	tblptru
  3479  0012CA  6AF8               	
  3480                           	movlw	high __ramtop-1
  3481  0012CC  0E05               	cpfsgt	tblptrh
  3482  0012CE  64F7               	bra	u1527
  3483  0012D0  D003               	tblrd	*
  3484  0012D2  0008               	
  3485                           	movf	tablat,w
  3486  0012D4  50F5               	bra	u1520
  3487  0012D6  D005               u1527:
  3488  0012D8                     	movff	tblptrl,fsr0l
  3489  0012D8  CFF6 FFE9          	movff	tblptrh,fsr0h
  3490  0012DC  CFF7 FFEA          	movf	indf0,w
  3491  0012E0  50EF               u1520:
  3492  0012E2                     	iorlw	0
  3493  0012E2  0900               	btfss	status,2
  3494  0012E4  A4D8               	goto	u1531
  3495  0012E6  EF77  F009         	goto	u1530
  3496  0012EA  EF79  F009         u1531:
  3497  0012EE                     	goto	l2198
  3498  0012EE  EF4A  F009         u1530:
  3499  0012F2                     	goto	l285
  3500  0012F2  EF7B  F009         	
  3501                           l284:
  3502  0012F6                     	line	525
  3503                           ;main.c: 524:     return;
  3504                           	
  3505                           l285:
  3506  0012F6                     	return	;funcret
  3507  0012F6  0012               	opt stack 0
  3508                           GLOBAL	__end_of_BT_tx_string
  3509                           	__end_of_BT_tx_string:
  3510  0012F8                     	signat	_BT_tx_string,4217
  3511                           	global	_BT_tx_char
  3512                           
  3513 ;; *************** function _BT_tx_char *****************
  3514 ;; Defined at:
  3515 ;;		line 511 in file "main.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  Tx              1    wreg     unsigned char 
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;  Tx              1    0[BANK0 ] unsigned char 
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      void 
  3522 ;; Registers used:
  3523 ;;		wreg
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3529 ;;      Params:         0       0       0       0       0       0       0
  3530 ;;      Locals:         0       1       0       0       0       0       0
  3531 ;;      Temps:          0       0       0       0       0       0       0
  3532 ;;      Totals:         0       1       0       0       0       0       0
  3533 ;;Total ram usage:        1 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; Hardware stack levels required when called:    6
  3536 ;; This function calls:
  3537 ;;		Nothing
  3538 ;; This function is called by:
  3539 ;;		_main
  3540 ;;		_BT_tx_string
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           psect	text12,class=CODE,space=0,reloc=2,group=0
  3544                           	line	511
  3545                           global __ptext12
  3546                           __ptext12:
  3547  0017F2                     psect	text12
  3548                           	file	"main.c"
  3549                           	line	511
  3550                           	global	__size_of_BT_tx_char
  3551                           	__size_of_BT_tx_char	equ	__end_of_BT_tx_char-_BT_tx_char
  3552  0000                     	
  3553                           _BT_tx_char:
  3554  0017F2                     ;incstack = 0
  3555                           	opt	stack 23
  3556                           ;BT_tx_char@Tx stored from wreg
  3557                           	movlb	0	; () banked
  3558  0017F2  0100               	movwf	((BT_tx_char@Tx))&0ffh
  3559  0017F4  6FA0               	line	513
  3560                           	
  3561                           l2022:
  3562  0017F6                     ;main.c: 511: void BT_tx_char(unsigned char Tx);main.c: 512: {;main.c: 513:     while(!T
                                 XIF);
  3563                           	goto	l276
  3564  0017F6  EFFD  F00B         	
  3565                           l277:
  3566  0017FA                     	
  3567                           l276:
  3568  0017FA                     	btfss	c:(31988/8),(31988)&7	;volatile
  3569  0017FA  A89E               	goto	u1301
  3570  0017FC  EF02  F00C         	goto	u1300
  3571  001800  EF04  F00C         u1301:
  3572  001804                     	goto	l276
  3573  001804  EFFD  F00B         u1300:
  3574  001808                     	goto	l2024
  3575  001808  EF06  F00C         	
  3576                           l278:
  3577  00180C                     	line	514
  3578                           	
  3579                           l2024:
  3580  00180C                     ;main.c: 514:     TXREG=Tx;
  3581                           	movff	(BT_tx_char@Tx),(c:4013)	;volatile
  3582  00180C  C0A0  FFAD         	line	515
  3583                           	
  3584                           l279:
  3585  001810                     	return	;funcret
  3586  001810  0012               	opt stack 0
  3587                           GLOBAL	__end_of_BT_tx_char
  3588                           	__end_of_BT_tx_char:
  3589  001812                     	signat	_BT_tx_char,4217
  3590                           	global	_BT_init
  3591                           
  3592 ;; *************** function _BT_init *****************
  3593 ;; Defined at:
  3594 ;;		line 485 in file "main.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;		None
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;		None
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg, status,2
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3608 ;;      Params:         0       0       0       0       0       0       0
  3609 ;;      Locals:         0       0       0       0       0       0       0
  3610 ;;      Temps:          0       0       0       0       0       0       0
  3611 ;;      Totals:         0       0       0       0       0       0       0
  3612 ;;Total ram usage:        0 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; Hardware stack levels required when called:    6
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_main
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           psect	text13,class=CODE,space=0,reloc=2,group=0
  3622                           	line	485
  3623                           global __ptext13
  3624                           __ptext13:
  3625  0017CA                     psect	text13
  3626                           	file	"main.c"
  3627                           	line	485
  3628                           	global	__size_of_BT_init
  3629                           	__size_of_BT_init	equ	__end_of_BT_init-_BT_init
  3630  0000                     	
  3631                           _BT_init:
  3632  0017CA                     ;incstack = 0
  3633                           	opt	stack 24
  3634                           	line	487
  3635                           	
  3636                           l2148:
  3637  0017CA                     ;main.c: 487:     TRISCbits.RC6=0;
  3638                           	bcf	((c:3988)),c,6	;volatile
  3639  0017CA  9C94               	line	488
  3640                           ;main.c: 488:     TRISCbits.RC7=1;
  3641                           	bsf	((c:3988)),c,7	;volatile
  3642  0017CC  8E94               	line	490
  3643                           ;main.c: 490:     TX9=0;
  3644                           	bcf	c:(32102/8),(32102)&7	;volatile
  3645  0017CE  9CAC               	line	491
  3646                           ;main.c: 491:     TXEN=1;
  3647                           	bsf	c:(32101/8),(32101)&7	;volatile
  3648  0017D0  8AAC               	line	492
  3649                           ;main.c: 492:     SYNC=0;
  3650                           	bcf	c:(32100/8),(32100)&7	;volatile
  3651  0017D2  98AC               	line	493
  3652                           ;main.c: 493:     SENDB=0;
  3653                           	bcf	c:(32099/8),(32099)&7	;volatile
  3654  0017D4  96AC               	line	494
  3655                           ;main.c: 494:     BRGH=1;
  3656                           	bsf	c:(32098/8),(32098)&7	;volatile
  3657  0017D6  84AC               	line	496
  3658                           ;main.c: 496:     SPEN=1;
  3659                           	bsf	c:(32095/8),(32095)&7	;volatile
  3660  0017D8  8EAB               	line	497
  3661                           ;main.c: 497:     RX9=0;
  3662                           	bcf	c:(32094/8),(32094)&7	;volatile
  3663  0017DA  9CAB               	line	498
  3664                           ;main.c: 498:     CREN=1;
  3665                           	bsf	c:(32092/8),(32092)&7	;volatile
  3666  0017DC  88AB               	line	499
  3667                           ;main.c: 499:     ADDEN=1;
  3668                           	bsf	c:(32091/8),(32091)&7	;volatile
  3669  0017DE  86AB               	line	501
  3670                           ;main.c: 501:     BRG16=0;
  3671                           	bcf	c:(32195/8),(32195)&7	;volatile
  3672  0017E0  96B8               	line	502
  3673                           ;main.c: 502:     WUE=0;
  3674                           	bcf	c:(32193/8),(32193)&7	;volatile
  3675  0017E2  92B8               	line	503
  3676                           ;main.c: 503:     ABDEN=0;
  3677                           	bcf	c:(32192/8),(32192)&7	;volatile
  3678  0017E4  90B8               	line	505
  3679                           	
  3680                           l2150:
  3681  0017E6                     ;main.c: 505:     SPBRG=130;
  3682                           	movlw	low(082h)
  3683  0017E6  0E82               	movwf	((c:4015)),c	;volatile
  3684  0017E8  6EAF               	line	506
  3685                           	
  3686                           l2152:
  3687  0017EA                     ;main.c: 506:     PEIE=1;
  3688                           	bsf	c:(32662/8),(32662)&7	;volatile
  3689  0017EA  8CF2               	line	507
  3690                           	
  3691                           l2154:
  3692  0017EC                     ;main.c: 507:     RCIE=1;
  3693                           	bsf	c:(31981/8),(31981)&7	;volatile
  3694  0017EC  8A9D               	line	508
  3695                           	
  3696                           l2156:
  3697  0017EE                     ;main.c: 508:     GIE=1;
  3698                           	bsf	c:(32663/8),(32663)&7	;volatile
  3699  0017EE  8EF2               	line	509
  3700                           	
  3701                           l273:
  3702  0017F0                     	return	;funcret
  3703  0017F0  0012               	opt stack 0
  3704                           GLOBAL	__end_of_BT_init
  3705                           	__end_of_BT_init:
  3706  0017F2                     	signat	_BT_init,89
  3707                           	global	_Rx_ISR
  3708                           
  3709 ;; *************** function _Rx_ISR *****************
  3710 ;; Defined at:
  3711 ;;		line 551 in file "main.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;		None
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;  RxMessage      32   53[COMRAM] unsigned char [32]
  3716 ;;  DuCyT           5   85[COMRAM] unsigned char [5]
  3717 ;;  DuCy            4   91[COMRAM] unsigned long 
  3718 ;;  motor           1   90[COMRAM] unsigned char 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack

  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3728 ;;      Params:         0       0       0       0       0       0       0
  3729 ;;      Locals:        42       0       0       0       0       0       0
  3730 ;;      Temps:         17       0       0       0       0       0       0
  3731 ;;      Totals:        59       0       0       0       0       0       0
  3732 ;;Total ram usage:       59 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:    5
  3735 ;; This function calls:
  3736 ;;		_BT_rx_string
  3737 ;;		_LCD_clear
  3738 ;;		_L_turn_off
  3739 ;;		_L_turn_on
  3740 ;;		_M_anticlockwise_direction
  3741 ;;		_M_backward_direction
  3742 ;;		_M_clockwise_direction
  3743 ;;		_M_foward_direction
  3744 ;;		_M_set_DC
  3745 ;;		_US_send_pulse
  3746 ;;		___lldiv
  3747 ;;		___lmul
  3748 ;;		_atoi4D
  3749 ;;		_itoa4D
  3750 ;;		i1_BT_tx_string
  3751 ;;		i1_LCD_string_xy
  3752 ;;		i1_M_stop
  3753 ;; This function is called by:
  3754 ;;		Interrupt level 1
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           psect	intcodelo,class=CODE,space=0,reloc=2
  3758                           global __pintcodelo
  3759                           __pintcodelo:
  3760  000018                     psect	intcodelo
  3761                           	file	"main.c"
  3762                           	line	551
  3763                           	global	__size_of_Rx_ISR
  3764                           	__size_of_Rx_ISR	equ	__end_of_Rx_ISR-_Rx_ISR
  3765  0000                     	
  3766                           _Rx_ISR:
  3767  000018                     ;incstack = 0
  3768                           	opt	stack 22
  3769                           	bsf int$flags,0,c ;set compiler interrupt flag (level 1)
  3770  000018  806A               	movff	status+0,??_Rx_ISR+2
  3771  00001A  CFD8 F027          	movff	wreg+0,??_Rx_ISR+3
  3772  00001E  CFE8 F028          	movff	bsr+0,??_Rx_ISR+4
  3773  000022  CFE0 F029          	movff	fsr0l+0,??_Rx_ISR+5
  3774  000026  CFE9 F02A          	movff	fsr0h+0,??_Rx_ISR+6
  3775  00002A  CFEA F02B          	movff	fsr1l+0,??_Rx_ISR+7
  3776  00002E  CFE1 F02C          	movff	fsr1h+0,??_Rx_ISR+8
  3777  000032  CFE2 F02D          	movff	fsr2l+0,??_Rx_ISR+9
  3778  000036  CFD9 F02E          	movff	fsr2h+0,??_Rx_ISR+10
  3779  00003A  CFDA F02F          	movff	prodl+0,??_Rx_ISR+11
  3780  00003E  CFF3 F030          	movff	prodh+0,??_Rx_ISR+12
  3781  000042  CFF4 F031          	movff	tblptrl+0,??_Rx_ISR+13
  3782  000046  CFF6 F032          	movff	tblptrh+0,??_Rx_ISR+14
  3783  00004A  CFF7 F033          	movff	tblptru+0,??_Rx_ISR+15
  3784  00004E  CFF8 F034          	movff	tablat+0,??_Rx_ISR+16
  3785  000052  CFF5 F035          	line	553
  3786                           	
  3787                           i1l2376:
  3788  000056                     ;main.c: 553:     RCIE=0;
  3789                           	bcf	c:(31981/8),(31981)&7	;volatile
  3790  000056  9A9D               	line	554
  3791                           	
  3792                           i1l2378:
  3793  000058                     ;main.c: 554:     unsigned char RxMessage[32]={},DuCyT[5]={};
  3794                           	lfsr	2,(Rx_ISR@F2577)
  3795  000058  EE20  F080         	lfsr	1,(Rx_ISR@RxMessage)
  3796  00005C  EE10  F036         	movlw	32-1
  3797  000060  0E1F               i1u208_21:
  3798  000062                     	movff	plusw2,plusw1
  3799  000062  CFDB FFE3          	decf	wreg
  3800  000066  06E8               	bc	i1u208_21
  3801  000068  E2FC               
  3802                           	lfsr	2,(Rx_ISR@F2579)
  3803  00006A  EE20  F060         	lfsr	1,(Rx_ISR@DuCyT)
  3804  00006E  EE10  F056         	movlw	5-1
  3805  000072  0E04               i1u209_21:
  3806  000074                     	movff	plusw2,plusw1
  3807  000074  CFDB FFE3          	decf	wreg
  3808  000078  06E8               	bc	i1u209_21
  3809  00007A  E2FC               
  3810                           	line	555
  3811                           	
  3812                           i1l2380:
  3813  00007C                     ;main.c: 555:     unsigned char motor=0;
  3814                           	movlw	low(0)
  3815  00007C  0E00               	movwf	((c:Rx_ISR@motor)),c
  3816  00007E  6E5B               	line	556
  3817                           	
  3818                           i1l2382:
  3819  000080                     ;main.c: 556:     unsigned long int DuCy=0;
  3820                           	movlw	low(0)
  3821  000080  0E00               	movwf	((c:Rx_ISR@DuCy)),c
  3822  000082  6E5C               	movlw	high(0)
  3823  000084  0E00               	movwf	((c:Rx_ISR@DuCy+1)),c
  3824  000086  6E5D               	movlw	low highword(0)
  3825  000088  0E00               	movwf	((c:Rx_ISR@DuCy+2)),c
  3826  00008A  6E5E               	movlw	high highword(0)
  3827  00008C  0E00               	movwf	((c:Rx_ISR@DuCy+3)),c
  3828  00008E  6E5F               	line	557
  3829                           	
  3830                           i1l2384:
  3831  000090                     ;main.c: 557:     BT_rx_string(RxMessage);
  3832                           		movlw	low(Rx_ISR@RxMessage)
  3833  000090  0E36               	movwf	((c:BT_rx_string@RxStr)),c
  3834  000092  6E01               	movlw	high(Rx_ISR@RxMessage)
  3835  000094  0E00               	movwf	((c:BT_rx_string@RxStr+1)),c
  3836  000096  6E02               
  3837                           	call	_BT_rx_string	;wreg free
  3838  000098  EC6B  F006         	line	558
  3839                           ;main.c: 558:     switch(RxMessage[0])
  3840                           	goto	i1l2506
  3841  00009C  EF7A  F002         	line	560
  3842                           ;main.c: 559:     {;main.c: 560:         case 'P':
  3843                           	
  3844                           i1l309:
  3845  0000A0                     	line	561
  3846                           	
  3847                           i1l2386:
  3848  0000A0                     ;main.c: 561:             BT_tx_string("Parking\n");
  3849                           		movlw	low(STR_9)
  3850  0000A0  0EE9               	movwf	((c:i1BT_tx_string@msg)),c
  3851  0000A2  6E02               	movlw	high(STR_9)
  3852  0000A4  0E7F               	movwf	((c:i1BT_tx_string@msg+1)),c
  3853  0000A6  6E03               
  3854                           	call	i1_BT_tx_string	;wreg free
  3855  0000A8  EC7C  F009         	line	562
  3856                           	
  3857                           i1l2388:
  3858  0000AC                     ;main.c: 562:             M_foward_direction();
  3859                           	call	_M_foward_direction	;wreg free
  3860  0000AC  ECDB  F00A         	line	563
  3861                           	
  3862                           i1l2390:
  3863  0000B0                     ;main.c: 563:             M_set_DC(60,3);
  3864                           	movlw	high(03Ch)
  3865  0000B0  0E00               	movwf	((c:M_set_DC@DutyCycle+1)),c
  3866  0000B2  6E02               	movlw	low(03Ch)
  3867  0000B4  0E3C               	movwf	((c:M_set_DC@DutyCycle)),c
  3868  0000B6  6E01               	movlw	low(03h)
  3869  0000B8  0E03               	movwf	((c:M_set_DC@motor)),c
  3870  0000BA  6E03               	call	_M_set_DC	;wreg free
  3871  0000BC  EC0E  F003         	line	564
  3872                           ;main.c: 564:             while(distance!=ParkingDistance)
  3873                           	goto	i1l2408
  3874  0000C0  EFA4  F000         	
  3875                           i1l311:
  3876  0000C4                     	line	566
  3877                           ;main.c: 565:             {;main.c: 566:                 if(RCIF)
  3878                           	btfss	c:(31989/8),(31989)&7	;volatile
  3879  0000C4  AA9E               	goto	i1u210_21
  3880  0000C6  EF67  F000         	goto	i1u210_20
  3881  0000CA  EF69  F000         i1u210_21:
  3882  0000CE                     	goto	i1l2398
  3883  0000CE  EF82  F000         i1u210_20:
  3884  0000D2                     	line	568
  3885                           	
  3886                           i1l2392:
  3887  0000D2                     ;main.c: 567:                 {;main.c: 568:                     BT_rx_string(RxMessage)
                                 ;
  3888                           		movlw	low(Rx_ISR@RxMessage)
  3889  0000D2  0E36               	movwf	((c:BT_rx_string@RxStr)),c
  3890  0000D4  6E01               	movlw	high(Rx_ISR@RxMessage)
  3891  0000D6  0E00               	movwf	((c:BT_rx_string@RxStr+1)),c
  3892  0000D8  6E02               
  3893                           	call	_BT_rx_string	;wreg free
  3894  0000DA  EC6B  F006         	line	569
  3895                           	
  3896                           i1l2394:
  3897  0000DE                     ;main.c: 569:                     if(RxMessage[0]=='S')
  3898                           		movlw	83
  3899  0000DE  0E53               	xorwf	((c:Rx_ISR@RxMessage)),c,w
  3900  0000E0  1836               	btfss	status,2
  3901  0000E2  A4D8               	goto	i1u211_21
  3902  0000E4  EF76  F000         	goto	i1u211_20
  3903  0000E8  EF78  F000         
  3904                           i1u211_21:
  3905  0000EC                     	goto	i1l2398
  3906  0000EC  EF82  F000         i1u211_20:
  3907  0000F0                     	line	571
  3908                           	
  3909                           i1l2396:
  3910  0000F0                     ;main.c: 570:                     {;main.c: 571:                         BT_tx_string("P
                                 arking stopped\n");
  3911                           		movlw	low(STR_10)
  3912  0000F0  0E60               	movwf	((c:i1BT_tx_string@msg)),c
  3913  0000F2  6E02               	movlw	high(STR_10)
  3914  0000F4  0E7F               	movwf	((c:i1BT_tx_string@msg+1)),c
  3915  0000F6  6E03               
  3916                           	call	i1_BT_tx_string	;wreg free
  3917  0000F8  EC7C  F009         	line	572
  3918                           ;main.c: 572:                         break;
  3919                           	goto	i1l2410
  3920  0000FC  EFB2  F000         	line	573
  3921                           ;main.c: 573:                     }
  3922                           	
  3923                           i1l313:
  3924  000100                     	goto	i1l2398
  3925  000100  EF82  F000         	line	574
  3926                           ;main.c: 574:                 }
  3927                           	
  3928                           i1l312:
  3929  000104                     	line	575
  3930                           	
  3931                           i1l2398:
  3932  000104                     ;main.c: 575:                 if(ParkingDistance>distance)M_foward_direction();
  3933                           		movf	((c:_ParkingDistance)),c,w	;volatile
  3934  000104  5068               	subwf	((c:_distance)),c,w	;volatile
  3935  000106  5C65               	movf	((c:_ParkingDistance+1)),c,w	;volatile
  3936  000108  5069               	subwfb	((c:_distance+1)),c,w	;volatile
  3937  00010A  5866               	btfsc	status,0
  3938  00010C  B0D8               	goto	i1u212_21
  3939  00010E  EF8B  F000         	goto	i1u212_20
  3940  000112  EF8D  F000         
  3941                           i1u212_21:
  3942  000116                     	goto	i1l2402
  3943  000116  EF91  F000         i1u212_20:
  3944  00011A                     	
  3945                           i1l2400:
  3946  00011A                     	call	_M_foward_direction	;wreg free
  3947  00011A  ECDB  F00A         	goto	i1l2402
  3948  00011E  EF91  F000         	
  3949                           i1l315:
  3950  000122                     	line	576
  3951                           	
  3952                           i1l2402:
  3953  000122                     ;main.c: 576:                 US_send_pulse();
  3954                           	call	_US_send_pulse	;wreg free
  3955  000122  EC3C  F005         	line	577
  3956                           	
  3957                           i1l2404:
  3958  000126                     ;main.c: 577:                 if(distance<=ParkingDistance)break;
  3959                           		movf	((c:_distance)),c,w	;volatile
  3960  000126  5065               	subwf	((c:_ParkingDistance)),c,w	;volatile
  3961  000128  5C68               	movf	((c:_distance+1)),c,w	;volatile
  3962  00012A  5066               	subwfb	((c:_ParkingDistance+1)),c,w	;volatile
  3963  00012C  5869               	btfss	status,0
  3964  00012E  A0D8               	goto	i1u213_21
  3965  000130  EF9C  F000         	goto	i1u213_20
  3966  000134  EF9E  F000         
  3967                           i1u213_21:
  3968  000138                     	goto	i1l2408
  3969  000138  EFA4  F000         i1u213_20:
  3970  00013C                     	goto	i1l2410
  3971  00013C  EFB2  F000         	
  3972                           i1l2406:
  3973  000140                     	goto	i1l2410
  3974  000140  EFB2  F000         	
  3975                           i1l316:
  3976  000144                     	goto	i1l2408
  3977  000144  EFA4  F000         	line	578
  3978                           ;main.c: 578:             }
  3979                           	
  3980                           i1l310:
  3981  000148                     	line	564
  3982                           	
  3983                           i1l2408:
  3984  000148                     ;main.c: 564:             while(distance!=ParkingDistance)
  3985                           	movf	((c:_ParkingDistance)),c,w	;volatile
  3986  000148  5068               xorwf	((c:_distance)),c,w	;volatile
  3987  00014A  1865               	bnz	i1u214_21
  3988  00014C  E107               movf	((c:_ParkingDistance+1)),c,w	;volatile
  3989  00014E  5069               xorwf	((c:_distance+1)),c,w	;volatile
  3990  000150  1866               	btfss	status,2
  3991  000152  A4D8               	goto	i1u214_21
  3992  000154  EFAE  F000         	goto	i1u214_20
  3993  000158  EFB0  F000         
  3994                           i1u214_21:
  3995  00015C                     	goto	i1l311
  3996  00015C  EF62  F000         i1u214_20:
  3997  000160                     	goto	i1l2410
  3998  000160  EFB2  F000         	
  3999                           i1l314:
  4000  000164                     	line	579
  4001                           	
  4002                           i1l2410:
  4003  000164                     ;main.c: 579:             M_stop();
  4004                           	call	i1_M_stop	;wreg free
  4005  000164  ECB7  F00A         	line	580
  4006                           ;main.c: 580:             LCD_clear();
  4007                           	call	_LCD_clear	;wreg free
  4008  000168  EC18  F00C         	line	581
  4009                           	
  4010                           i1l2412:
  4011  00016C                     ;main.c: 581:             if(distance<=ParkingDistance)
  4012                           		movf	((c:_distance)),c,w	;volatile
  4013  00016C  5065               	subwf	((c:_ParkingDistance)),c,w	;volatile
  4014  00016E  5C68               	movf	((c:_distance+1)),c,w	;volatile
  4015  000170  5066               	subwfb	((c:_ParkingDistance+1)),c,w	;volatile
  4016  000172  5869               	btfss	status,0
  4017  000174  A0D8               	goto	i1u215_21
  4018  000176  EFBF  F000         	goto	i1u215_20
  4019  00017A  EFC1  F000         
  4020                           i1u215_21:
  4021  00017E                     	goto	i1l318
  4022  00017E  EFEB  F002         i1u215_20:
  4023  000182                     	line	583
  4024                           	
  4025                           i1l2414:
  4026  000182                     ;main.c: 582:             {;main.c: 583:                 LCD_string_xy(1,7,"DONE");
  4027                           	movlw	low(07h)
  4028  000182  0E07               	movwf	((c:i1LCD_string_xy@pos)),c
  4029  000184  6E07               		movlw	low(STR_11)
  4030  000186  0EFA               	movwf	((c:i1LCD_string_xy@msg)),c
  4031  000188  6E08               	movlw	high(STR_11)
  4032  00018A  0E7F               	movwf	((c:i1LCD_string_xy@msg+1)),c
  4033  00018C  6E09               
  4034                           	movlw	(01h)&0ffh
  4035  00018E  0E01               	
  4036                           	call	i1_LCD_string_xy
  4037  000190  EC11  F00A         	line	584
  4038                           ;main.c: 584:                 BT_tx_string("DONE!!\n");
  4039                           		movlw	low(STR_12)
  4040  000194  0EF2               	movwf	((c:i1BT_tx_string@msg)),c
  4041  000196  6E02               	movlw	high(STR_12)
  4042  000198  0E7F               	movwf	((c:i1BT_tx_string@msg+1)),c
  4043  00019A  6E03               
  4044                           	call	i1_BT_tx_string	;wreg free
  4045  00019C  EC7C  F009         	goto	i1l318
  4046  0001A0  EFEB  F002         	line	585
  4047                           ;main.c: 585:             }
  4048                           	
  4049                           i1l317:
  4050  0001A4                     	line	586
  4051                           ;main.c: 586:             break;
  4052                           	goto	i1l318
  4053  0001A4  EFEB  F002         	line	587
  4054                           ;main.c: 587:         case 'F':
  4055                           	
  4056                           i1l319:
  4057  0001A8                     	line	588
  4058                           	
  4059                           i1l2416:
  4060  0001A8                     ;main.c: 588:             M_foward_direction();
  4061                           	call	_M_foward_direction	;wreg free
  4062  0001A8  ECDB  F00A         	line	589
  4063                           ;main.c: 589:             break;
  4064                           	goto	i1l318
  4065  0001AC  EFEB  F002         	line	590
  4066                           ;main.c: 590:         case 'B':
  4067                           	
  4068                           i1l320:
  4069  0001B0                     	line	591
  4070                           	
  4071                           i1l2418:
  4072  0001B0                     ;main.c: 591:             M_backward_direction();
  4073                           	call	_M_backward_direction	;wreg free
  4074  0001B0  EC1F  F00B         	line	592
  4075                           ;main.c: 592:             break;
  4076                           	goto	i1l318
  4077  0001B4  EFEB  F002         	line	593
  4078                           ;main.c: 593:         case 'S':
  4079                           	
  4080                           i1l321:
  4081  0001B8                     	line	594
  4082                           	
  4083                           i1l2420:
  4084  0001B8                     ;main.c: 594:             M_stop();
  4085                           	call	i1_M_stop	;wreg free
  4086  0001B8  ECB7  F00A         	line	595
  4087                           ;main.c: 595:             break;
  4088                           	goto	i1l318
  4089  0001BC  EFEB  F002         	line	596
  4090                           ;main.c: 596:         case 'D':
  4091                           	
  4092                           i1l322:
  4093  0001C0                     	line	597
  4094                           	
  4095                           i1l2422:
  4096  0001C0                     ;main.c: 597:             US_send_pulse();
  4097                           	call	_US_send_pulse	;wreg free
  4098  0001C0  EC3C  F005         	line	598
  4099                           ;main.c: 598:             break;
  4100                           	goto	i1l318
  4101  0001C4  EFEB  F002         	line	599
  4102                           ;main.c: 599:         case 'T':
  4103                           	
  4104                           i1l323:
  4105  0001C8                     	line	600
  4106                           	
  4107                           i1l2424:
  4108  0001C8                     ;main.c: 600:             M_stop();
  4109                           	call	i1_M_stop	;wreg free
  4110  0001C8  ECB7  F00A         	line	601
  4111                           	
  4112                           i1l2426:
  4113  0001CC                     ;main.c: 601:             BT_tx_string("Write what you want to see on the LCD\n");
  4114                           		movlw	low(STR_13)
  4115  0001CC  0E1E               	movwf	((c:i1BT_tx_string@msg)),c
  4116  0001CE  6E02               	movlw	high(STR_13)
  4117  0001D0  0E7F               	movwf	((c:i1BT_tx_string@msg+1)),c
  4118  0001D2  6E03               
  4119                           	call	i1_BT_tx_string	;wreg free
  4120  0001D4  EC7C  F009         	line	602
  4121                           	
  4122                           i1l2428:
  4123  0001D8                     ;main.c: 602:             BT_rx_string(RxMessage);
  4124                           		movlw	low(Rx_ISR@RxMessage)
  4125  0001D8  0E36               	movwf	((c:BT_rx_string@RxStr)),c
  4126  0001DA  6E01               	movlw	high(Rx_ISR@RxMessage)
  4127  0001DC  0E00               	movwf	((c:BT_rx_string@RxStr+1)),c
  4128  0001DE  6E02               
  4129                           	call	_BT_rx_string	;wreg free
  4130  0001E0  EC6B  F006         	line	603
  4131                           	
  4132                           i1l2430:
  4133  0001E4                     ;main.c: 603:             LCD_clear();
  4134                           	call	_LCD_clear	;wreg free
  4135  0001E4  EC18  F00C         	line	604
  4136                           	
  4137                           i1l2432:
  4138  0001E8                     ;main.c: 604:             LCD_string_xy(1,1,RxMessage);
  4139                           	movlw	low(01h)
  4140  0001E8  0E01               	movwf	((c:i1LCD_string_xy@pos)),c
  4141  0001EA  6E07               		movlw	low(Rx_ISR@RxMessage)
  4142  0001EC  0E36               	movwf	((c:i1LCD_string_xy@msg)),c
  4143  0001EE  6E08               	movlw	high(Rx_ISR@RxMessage)
  4144  0001F0  0E00               	movwf	((c:i1LCD_string_xy@msg+1)),c
  4145  0001F2  6E09               
  4146                           	movlw	(01h)&0ffh
  4147  0001F4  0E01               	
  4148                           	call	i1_LCD_string_xy
  4149  0001F6  EC11  F00A         	line	605
  4150                           ;main.c: 605:             break;
  4151                           	goto	i1l318
  4152  0001FA  EFEB  F002         	line	606
  4153                           ;main.c: 606:         case 'I':
  4154                           	
  4155                           i1l324:
  4156  0001FE                     	line	607
  4157                           # 607 "main.c"
  4158                           reset ;# 
  4159  0001FE  00FF               psect	intcodelo
  4160                           	line	608
  4161                           ;main.c: 608:             break;
  4162                           	goto	i1l318
  4163  000200  EFEB  F002         	line	609
  4164                           ;main.c: 609:         case 'C':
  4165                           	
  4166                           i1l325:
  4167  000204                     	line	610
  4168                           	
  4169                           i1l2434:
  4170  000204                     ;main.c: 610:             M_clockwise_direction();
  4171                           	call	_M_clockwise_direction	;wreg free
  4172  000204  ECFD  F00A         	line	611
  4173                           ;main.c: 611:             break;
  4174                           	goto	i1l318
  4175  000208  EFEB  F002         	line	612
  4176                           ;main.c: 612:         case 'A':
  4177                           	
  4178                           i1l326:
  4179  00020C                     	line	613
  4180                           	
  4181                           i1l2436:
  4182  00020C                     ;main.c: 613:             M_anticlockwise_direction();
  4183                           	call	_M_anticlockwise_direction	;wreg free
  4184  00020C  EC41  F00B         	line	614
  4185                           ;main.c: 614:             break;
  4186                           	goto	i1l318
  4187  000210  EFEB  F002         	line	615
  4188                           ;main.c: 615:         case '1':
  4189                           	
  4190                           i1l327:
  4191  000214                     	line	616
  4192                           	
  4193                           i1l2438:
  4194  000214                     ;main.c: 616:             M_set_DC(102,3);
  4195                           	movlw	high(066h)
  4196  000214  0E00               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4197  000216  6E02               	movlw	low(066h)
  4198  000218  0E66               	movwf	((c:M_set_DC@DutyCycle)),c
  4199  00021A  6E01               	movlw	low(03h)
  4200  00021C  0E03               	movwf	((c:M_set_DC@motor)),c
  4201  00021E  6E03               	call	_M_set_DC	;wreg free
  4202  000220  EC0E  F003         	line	617
  4203                           ;main.c: 617:             break;
  4204                           	goto	i1l318
  4205  000224  EFEB  F002         	line	618
  4206                           ;main.c: 618:         case '2':
  4207                           	
  4208                           i1l328:
  4209  000228                     	line	619
  4210                           	
  4211                           i1l2440:
  4212  000228                     ;main.c: 619:             M_set_DC(205,3);
  4213                           	movlw	high(0CDh)
  4214  000228  0E00               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4215  00022A  6E02               	movlw	low(0CDh)
  4216  00022C  0ECD               	movwf	((c:M_set_DC@DutyCycle)),c
  4217  00022E  6E01               	movlw	low(03h)
  4218  000230  0E03               	movwf	((c:M_set_DC@motor)),c
  4219  000232  6E03               	call	_M_set_DC	;wreg free
  4220  000234  EC0E  F003         	line	620
  4221                           ;main.c: 620:             break;
  4222                           	goto	i1l318
  4223  000238  EFEB  F002         	line	621
  4224                           ;main.c: 621:         case '3':
  4225                           	
  4226                           i1l329:
  4227  00023C                     	line	622
  4228                           	
  4229                           i1l2442:
  4230  00023C                     ;main.c: 622:             M_set_DC(307,3);
  4231                           	movlw	high(0133h)
  4232  00023C  0E01               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4233  00023E  6E02               	movlw	low(0133h)
  4234  000240  0E33               	movwf	((c:M_set_DC@DutyCycle)),c
  4235  000242  6E01               	movlw	low(03h)
  4236  000244  0E03               	movwf	((c:M_set_DC@motor)),c
  4237  000246  6E03               	call	_M_set_DC	;wreg free
  4238  000248  EC0E  F003         	line	623
  4239                           ;main.c: 623:             break;
  4240                           	goto	i1l318
  4241  00024C  EFEB  F002         	line	624
  4242                           ;main.c: 624:         case '4':
  4243                           	
  4244                           i1l330:
  4245  000250                     	line	625
  4246                           	
  4247                           i1l2444:
  4248  000250                     ;main.c: 625:             M_set_DC(409,3);
  4249                           	movlw	high(0199h)
  4250  000250  0E01               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4251  000252  6E02               	movlw	low(0199h)
  4252  000254  0E99               	movwf	((c:M_set_DC@DutyCycle)),c
  4253  000256  6E01               	movlw	low(03h)
  4254  000258  0E03               	movwf	((c:M_set_DC@motor)),c
  4255  00025A  6E03               	call	_M_set_DC	;wreg free
  4256  00025C  EC0E  F003         	line	626
  4257                           ;main.c: 626:             break;
  4258                           	goto	i1l318
  4259  000260  EFEB  F002         	line	627
  4260                           ;main.c: 627:         case '5':
  4261                           	
  4262                           i1l331:
  4263  000264                     	line	628
  4264                           	
  4265                           i1l2446:
  4266  000264                     ;main.c: 628:             M_set_DC(512,3);
  4267                           	movlw	high(0200h)
  4268  000264  0E02               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4269  000266  6E02               	movlw	low(0200h)
  4270  000268  0E00               	movwf	((c:M_set_DC@DutyCycle)),c
  4271  00026A  6E01               	movlw	low(03h)
  4272  00026C  0E03               	movwf	((c:M_set_DC@motor)),c
  4273  00026E  6E03               	call	_M_set_DC	;wreg free
  4274  000270  EC0E  F003         	line	629
  4275                           ;main.c: 629:             break;
  4276                           	goto	i1l318
  4277  000274  EFEB  F002         	line	630
  4278                           ;main.c: 630:         case '6':
  4279                           	
  4280                           i1l332:
  4281  000278                     	line	631
  4282                           	
  4283                           i1l2448:
  4284  000278                     ;main.c: 631:             M_set_DC(614,3);
  4285                           	movlw	high(0266h)
  4286  000278  0E02               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4287  00027A  6E02               	movlw	low(0266h)
  4288  00027C  0E66               	movwf	((c:M_set_DC@DutyCycle)),c
  4289  00027E  6E01               	movlw	low(03h)
  4290  000280  0E03               	movwf	((c:M_set_DC@motor)),c
  4291  000282  6E03               	call	_M_set_DC	;wreg free
  4292  000284  EC0E  F003         	line	632
  4293                           ;main.c: 632:             break;
  4294                           	goto	i1l318
  4295  000288  EFEB  F002         	line	633
  4296                           ;main.c: 633:         case '7':
  4297                           	
  4298                           i1l333:
  4299  00028C                     	line	634
  4300                           	
  4301                           i1l2450:
  4302  00028C                     ;main.c: 634:             M_set_DC(716,3);
  4303                           	movlw	high(02CCh)
  4304  00028C  0E02               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4305  00028E  6E02               	movlw	low(02CCh)
  4306  000290  0ECC               	movwf	((c:M_set_DC@DutyCycle)),c
  4307  000292  6E01               	movlw	low(03h)
  4308  000294  0E03               	movwf	((c:M_set_DC@motor)),c
  4309  000296  6E03               	call	_M_set_DC	;wreg free
  4310  000298  EC0E  F003         	line	635
  4311                           ;main.c: 635:             break;
  4312                           	goto	i1l318
  4313  00029C  EFEB  F002         	line	636
  4314                           ;main.c: 636:         case '8':
  4315                           	
  4316                           i1l334:
  4317  0002A0                     	line	637
  4318                           	
  4319                           i1l2452:
  4320  0002A0                     ;main.c: 637:             M_set_DC(818,3);
  4321                           	movlw	high(0332h)
  4322  0002A0  0E03               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4323  0002A2  6E02               	movlw	low(0332h)
  4324  0002A4  0E32               	movwf	((c:M_set_DC@DutyCycle)),c
  4325  0002A6  6E01               	movlw	low(03h)
  4326  0002A8  0E03               	movwf	((c:M_set_DC@motor)),c
  4327  0002AA  6E03               	call	_M_set_DC	;wreg free
  4328  0002AC  EC0E  F003         	line	638
  4329                           ;main.c: 638:             break;
  4330                           	goto	i1l318
  4331  0002B0  EFEB  F002         	line	639
  4332                           ;main.c: 639:         case '9':
  4333                           	
  4334                           i1l335:
  4335  0002B4                     	line	640
  4336                           	
  4337                           i1l2454:
  4338  0002B4                     ;main.c: 640:             M_set_DC(921,3);
  4339                           	movlw	high(0399h)
  4340  0002B4  0E03               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4341  0002B6  6E02               	movlw	low(0399h)
  4342  0002B8  0E99               	movwf	((c:M_set_DC@DutyCycle)),c
  4343  0002BA  6E01               	movlw	low(03h)
  4344  0002BC  0E03               	movwf	((c:M_set_DC@motor)),c
  4345  0002BE  6E03               	call	_M_set_DC	;wreg free
  4346  0002C0  EC0E  F003         	line	641
  4347                           ;main.c: 641:             break;
  4348                           	goto	i1l318
  4349  0002C4  EFEB  F002         	line	642
  4350                           ;main.c: 642:         case '0':
  4351                           	
  4352                           i1l336:
  4353  0002C8                     	line	643
  4354                           	
  4355                           i1l2456:
  4356  0002C8                     ;main.c: 643:             M_set_DC(1023,3);
  4357                           	movlw	high(03FFh)
  4358  0002C8  0E03               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4359  0002CA  6E02               	setf	((c:M_set_DC@DutyCycle)),c
  4360  0002CC  6801               	movlw	low(03h)
  4361  0002CE  0E03               	movwf	((c:M_set_DC@motor)),c
  4362  0002D0  6E03               	call	_M_set_DC	;wreg free
  4363  0002D2  EC0E  F003         	line	644
  4364                           ;main.c: 644:             break;
  4365                           	goto	i1l318
  4366  0002D6  EFEB  F002         	line	645
  4367                           ;main.c: 645:         case 'W':
  4368                           	
  4369                           i1l337:
  4370  0002DA                     	line	646
  4371                           	
  4372                           i1l2458:
  4373  0002DA                     ;main.c: 646:             M_stop();
  4374                           	call	i1_M_stop	;wreg free
  4375  0002DA  ECB7  F00A         	line	647
  4376                           ;main.c: 647:             M_foward_direction();
  4377                           	call	_M_foward_direction	;wreg free
  4378  0002DE  ECDB  F00A         	line	648
  4379                           ;main.c: 648:             M_set_DC(512,1);
  4380                           	movlw	high(0200h)
  4381  0002E2  0E02               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4382  0002E4  6E02               	movlw	low(0200h)
  4383  0002E6  0E00               	movwf	((c:M_set_DC@DutyCycle)),c
  4384  0002E8  6E01               	movlw	low(01h)
  4385  0002EA  0E01               	movwf	((c:M_set_DC@motor)),c
  4386  0002EC  6E03               	call	_M_set_DC	;wreg free
  4387  0002EE  EC0E  F003         	line	649
  4388                           ;main.c: 649:             M_set_DC(1023,2);
  4389                           	movlw	high(03FFh)
  4390  0002F2  0E03               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4391  0002F4  6E02               	setf	((c:M_set_DC@DutyCycle)),c
  4392  0002F6  6801               	movlw	low(02h)
  4393  0002F8  0E02               	movwf	((c:M_set_DC@motor)),c
  4394  0002FA  6E03               	call	_M_set_DC	;wreg free
  4395  0002FC  EC0E  F003         	line	650
  4396                           ;main.c: 650:             break;
  4397                           	goto	i1l318
  4398  000300  EFEB  F002         	line	651
  4399                           ;main.c: 651:         case 'X':
  4400                           	
  4401                           i1l338:
  4402  000304                     	line	652
  4403                           	
  4404                           i1l2460:
  4405  000304                     ;main.c: 652:             M_stop();
  4406                           	call	i1_M_stop	;wreg free
  4407  000304  ECB7  F00A         	line	653
  4408                           ;main.c: 653:             M_foward_direction();
  4409                           	call	_M_foward_direction	;wreg free
  4410  000308  ECDB  F00A         	line	654
  4411                           ;main.c: 654:             M_set_DC(1023,1);
  4412                           	movlw	high(03FFh)
  4413  00030C  0E03               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4414  00030E  6E02               	setf	((c:M_set_DC@DutyCycle)),c
  4415  000310  6801               	movlw	low(01h)
  4416  000312  0E01               	movwf	((c:M_set_DC@motor)),c
  4417  000314  6E03               	call	_M_set_DC	;wreg free
  4418  000316  EC0E  F003         	line	655
  4419                           ;main.c: 655:             M_set_DC(512,2);
  4420                           	movlw	high(0200h)
  4421  00031A  0E02               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4422  00031C  6E02               	movlw	low(0200h)
  4423  00031E  0E00               	movwf	((c:M_set_DC@DutyCycle)),c
  4424  000320  6E01               	movlw	low(02h)
  4425  000322  0E02               	movwf	((c:M_set_DC@motor)),c
  4426  000324  6E03               	call	_M_set_DC	;wreg free
  4427  000326  EC0E  F003         	line	656
  4428                           ;main.c: 656:             break;
  4429                           	goto	i1l318
  4430  00032A  EFEB  F002         	line	657
  4431                           ;main.c: 657:         case 'Y':
  4432                           	
  4433                           i1l339:
  4434  00032E                     	line	658
  4435                           	
  4436                           i1l2462:
  4437  00032E                     ;main.c: 658:             M_stop();
  4438                           	call	i1_M_stop	;wreg free
  4439  00032E  ECB7  F00A         	line	659
  4440                           ;main.c: 659:             M_backward_direction();
  4441                           	call	_M_backward_direction	;wreg free
  4442  000332  EC1F  F00B         	line	660
  4443                           ;main.c: 660:             M_set_DC(512,1);
  4444                           	movlw	high(0200h)
  4445  000336  0E02               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4446  000338  6E02               	movlw	low(0200h)
  4447  00033A  0E00               	movwf	((c:M_set_DC@DutyCycle)),c
  4448  00033C  6E01               	movlw	low(01h)
  4449  00033E  0E01               	movwf	((c:M_set_DC@motor)),c
  4450  000340  6E03               	call	_M_set_DC	;wreg free
  4451  000342  EC0E  F003         	line	661
  4452                           ;main.c: 661:             M_set_DC(1023,2);
  4453                           	movlw	high(03FFh)
  4454  000346  0E03               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4455  000348  6E02               	setf	((c:M_set_DC@DutyCycle)),c
  4456  00034A  6801               	movlw	low(02h)
  4457  00034C  0E02               	movwf	((c:M_set_DC@motor)),c
  4458  00034E  6E03               	call	_M_set_DC	;wreg free
  4459  000350  EC0E  F003         	line	662
  4460                           ;main.c: 662:             break;
  4461                           	goto	i1l318
  4462  000354  EFEB  F002         	line	663
  4463                           ;main.c: 663:         case 'Z':
  4464                           	
  4465                           i1l340:
  4466  000358                     	line	664
  4467                           	
  4468                           i1l2464:
  4469  000358                     ;main.c: 664:             M_stop();
  4470                           	call	i1_M_stop	;wreg free
  4471  000358  ECB7  F00A         	line	665
  4472                           ;main.c: 665:             M_backward_direction();
  4473                           	call	_M_backward_direction	;wreg free
  4474  00035C  EC1F  F00B         	line	666
  4475                           ;main.c: 666:             M_set_DC(1023,1);
  4476                           	movlw	high(03FFh)
  4477  000360  0E03               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4478  000362  6E02               	setf	((c:M_set_DC@DutyCycle)),c
  4479  000364  6801               	movlw	low(01h)
  4480  000366  0E01               	movwf	((c:M_set_DC@motor)),c
  4481  000368  6E03               	call	_M_set_DC	;wreg free
  4482  00036A  EC0E  F003         	line	667
  4483                           ;main.c: 667:             M_set_DC(512,2);
  4484                           	movlw	high(0200h)
  4485  00036E  0E02               	movwf	((c:M_set_DC@DutyCycle+1)),c
  4486  000370  6E02               	movlw	low(0200h)
  4487  000372  0E00               	movwf	((c:M_set_DC@DutyCycle)),c
  4488  000374  6E01               	movlw	low(02h)
  4489  000376  0E02               	movwf	((c:M_set_DC@motor)),c
  4490  000378  6E03               	call	_M_set_DC	;wreg free
  4491  00037A  EC0E  F003         	line	668
  4492                           ;main.c: 668:             break;
  4493                           	goto	i1l318
  4494  00037E  EFEB  F002         	line	669
  4495                           ;main.c: 669:         case 'L':
  4496                           	
  4497                           i1l341:
  4498  000382                     	line	670
  4499                           ;main.c: 670:             if(!(LATCbits.LC3&&LATCbits.LC4&&LATCbits.LC5))L_turn_on();
  4500                           	btfss	((c:3979)),c,3	;volatile
  4501  000382  A68B               	goto	i1u216_21
  4502  000384  EFC6  F001         	goto	i1u216_20
  4503  000388  EFC8  F001         i1u216_21:
  4504  00038C                     	goto	i1l2470
  4505  00038C  EFD8  F001         i1u216_20:
  4506  000390                     	
  4507                           i1l2466:
  4508  000390                     	btfss	((c:3979)),c,4	;volatile
  4509  000390  A88B               	goto	i1u217_21
  4510  000392  EFCD  F001         	goto	i1u217_20
  4511  000396  EFCF  F001         i1u217_21:
  4512  00039A                     	goto	i1l2470
  4513  00039A  EFD8  F001         i1u217_20:
  4514  00039E                     	
  4515                           i1l2468:
  4516  00039E                     	btfsc	((c:3979)),c,5	;volatile
  4517  00039E  BA8B               	goto	i1u218_21
  4518  0003A0  EFD4  F001         	goto	i1u218_20
  4519  0003A4  EFD6  F001         i1u218_21:
  4520  0003A8                     	goto	i1l2472
  4521  0003A8  EFDC  F001         i1u218_20:
  4522  0003AC                     	goto	i1l2470
  4523  0003AC  EFD8  F001         	
  4524                           i1l344:
  4525  0003B0                     	
  4526                           i1l2470:
  4527  0003B0                     	call	_L_turn_on	;wreg free
  4528  0003B0  EC22  F00C         	goto	i1l318
  4529  0003B4  EFEB  F002         	line	671
  4530                           ;main.c: 671:             else L_turn_off();
  4531                           	
  4532                           i1l342:
  4533  0003B8                     	
  4534                           i1l2472:
  4535  0003B8                     	call	_L_turn_off	;wreg free
  4536  0003B8  EC26  F00C         	goto	i1l318
  4537  0003BC  EFEB  F002         	
  4538                           i1l345:
  4539  0003C0                     	line	672
  4540                           ;main.c: 672:             break;
  4541                           	goto	i1l318
  4542  0003C0  EFEB  F002         	line	673
  4543                           ;main.c: 673:         case 'd':
  4544                           	
  4545                           i1l346:
  4546  0003C4                     	line	674
  4547                           	
  4548                           i1l2474:
  4549  0003C4                     ;main.c: 674:             M_stop();
  4550                           	call	i1_M_stop	;wreg free
  4551  0003C4  ECB7  F00A         	line	675
  4552                           	
  4553                           i1l2476:
  4554  0003C8                     ;main.c: 675:             BT_tx_string("Which motor do you want to set DC? Motor 1 (1), 
                                 Motor 2 (2) or both (3)\n");
  4555                           		movlw	low(STR_14)
  4556  0003C8  0ED5               	movwf	((c:i1BT_tx_string@msg)),c
  4557  0003CA  6E02               	movlw	high(STR_14)
  4558  0003CC  0E7E               	movwf	((c:i1BT_tx_string@msg+1)),c
  4559  0003CE  6E03               
  4560                           	call	i1_BT_tx_string	;wreg free
  4561  0003D0  EC7C  F009         	line	676
  4562                           	
  4563                           i1l2478:
  4564  0003D4                     ;main.c: 676:             BT_rx_string(RxMessage);
  4565                           		movlw	low(Rx_ISR@RxMessage)
  4566  0003D4  0E36               	movwf	((c:BT_rx_string@RxStr)),c
  4567  0003D6  6E01               	movlw	high(Rx_ISR@RxMessage)
  4568  0003D8  0E00               	movwf	((c:BT_rx_string@RxStr+1)),c
  4569  0003DA  6E02               
  4570                           	call	_BT_rx_string	;wreg free
  4571  0003DC  EC6B  F006         	line	677
  4572                           	
  4573                           i1l2480:
  4574  0003E0                     ;main.c: 677:             if(RxMessage[0]=='1'||RxMessage[0]=='2'||RxMessage[0]=='3')
  4575                           		movlw	49
  4576  0003E0  0E31               	xorwf	((c:Rx_ISR@RxMessage)),c,w
  4577  0003E2  1836               	btfsc	status,2
  4578  0003E4  B4D8               	goto	i1u219_21
  4579  0003E6  EFF7  F001         	goto	i1u219_20
  4580  0003EA  EFF9  F001         
  4581                           i1u219_21:
  4582  0003EE                     	goto	i1l2486
  4583  0003EE  EF0D  F002         i1u219_20:
  4584  0003F2                     	
  4585                           i1l2482:
  4586  0003F2                     		movlw	50
  4587  0003F2  0E32               	xorwf	((c:Rx_ISR@RxMessage)),c,w
  4588  0003F4  1836               	btfsc	status,2
  4589  0003F6  B4D8               	goto	i1u220_21
  4590  0003F8  EF00  F002         	goto	i1u220_20
  4591  0003FC  EF02  F002         
  4592                           i1u220_21:
  4593  000400                     	goto	i1l2486
  4594  000400  EF0D  F002         i1u220_20:
  4595  000404                     	
  4596                           i1l2484:
  4597  000404                     		movlw	51
  4598  000404  0E33               	xorwf	((c:Rx_ISR@RxMessage)),c,w
  4599  000406  1836               	btfss	status,2
  4600  000408  A4D8               	goto	i1u221_21
  4601  00040A  EF09  F002         	goto	i1u221_20
  4602  00040E  EF0B  F002         
  4603                           i1u221_21:
  4604  000412                     	goto	i1l2502
  4605  000412  EF6E  F002         i1u221_20:
  4606  000416                     	goto	i1l2486
  4607  000416  EF0D  F002         	
  4608                           i1l349:
  4609  00041A                     	line	679
  4610                           	
  4611                           i1l2486:
  4612  00041A                     ;main.c: 678:             {;main.c: 679:                 motor=RxMessage[0]&0x0F;
  4613                           	movf	((c:Rx_ISR@RxMessage)),c,w
  4614  00041A  5036               	andlw	low(0Fh)
  4615  00041C  0B0F               	movwf	((c:Rx_ISR@motor)),c
  4616  00041E  6E5B               	line	680
  4617                           	
  4618                           i1l2488:
  4619  000420                     ;main.c: 680:                 BT_tx_string("Please enter DC value (%)\n");
  4620                           		movlw	low(STR_15)
  4621  000420  0E45               	movwf	((c:i1BT_tx_string@msg)),c
  4622  000422  6E02               	movlw	high(STR_15)
  4623  000424  0E7F               	movwf	((c:i1BT_tx_string@msg+1)),c
  4624  000426  6E03               
  4625                           	call	i1_BT_tx_string	;wreg free
  4626  000428  EC7C  F009         	line	681
  4627                           	
  4628                           i1l2490:
  4629  00042C                     ;main.c: 681:                 BT_rx_string(RxMessage);
  4630                           		movlw	low(Rx_ISR@RxMessage)
  4631  00042C  0E36               	movwf	((c:BT_rx_string@RxStr)),c
  4632  00042E  6E01               	movlw	high(Rx_ISR@RxMessage)
  4633  000430  0E00               	movwf	((c:BT_rx_string@RxStr+1)),c
  4634  000432  6E02               
  4635                           	call	_BT_rx_string	;wreg free
  4636  000434  EC6B  F006         	line	682
  4637                           	
  4638                           i1l2492:
  4639  000438                     ;main.c: 682:                 DuCy=atoi4D(RxMessage);
  4640                           		movlw	low(Rx_ISR@RxMessage)
  4641  000438  0E36               	movwf	((c:atoi4D@arr)),c
  4642  00043A  6E07               	movlw	high(Rx_ISR@RxMessage)
  4643  00043C  0E00               	movwf	((c:atoi4D@arr+1)),c
  4644  00043E  6E08               
  4645                           	call	_atoi4D	;wreg free
  4646  000440  ECC7  F006         	movff	0+?_atoi4D,(c:Rx_ISR@DuCy)
  4647  000444  C007  F05C         	movff	1+?_atoi4D,(c:Rx_ISR@DuCy+1)
  4648  000448  C008  F05D         	clrf	((c:Rx_ISR@DuCy+2)),c
  4649  00044C  6A5E               	clrf	((c:Rx_ISR@DuCy+3)),c
  4650  00044E  6A5F               
  4651                           	line	683
  4652                           	
  4653                           i1l2494:
  4654  000450                     ;main.c: 683:                 DuCy=DuCy*1023/100;
  4655                           	movff	(c:Rx_ISR@DuCy),(c:___lmul@multiplier)
  4656  000450  C05C  F001         	movff	(c:Rx_ISR@DuCy+1),(c:___lmul@multiplier+1)
  4657  000454  C05D  F002         	movff	(c:Rx_ISR@DuCy+2),(c:___lmul@multiplier+2)
  4658  000458  C05E  F003         	movff	(c:Rx_ISR@DuCy+3),(c:___lmul@multiplier+3)
  4659  00045C  C05F  F004         	movlw	low(03FFh)
  4660  000460  0EFF               	movwf	((c:___lmul@multiplicand)),c
  4661  000462  6E05               	movlw	high(03FFh)
  4662  000464  0E03               	movwf	((c:___lmul@multiplicand+1)),c
  4663  000466  6E06               	movlw	low highword(03FFh)
  4664  000468  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  4665  00046A  6E07               	movlw	high highword(03FFh)
  4666  00046C  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  4667  00046E  6E08               	call	___lmul	;wreg free
  4668  000470  EC0F  F009         	movff	0+?___lmul,(c:___lldiv@dividend)
  4669  000474  C001  F00D         	movff	1+?___lmul,(c:___lldiv@dividend+1)
  4670  000478  C002  F00E         	movff	2+?___lmul,(c:___lldiv@dividend+2)
  4671  00047C  C003  F00F         	movff	3+?___lmul,(c:___lldiv@dividend+3)
  4672  000480  C004  F010         	
  4673                           	movlw	low(064h)
  4674  000484  0E64               	movwf	((c:___lldiv@divisor)),c
  4675  000486  6E11               	movlw	high(064h)
  4676  000488  0E00               	movwf	((c:___lldiv@divisor+1)),c
  4677  00048A  6E12               	movlw	low highword(064h)
  4678  00048C  0E00               	movwf	((c:___lldiv@divisor+2)),c
  4679  00048E  6E13               	movlw	high highword(064h)
  4680  000490  0E00               	movwf	((c:___lldiv@divisor+3)),c
  4681  000492  6E14               	call	___lldiv	;wreg free
  4682  000494  EC0F  F006         	movff	0+?___lldiv,(c:Rx_ISR@DuCy)
  4683  000498  C00D  F05C         	movff	1+?___lldiv,(c:Rx_ISR@DuCy+1)
  4684  00049C  C00E  F05D         	movff	2+?___lldiv,(c:Rx_ISR@DuCy+2)
  4685  0004A0  C00F  F05E         	movff	3+?___lldiv,(c:Rx_ISR@DuCy+3)
  4686  0004A4  C010  F05F         	
  4687                           	line	684
  4688                           	
  4689                           i1l2496:
  4690  0004A8                     ;main.c: 684:                 M_set_DC(DuCy,motor);
  4691                           	movff	(c:Rx_ISR@DuCy),(c:M_set_DC@DutyCycle)
  4692  0004A8  C05C  F001         	movff	(c:Rx_ISR@DuCy+1),(c:M_set_DC@DutyCycle+1)
  4693  0004AC  C05D  F002         	movff	(c:Rx_ISR@motor),(c:M_set_DC@motor)
  4694  0004B0  C05B  F003         	call	_M_set_DC	;wreg free
  4695  0004B4  EC0E  F003         	line	685
  4696                           	
  4697                           i1l2498:
  4698  0004B8                     ;main.c: 685:                 itoa4D(DuCyT,DuCy);
  4699                           		movlw	low(Rx_ISR@DuCyT)
  4700  0004B8  0E56               	movwf	((c:itoa4D@arr)),c
  4701  0004BA  6E0D               	movlw	high(Rx_ISR@DuCyT)
  4702  0004BC  0E00               	movwf	((c:itoa4D@arr+1)),c
  4703  0004BE  6E0E               
  4704                           	movff	(c:Rx_ISR@DuCy),(c:itoa4D@num)
  4705  0004C0  C05C  F00F         	movff	(c:Rx_ISR@DuCy+1),(c:itoa4D@num+1)
  4706  0004C4  C05D  F010         	call	_itoa4D	;wreg free
  4707  0004C8  ECE8  F003         	line	686
  4708                           	
  4709                           i1l2500:
  4710  0004CC                     ;main.c: 686:                 BT_tx_string(DuCyT);
  4711                           		movlw	low(Rx_ISR@DuCyT)
  4712  0004CC  0E56               	movwf	((c:i1BT_tx_string@msg)),c
  4713  0004CE  6E02               	movlw	high(Rx_ISR@DuCyT)
  4714  0004D0  0E00               	movwf	((c:i1BT_tx_string@msg+1)),c
  4715  0004D2  6E03               
  4716                           	call	i1_BT_tx_string	;wreg free
  4717  0004D4  EC7C  F009         	line	687
  4718                           ;main.c: 687:             }
  4719                           	goto	i1l318
  4720  0004D8  EFEB  F002         	line	688
  4721                           ;main.c: 688:             else BT_tx_string("Wrong Answer!!\n");
  4722                           	
  4723                           i1l347:
  4724  0004DC                     	
  4725                           i1l2502:
  4726  0004DC                     		movlw	low(STR_16)
  4727  0004DC  0E82               	movwf	((c:i1BT_tx_string@msg)),c
  4728  0004DE  6E02               	movlw	high(STR_16)
  4729  0004E0  0E7F               	movwf	((c:i1BT_tx_string@msg+1)),c
  4730  0004E2  6E03               
  4731                           	call	i1_BT_tx_string	;wreg free
  4732  0004E4  EC7C  F009         	goto	i1l318
  4733  0004E8  EFEB  F002         	
  4734                           i1l350:
  4735  0004EC                     	line	689
  4736                           ;main.c: 689:             break;
  4737                           	goto	i1l318
  4738  0004EC  EFEB  F002         	line	690
  4739                           	
  4740                           i1l2504:
  4741  0004F0                     ;main.c: 690:     }
  4742                           	goto	i1l318
  4743  0004F0  EFEB  F002         	
  4744                           i1l308:
  4745  0004F4                     	
  4746                           i1l2506:
  4747  0004F4                     	movf	((c:Rx_ISR@RxMessage)),c,w
  4748  0004F4  5036               	movwf	(??_Rx_ISR+0+0)&0ffh,c
  4749  0004F6  6E25               	clrf	(??_Rx_ISR+0+0+1)&0ffh,c
  4750  0004F8  6A26               
  4751                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4752                           ; Switch size 1, requested type "space"
  4753                           ; Number of cases is 1, Range of values is 0 to 0
  4754                           ; switch strategies available:
  4755                           ; Name         Instructions Cycles
  4756                           ; simple_byte            4     3 (average)
  4757                           ;	Chosen strategy is simple_byte
  4758                           
  4759                           	movf ??_Rx_ISR+0+1,c,w
  4760  0004FA  5026               	xorlw	0^0	; case 0
  4761  0004FC  0A00               	skipnz
  4762  0004FE  B4D8               	goto	i1l2552
  4763  000500  EF84  F002         	goto	i1l318
  4764  000504  EFEB  F002         	
  4765                           i1l2552:
  4766  000508                     ; Switch size 1, requested type "space"
  4767                           ; Number of cases is 25, Range of values is 48 to 100
  4768                           ; switch strategies available:
  4769                           ; Name         Instructions Cycles
  4770                           ; simple_byte           76    39 (average)
  4771                           ;	Chosen strategy is simple_byte
  4772                           
  4773                           	movf ??_Rx_ISR+0+0,c,w
  4774  000508  5025               	xorlw	48^0	; case 48
  4775  00050A  0A30               	skipnz
  4776  00050C  B4D8               	goto	i1l2456
  4777  00050E  EF64  F001         	xorlw	49^48	; case 49
  4778  000512  0A01               	skipnz
  4779  000514  B4D8               	goto	i1l2438
  4780  000516  EF0A  F001         	xorlw	50^49	; case 50
  4781  00051A  0A03               	skipnz
  4782  00051C  B4D8               	goto	i1l2440
  4783  00051E  EF14  F001         	xorlw	51^50	; case 51
  4784  000522  0A01               	skipnz
  4785  000524  B4D8               	goto	i1l2442
  4786  000526  EF1E  F001         	xorlw	52^51	; case 52
  4787  00052A  0A07               	skipnz
  4788  00052C  B4D8               	goto	i1l2444
  4789  00052E  EF28  F001         	xorlw	53^52	; case 53
  4790  000532  0A01               	skipnz
  4791  000534  B4D8               	goto	i1l2446
  4792  000536  EF32  F001         	xorlw	54^53	; case 54
  4793  00053A  0A03               	skipnz
  4794  00053C  B4D8               	goto	i1l2448
  4795  00053E  EF3C  F001         	xorlw	55^54	; case 55
  4796  000542  0A01               	skipnz
  4797  000544  B4D8               	goto	i1l2450
  4798  000546  EF46  F001         	xorlw	56^55	; case 56
  4799  00054A  0A0F               	skipnz
  4800  00054C  B4D8               	goto	i1l2452
  4801  00054E  EF50  F001         	xorlw	57^56	; case 57
  4802  000552  0A01               	skipnz
  4803  000554  B4D8               	goto	i1l2454
  4804  000556  EF5A  F001         	xorlw	65^57	; case 65
  4805  00055A  0A78               	skipnz
  4806  00055C  B4D8               	goto	i1l2436
  4807  00055E  EF06  F001         	xorlw	66^65	; case 66
  4808  000562  0A03               	skipnz
  4809  000564  B4D8               	goto	i1l2418
  4810  000566  EFD8  F000         	xorlw	67^66	; case 67
  4811  00056A  0A01               	skipnz
  4812  00056C  B4D8               	goto	i1l2434
  4813  00056E  EF02  F001         	xorlw	68^67	; case 68
  4814  000572  0A07               	skipnz
  4815  000574  B4D8               	goto	i1l2422
  4816  000576  EFE0  F000         	xorlw	70^68	; case 70
  4817  00057A  0A02               	skipnz
  4818  00057C  B4D8               	goto	i1l2416
  4819  00057E  EFD4  F000         	xorlw	73^70	; case 73
  4820  000582  0A0F               	skipnz
  4821  000584  B4D8               	goto	i1l324
  4822  000586  EFFF  F000         	xorlw	76^73	; case 76
  4823  00058A  0A05               	skipnz
  4824  00058C  B4D8               	goto	i1l341
  4825  00058E  EFC1  F001         	xorlw	80^76	; case 80
  4826  000592  0A1C               	skipnz
  4827  000594  B4D8               	goto	i1l2386
  4828  000596  EF50  F000         	xorlw	83^80	; case 83
  4829  00059A  0A03               	skipnz
  4830  00059C  B4D8               	goto	i1l2420
  4831  00059E  EFDC  F000         	xorlw	84^83	; case 84
  4832  0005A2  0A07               	skipnz
  4833  0005A4  B4D8               	goto	i1l2424
  4834  0005A6  EFE4  F000         	xorlw	87^84	; case 87
  4835  0005AA  0A03               	skipnz
  4836  0005AC  B4D8               	goto	i1l2458
  4837  0005AE  EF6D  F001         	xorlw	88^87	; case 88
  4838  0005B2  0A0F               	skipnz
  4839  0005B4  B4D8               	goto	i1l2460
  4840  0005B6  EF82  F001         	xorlw	89^88	; case 89
  4841  0005BA  0A01               	skipnz
  4842  0005BC  B4D8               	goto	i1l2462
  4843  0005BE  EF97  F001         	xorlw	90^89	; case 90
  4844  0005C2  0A03               	skipnz
  4845  0005C4  B4D8               	goto	i1l2464
  4846  0005C6  EFAC  F001         	xorlw	100^90	; case 100
  4847  0005CA  0A3E               	skipnz
  4848  0005CC  B4D8               	goto	i1l2474
  4849  0005CE  EFE2  F001         	goto	i1l318
  4850  0005D2  EFEB  F002         
  4851                           	
  4852                           i1l318:
  4853  0005D6                     	line	691
  4854                           ;main.c: 691:     RCIE=1;
  4855                           	bsf	c:(31981/8),(31981)&7	;volatile
  4856  0005D6  8A9D               	line	692
  4857                           	
  4858                           i1l351:
  4859  0005D8                     	movff	??_Rx_ISR+16,tablat+0
  4860  0005D8  C035  FFF5         	movff	??_Rx_ISR+15,tblptru+0
  4861  0005DC  C034  FFF8         	movff	??_Rx_ISR+14,tblptrh+0
  4862  0005E0  C033  FFF7         	movff	??_Rx_ISR+13,tblptrl+0
  4863  0005E4  C032  FFF6         	movff	??_Rx_ISR+12,prodh+0
  4864  0005E8  C031  FFF4         	movff	??_Rx_ISR+11,prodl+0
  4865  0005EC  C030  FFF3         	movff	??_Rx_ISR+10,fsr2h+0
  4866  0005F0  C02F  FFDA         	movff	??_Rx_ISR+9,fsr2l+0
  4867  0005F4  C02E  FFD9         	movff	??_Rx_ISR+8,fsr1h+0
  4868  0005F8  C02D  FFE2         	movff	??_Rx_ISR+7,fsr1l+0
  4869  0005FC  C02C  FFE1         	movff	??_Rx_ISR+6,fsr0h+0
  4870  000600  C02B  FFEA         	movff	??_Rx_ISR+5,fsr0l+0
  4871  000604  C02A  FFE9         	movff	??_Rx_ISR+4,bsr+0
  4872  000608  C029  FFE0         	movff	??_Rx_ISR+3,wreg+0
  4873  00060C  C028  FFE8         	movff	??_Rx_ISR+2,status+0
  4874  000610  C027  FFD8         	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  4875  000614  906A               	retfie
  4876  000616  0010               	opt stack 0
  4877                           GLOBAL	__end_of_Rx_ISR
  4878                           	__end_of_Rx_ISR:
  4879  000618                     	signat	_Rx_ISR,89
  4880                           	global	i1_M_stop
  4881                           
  4882 ;; *************** function i1_M_stop *****************
  4883 ;; Defined at:
  4884 ;;		line 447 in file "main.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;		None
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;		None
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  1    wreg      void 
  4891 ;; Registers used:
  4892 ;;		wreg, status,2, status,0
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4898 ;;      Params:         0       0       0       0       0       0       0
  4899 ;;      Locals:         0       0       0       0       0       0       0
  4900 ;;      Temps:          0       0       0       0       0       0       0
  4901 ;;      Totals:         0       0       0       0       0       0       0
  4902 ;;Total ram usage:        0 bytes
  4903 ;; Hardware stack levels used:    1
  4904 ;; This function calls:
  4905 ;;		Nothing
  4906 ;; This function is called by:
  4907 ;;		_Rx_ISR
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           psect	text15,class=CODE,space=0,reloc=2,group=0
  4911                           	line	447
  4912                           global __ptext15
  4913                           __ptext15:
  4914  00156E                     psect	text15
  4915                           	file	"main.c"
  4916                           	line	447
  4917                           	global	__size_ofi1_M_stop
  4918                           	__size_ofi1_M_stop	equ	__end_ofi1_M_stop-i1_M_stop
  4919  0000                     	
  4920                           i1_M_stop:
  4921  00156E                     ;incstack = 0
  4922                           	opt	stack 26
  4923                           	line	449
  4924                           	
  4925                           i1l2342:
  4926  00156E                     ;main.c: 449:     LATDbits.LD4=0;LATDbits.LD6=0;LATDbits.LD5=0;LATDbits.LD7=0;
  4927                           	bcf	((c:3980)),c,4	;volatile
  4928  00156E  988C               	bcf	((c:3980)),c,6	;volatile
  4929  001570  9C8C               	bcf	((c:3980)),c,5	;volatile
  4930  001572  9A8C               	bcf	((c:3980)),c,7	;volatile
  4931  001574  9E8C               	line	450
  4932                           	
  4933                           i1l2344:
  4934  001576                     ;main.c: 450:     if(CCPR1L!=CCPR2L)
  4935                           	movf	((c:4027)),c,w	;volatile
  4936  001576  50BB               xorwf	((c:4030)),c,w	;volatile
  4937  001578  18BE               	btfsc	status,2
  4938  00157A  B4D8               	goto	i1u203_21
  4939  00157C  EFC2  F00A         	goto	i1u203_20
  4940  001580  EFC4  F00A         
  4941                           i1u203_21:
  4942  001584                     	goto	i1l259
  4943  001584  EFDA  F00A         i1u203_20:
  4944  001588                     	line	452
  4945                           	
  4946                           i1l2346:
  4947  001588                     ;main.c: 451:     {;main.c: 452:         CCPR2L=CCPR1L;
  4948                           	movff	(c:4030),(c:4027)	;volatile
  4949  001588  CFBE FFBB          	line	453
  4950                           ;main.c: 453:         DC2B1=DC1B1;
  4951                           	btfsc	c:(32237/8),(32237)&7	;volatile
  4952  00158C  BABD               	goto	i1u204_21
  4953  00158E  EFCB  F00A         	goto	i1u204_20
  4954  001592  EFCE  F00A         i1u204_21:
  4955  001596                     	bsf	c:(32213/8),(32213)&7	;volatile
  4956  001596  8ABA               	goto	i1u205_25
  4957  001598  EFCF  F00A         i1u204_20:
  4958  00159C                     	bcf	c:(32213/8),(32213)&7	;volatile
  4959  00159C  9ABA               i1u205_25:
  4960  00159E                     	line	454
  4961                           ;main.c: 454:         DC2B0=DC1B0;
  4962                           	btfsc	c:(32236/8),(32236)&7	;volatile
  4963  00159E  B8BD               	goto	i1u206_21
  4964  0015A0  EFD4  F00A         	goto	i1u206_20
  4965  0015A4  EFD7  F00A         i1u206_21:
  4966  0015A8                     	bsf	c:(32212/8),(32212)&7	;volatile
  4967  0015A8  88BA               	goto	i1u207_25
  4968  0015AA  EFD8  F00A         i1u206_20:
  4969  0015AE                     	bcf	c:(32212/8),(32212)&7	;volatile
  4970  0015AE  98BA               i1u207_25:
  4971  0015B0                     	goto	i1l259
  4972  0015B0  EFDA  F00A         	line	455
  4973                           ;main.c: 455:     }
  4974                           	
  4975                           i1l258:
  4976  0015B4                     	line	456
  4977                           	
  4978                           i1l259:
  4979  0015B4                     	return	;funcret
  4980  0015B4  0012               	opt stack 0
  4981                           GLOBAL	__end_ofi1_M_stop
  4982                           	__end_ofi1_M_stop:
  4983  0015B6                     	signat	i1_M_stop,89
  4984                           	global	_atoi4D
  4985                           
  4986 ;; *************** function _atoi4D *****************
  4987 ;; Defined at:
  4988 ;;		line 724 in file "main.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;  arr             2    6[COMRAM] PTR unsigned char 
  4991 ;;		 -> Rx_ISR@RxMessage(32), 
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;  num             2    9[COMRAM] unsigned int 
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  2    6[COMRAM] unsigned int 
  4996 ;; Registers used:
  4997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5003 ;;      Params:         2       0       0       0       0       0       0
  5004 ;;      Locals:         2       0       0       0       0       0       0
  5005 ;;      Temps:          1       0       0       0       0       0       0
  5006 ;;      Totals:         5       0       0       0       0       0       0
  5007 ;;Total ram usage:        5 bytes
  5008 ;; Hardware stack levels used:    1
  5009 ;; Hardware stack levels required when called:    1
  5010 ;; This function calls:
  5011 ;;		___wmul
  5012 ;; This function is called by:
  5013 ;;		_Rx_ISR
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           psect	text16,class=CODE,space=0,reloc=2,group=0
  5017                           	line	724
  5018                           global __ptext16
  5019                           __ptext16:
  5020  000D8E                     psect	text16
  5021                           	file	"main.c"
  5022                           	line	724
  5023                           	global	__size_of_atoi4D
  5024                           	__size_of_atoi4D	equ	__end_of_atoi4D-_atoi4D
  5025  0000                     	
  5026                           _atoi4D:
  5027  000D8E                     ;incstack = 0
  5028                           	opt	stack 25
  5029                           	line	726
  5030                           	
  5031                           i1l2306:
  5032  000D8E                     ;main.c: 724: unsigned int atoi4D(char arr[]);main.c: 725: {;main.c: 726:     unsigned i
                                 nt num=0;
  5033                           	movlw	high(0)
  5034  000D8E  0E00               	movwf	((c:atoi4D@num+1)),c
  5035  000D90  6E0B               	movlw	low(0)
  5036  000D92  0E00               	movwf	((c:atoi4D@num)),c
  5037  000D94  6E0A               	line	727
  5038                           	
  5039                           i1l2308:
  5040  000D96                     ;main.c: 727:     num=(arr[0]&0x0F)*1000;
  5041                           	movff	(c:atoi4D@arr),fsr2l
  5042  000D96  C007  FFD9         	movff	(c:atoi4D@arr+1),fsr2h
  5043  000D9A  C008  FFDA         	movf	indf2,w
  5044  000D9E  50DF               	movwf	(??_atoi4D+0+0)&0ffh,c
  5045  000DA0  6E09               	movlw	0Fh
  5046  000DA2  0E0F               	andwf	((??_atoi4D+0+0)),c
  5047  000DA4  1609               	movf	((??_atoi4D+0+0)),c,w
  5048  000DA6  5009               	movwf	((c:___wmul@multiplier)),c
  5049  000DA8  6E01               	clrf	((c:___wmul@multiplier+1)),c
  5050  000DAA  6A02               	movlw	high(03E8h)
  5051  000DAC  0E03               	movwf	((c:___wmul@multiplicand+1)),c
  5052  000DAE  6E04               	movlw	low(03E8h)
  5053  000DB0  0EE8               	movwf	((c:___wmul@multiplicand)),c
  5054  000DB2  6E03               	call	___wmul	;wreg free
  5055  000DB4  ECD0  F00B         	movff	0+?___wmul,(c:atoi4D@num)
  5056  000DB8  C001  F00A         	movff	1+?___wmul,(c:atoi4D@num+1)
  5057  000DBC  C002  F00B         	line	728
  5058                           	
  5059                           i1l2310:
  5060  000DC0                     ;main.c: 728:     num+=(arr[1]&0x0F)*100;
  5061                           	lfsr	2,01h
  5062  000DC0  EE20 F001          	movf	((c:atoi4D@arr)),c,w
  5063  000DC4  5007               	addwf	fsr2l
  5064  000DC6  26D9               	movf	((c:atoi4D@arr+1)),c,w
  5065  000DC8  5008               	addwfc	fsr2h
  5066  000DCA  22DA               	movf	indf2,w
  5067  000DCC  50DF               	movwf	(??_atoi4D+0+0)&0ffh,c
  5068  000DCE  6E09               	movlw	0Fh
  5069  000DD0  0E0F               	andwf	((??_atoi4D+0+0)),c
  5070  000DD2  1609               	movf	((??_atoi4D+0+0)),c,w
  5071  000DD4  5009               	mullw	064h
  5072  000DD6  0D64               	movf	(prodl),c,w
  5073  000DD8  50F3               	addwf	((c:atoi4D@num)),c
  5074  000DDA  260A               	movf	(prodh),c,w
  5075  000DDC  50F4               	addwfc	((c:atoi4D@num+1)),c
  5076  000DDE  220B               
  5077                           	line	729
  5078                           	
  5079                           i1l2312:
  5080  000DE0                     ;main.c: 729:     num+=(arr[2]&0x0F)*10;
  5081                           	lfsr	2,02h
  5082  000DE0  EE20 F002          	movf	((c:atoi4D@arr)),c,w
  5083  000DE4  5007               	addwf	fsr2l
  5084  000DE6  26D9               	movf	((c:atoi4D@arr+1)),c,w
  5085  000DE8  5008               	addwfc	fsr2h
  5086  000DEA  22DA               	movf	indf2,w
  5087  000DEC  50DF               	movwf	(??_atoi4D+0+0)&0ffh,c
  5088  000DEE  6E09               	movlw	0Fh
  5089  000DF0  0E0F               	andwf	((??_atoi4D+0+0)),c
  5090  000DF2  1609               	movf	((??_atoi4D+0+0)),c,w
  5091  000DF4  5009               	mullw	0Ah
  5092  000DF6  0D0A               	movf	(prodl),c,w
  5093  000DF8  50F3               	addwf	((c:atoi4D@num)),c
  5094  000DFA  260A               	movf	(prodh),c,w
  5095  000DFC  50F4               	addwfc	((c:atoi4D@num+1)),c
  5096  000DFE  220B               
  5097                           	line	730
  5098                           	
  5099                           i1l2314:
  5100  000E00                     ;main.c: 730:     num+=arr[3]&0x0F;
  5101                           	lfsr	2,03h
  5102  000E00  EE20 F003          	movf	((c:atoi4D@arr)),c,w
  5103  000E04  5007               	addwf	fsr2l
  5104  000E06  26D9               	movf	((c:atoi4D@arr+1)),c,w
  5105  000E08  5008               	addwfc	fsr2h
  5106  000E0A  22DA               	movf	indf2,w
  5107  000E0C  50DF               	movwf	(??_atoi4D+0+0)&0ffh,c
  5108  000E0E  6E09               	movlw	0Fh
  5109  000E10  0E0F               	andwf	((??_atoi4D+0+0)),c
  5110  000E12  1609               	movf	((??_atoi4D+0+0)),c,w
  5111  000E14  5009               	addwf	((c:atoi4D@num)),c
  5112  000E16  260A               	movlw	0
  5113  000E18  0E00               	addwfc	((c:atoi4D@num+1)),c
  5114  000E1A  220B               	line	731
  5115                           	
  5116                           i1l2316:
  5117  000E1C                     ;main.c: 731:     return num;
  5118                           	movff	(c:atoi4D@num),(c:?_atoi4D)
  5119  000E1C  C00A  F007         	movff	(c:atoi4D@num+1),(c:?_atoi4D+1)
  5120  000E20  C00B  F008         	goto	i1l366
  5121  000E24  EF14  F007         	
  5122                           i1l2318:
  5123  000E28                     	line	732
  5124                           	
  5125                           i1l366:
  5126  000E28                     	return	;funcret
  5127  000E28  0012               	opt stack 0
  5128                           GLOBAL	__end_of_atoi4D
  5129                           	__end_of_atoi4D:
  5130  000E2A                     	signat	_atoi4D,4218
  5131                           	global	___wmul
  5132                           
  5133 ;; *************** function ___wmul *****************
  5134 ;; Defined at:
  5135 ;;		line 15 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/Umul16.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;  multiplier      2    0[COMRAM] unsigned int 
  5138 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;  product         2    4[COMRAM] unsigned int 
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  2    0[COMRAM] unsigned int 
  5143 ;; Registers used:
  5144 ;;		wreg, status,2, status,0, prodl, prodh
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5150 ;;      Params:         4       0       0       0       0       0       0
  5151 ;;      Locals:         2       0       0       0       0       0       0
  5152 ;;      Temps:          0       0       0       0       0       0       0
  5153 ;;      Totals:         6       0       0       0       0       0       0
  5154 ;;Total ram usage:        6 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; This function calls:
  5157 ;;		Nothing
  5158 ;; This function is called by:
  5159 ;;		_atoi4D
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           psect	text17,class=CODE,space=0,reloc=2,group=1
  5163                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/Umul16.c"
  5164                           	line	15
  5165                           global __ptext17
  5166                           __ptext17:
  5167  0017A0                     psect	text17
  5168                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/Umul16.c"
  5169                           	line	15
  5170                           	global	__size_of___wmul
  5171                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  5172  0000                     	
  5173                           ___wmul:
  5174  0017A0                     ;incstack = 0
  5175                           	opt	stack 25
  5176                           	line	37
  5177                           	
  5178                           i1l2088:
  5179  0017A0                     	movf	((c:___wmul@multiplier)),c,w
  5180  0017A0  5001               	mulwf	((c:___wmul@multiplicand)),c
  5181  0017A2  0203               	movff	prodl,(c:___wmul@product)
  5182  0017A4  CFF3 F005          	movff	prodh,(c:___wmul@product+1)
  5183  0017A8  CFF4 F006          	line	38
  5184                           	movf	((c:___wmul@multiplier)),c,w
  5185  0017AC  5001               	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
  5186  0017AE  0204               	movf	(prodl),c,w
  5187  0017B0  50F3               	addwf	((c:___wmul@product+1)),c
  5188  0017B2  2606               
  5189                           	line	39
  5190                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
  5191  0017B4  5002               	mulwf	((c:___wmul@multiplicand)),c
  5192  0017B6  0203               	movf	(prodl),c,w
  5193  0017B8  50F3               	addwf	((c:___wmul@product+1)),c
  5194  0017BA  2606               
  5195                           	line	52
  5196                           	
  5197                           i1l2090:
  5198  0017BC                     	movff	(c:___wmul@product),(c:?___wmul)
  5199  0017BC  C005  F001         	movff	(c:___wmul@product+1),(c:?___wmul+1)
  5200  0017C0  C006  F002         	goto	i1l369
  5201  0017C4  EFE4  F00B         	
  5202                           i1l2092:
  5203  0017C8                     	line	53
  5204                           	
  5205                           i1l369:
  5206  0017C8                     	return	;funcret
  5207  0017C8  0012               	opt stack 0
  5208                           GLOBAL	__end_of___wmul
  5209                           	__end_of___wmul:
  5210  0017CA                     	signat	___wmul,8314
  5211                           	global	___lldiv
  5212                           
  5213 ;; *************** function ___lldiv *****************
  5214 ;; Defined at:
  5215 ;;		line 7 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/__lldiv.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  dividend        4   12[COMRAM] unsigned long 
  5218 ;;  divisor         4   16[COMRAM] unsigned long 
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;  quotient        4   20[COMRAM] unsigned long 
  5221 ;;  counter         1   24[COMRAM] unsigned char 
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  4   12[COMRAM] unsigned long 
  5224 ;; Registers used:
  5225 ;;		wreg, status,2, status,0
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5231 ;;      Params:         8       0       0       0       0       0       0
  5232 ;;      Locals:         5       0       0       0       0       0       0
  5233 ;;      Temps:          0       0       0       0       0       0       0
  5234 ;;      Totals:        13       0       0       0       0       0       0
  5235 ;;Total ram usage:       13 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; This function calls:
  5238 ;;		Nothing
  5239 ;; This function is called by:
  5240 ;;		_Rx_ISR
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           psect	text18,class=CODE,space=0,reloc=2,group=1
  5244                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/__lldiv.c"
  5245                           	line	7
  5246                           global __ptext18
  5247                           __ptext18:
  5248  000C1E                     psect	text18
  5249                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/__lldiv.c"
  5250                           	line	7
  5251                           	global	__size_of___lldiv
  5252                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  5253  0000                     	
  5254                           ___lldiv:
  5255  000C1E                     ;incstack = 0
  5256                           	opt	stack 26
  5257                           	line	13
  5258                           	
  5259                           i1l2320:
  5260  000C1E                     	movlw	low(0)
  5261  000C1E  0E00               	movwf	((c:___lldiv@quotient)),c
  5262  000C20  6E15               	movlw	high(0)
  5263  000C22  0E00               	movwf	((c:___lldiv@quotient+1)),c
  5264  000C24  6E16               	movlw	low highword(0)
  5265  000C26  0E00               	movwf	((c:___lldiv@quotient+2)),c
  5266  000C28  6E17               	movlw	high highword(0)
  5267  000C2A  0E00               	movwf	((c:___lldiv@quotient+3)),c
  5268  000C2C  6E18               	line	14
  5269                           	
  5270                           i1l2322:
  5271  000C2E                     	movf	((c:___lldiv@divisor)),c,w
  5272  000C2E  5011               iorwf	((c:___lldiv@divisor+1)),c,w
  5273  000C30  1012               iorwf	((c:___lldiv@divisor+2)),c,w
  5274  000C32  1013               iorwf	((c:___lldiv@divisor+3)),c,w
  5275  000C34  1014               	btfsc	status,2
  5276  000C36  B4D8               	goto	i1u200_21
  5277  000C38  EF20  F006         	goto	i1u200_20
  5278  000C3C  EF22  F006         
  5279                           i1u200_21:
  5280  000C40                     	goto	i1l396
  5281  000C40  EF62  F006         i1u200_20:
  5282  000C44                     	line	15
  5283                           	
  5284                           i1l2324:
  5285  000C44                     	movlw	low(01h)
  5286  000C44  0E01               	movwf	((c:___lldiv@counter)),c
  5287  000C46  6E19               	line	16
  5288                           	goto	i1l2328
  5289  000C48  EF2E  F006         	
  5290                           i1l398:
  5291  000C4C                     	line	17
  5292                           	
  5293                           i1l2326:
  5294  000C4C                     	bcf	status,0
  5295  000C4C  90D8               	rlcf	((c:___lldiv@divisor)),c
  5296  000C4E  3611               	rlcf	((c:___lldiv@divisor+1)),c
  5297  000C50  3612               	rlcf	((c:___lldiv@divisor+2)),c
  5298  000C52  3613               	rlcf	((c:___lldiv@divisor+3)),c
  5299  000C54  3614               	line	18
  5300                           	incf	((c:___lldiv@counter)),c
  5301  000C56  2A19               	goto	i1l2328
  5302  000C58  EF2E  F006         	line	19
  5303                           	
  5304                           i1l397:
  5305  000C5C                     	line	16
  5306                           	
  5307                           i1l2328:
  5308  000C5C                     	
  5309                           	btfss	((c:___lldiv@divisor+3)),c,(31)&7
  5310  000C5C  AE14               	goto	i1u201_21
  5311  000C5E  EF33  F006         	goto	i1u201_20
  5312  000C62  EF35  F006         i1u201_21:
  5313  000C66                     	goto	i1l2326
  5314  000C66  EF26  F006         i1u201_20:
  5315  000C6A                     	goto	i1l2330
  5316  000C6A  EF39  F006         	
  5317                           i1l399:
  5318  000C6E                     	goto	i1l2330
  5319  000C6E  EF39  F006         	line	20
  5320                           	
  5321                           i1l400:
  5322  000C72                     	line	21
  5323                           	
  5324                           i1l2330:
  5325  000C72                     	bcf	status,0
  5326  000C72  90D8               	rlcf	((c:___lldiv@quotient)),c
  5327  000C74  3615               	rlcf	((c:___lldiv@quotient+1)),c
  5328  000C76  3616               	rlcf	((c:___lldiv@quotient+2)),c
  5329  000C78  3617               	rlcf	((c:___lldiv@quotient+3)),c
  5330  000C7A  3618               	line	22
  5331                           	
  5332                           i1l2332:
  5333  000C7C                     		movf	((c:___lldiv@divisor)),c,w
  5334  000C7C  5011               	subwf	((c:___lldiv@dividend)),c,w
  5335  000C7E  5C0D               	movf	((c:___lldiv@divisor+1)),c,w
  5336  000C80  5012               	subwfb	((c:___lldiv@dividend+1)),c,w
  5337  000C82  580E               	movf	((c:___lldiv@divisor+2)),c,w
  5338  000C84  5013               	subwfb	((c:___lldiv@dividend+2)),c,w
  5339  000C86  580F               	movf	((c:___lldiv@divisor+3)),c,w
  5340  000C88  5014               	subwfb	((c:___lldiv@dividend+3)),c,w
  5341  000C8A  5810               	btfss	status,0
  5342  000C8C  A0D8               	goto	i1u202_21
  5343  000C8E  EF4B  F006         	goto	i1u202_20
  5344  000C92  EF4D  F006         
  5345                           i1u202_21:
  5346  000C96                     	goto	i1l2338
  5347  000C96  EF58  F006         i1u202_20:
  5348  000C9A                     	line	23
  5349                           	
  5350                           i1l2334:
  5351  000C9A                     	movf	((c:___lldiv@divisor)),c,w
  5352  000C9A  5011               	subwf	((c:___lldiv@dividend)),c
  5353  000C9C  5E0D               	movf	((c:___lldiv@divisor+1)),c,w
  5354  000C9E  5012               	subwfb	((c:___lldiv@dividend+1)),c
  5355  000CA0  5A0E               	movf	((c:___lldiv@divisor+2)),c,w
  5356  000CA2  5013               	subwfb	((c:___lldiv@dividend+2)),c
  5357  000CA4  5A0F               	movf	((c:___lldiv@divisor+3)),c,w
  5358  000CA6  5014               	subwfb	((c:___lldiv@dividend+3)),c
  5359  000CA8  5A10               	line	24
  5360                           	
  5361                           i1l2336:
  5362  000CAA                     	bsf	(0+(0/8)+(c:___lldiv@quotient)),c,(0)&7
  5363  000CAA  8015               	goto	i1l2338
  5364  000CAC  EF58  F006         	line	25
  5365                           	
  5366                           i1l401:
  5367  000CB0                     	line	26
  5368                           	
  5369                           i1l2338:
  5370  000CB0                     	bcf	status,0
  5371  000CB0  90D8               	rrcf	((c:___lldiv@divisor+3)),c
  5372  000CB2  3214               	rrcf	((c:___lldiv@divisor+2)),c
  5373  000CB4  3213               	rrcf	((c:___lldiv@divisor+1)),c
  5374  000CB6  3212               	rrcf	((c:___lldiv@divisor)),c
  5375  000CB8  3211               	line	27
  5376                           	
  5377                           i1l2340:
  5378  000CBA                     	decfsz	((c:___lldiv@counter)),c
  5379  000CBA  2E19               	
  5380                           	goto	i1l2330
  5381  000CBC  EF39  F006         	goto	i1l396
  5382  000CC0  EF62  F006         	
  5383                           i1l402:
  5384  000CC4                     	line	28
  5385                           	
  5386                           i1l396:
  5387  000CC4                     	line	29
  5388                           	movff	(c:___lldiv@quotient),(c:?___lldiv)
  5389  000CC4  C015  F00D         	movff	(c:___lldiv@quotient+1),(c:?___lldiv+1)
  5390  000CC8  C016  F00E         	movff	(c:___lldiv@quotient+2),(c:?___lldiv+2)
  5391  000CCC  C017  F00F         	movff	(c:___lldiv@quotient+3),(c:?___lldiv+3)
  5392  000CD0  C018  F010         	line	30
  5393                           	
  5394                           i1l403:
  5395  000CD4                     	return	;funcret
  5396  000CD4  0012               	opt stack 0
  5397                           GLOBAL	__end_of___lldiv
  5398                           	__end_of___lldiv:
  5399  000CD6                     	signat	___lldiv,8316
  5400                           	global	_US_send_pulse
  5401                           
  5402 ;; *************** function _US_send_pulse *****************
  5403 ;; Defined at:
  5404 ;;		line 315 in file "main.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;		None
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;  dist            5   31[COMRAM] unsigned char [5]
  5409 ;;  i               1   30[COMRAM] unsigned char 
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  1    wreg      void 
  5412 ;; Registers used:
  5413 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5419 ;;      Params:         0       0       0       0       0       0       0
  5420 ;;      Locals:         6       0       0       0       0       0       0
  5421 ;;      Temps:          4       0       0       0       0       0       0
  5422 ;;      Totals:        10       0       0       0       0       0       0
  5423 ;;Total ram usage:       10 bytes
  5424 ;; Hardware stack levels used:    1
  5425 ;; Hardware stack levels required when called:    4
  5426 ;; This function calls:
  5427 ;;		_US_print_distance
  5428 ;;		___aldiv
  5429 ;;		___lmul
  5430 ;;		_itoa4D
  5431 ;; This function is called by:
  5432 ;;		_Rx_ISR
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           psect	text19,class=CODE,space=0,reloc=2,group=0
  5436                           	file	"main.c"
  5437                           	line	315
  5438                           global __ptext19
  5439                           __ptext19:
  5440  000A78                     psect	text19
  5441                           	file	"main.c"
  5442                           	line	315
  5443                           	global	__size_of_US_send_pulse
  5444                           	__size_of_US_send_pulse	equ	__end_of_US_send_pulse-_US_send_pulse
  5445  0000                     	
  5446                           _US_send_pulse:
  5447  000A78                     ;incstack = 0
  5448                           	opt	stack 22
  5449                           	line	317
  5450                           	
  5451                           i1l2218:
  5452  000A78                     ;main.c: 317:     char dist[5],i=0;
  5453                           	movlw	low(0)
  5454  000A78  0E00               	movwf	((c:US_send_pulse@i)),c
  5455  000A7A  6E1F               	line	318
  5456                           ;main.c: 318:     distance=0;
  5457                           	movlw	high(0)
  5458  000A7C  0E00               	movwf	((c:_distance+1)),c	;volatile
  5459  000A7E  6E66               	movlw	low(0)
  5460  000A80  0E00               	movwf	((c:_distance)),c	;volatile
  5461  000A82  6E65               	line	319
  5462                           	
  5463                           i1l2220:
  5464  000A84                     ;main.c: 319:     LATDbits.LD0=1;
  5465                           	bsf	((c:3980)),c,0	;volatile
  5466  000A84  808C               	line	320
  5467                           	
  5468                           i1l2222:
  5469  000A86                     ;main.c: 320:     _delay((unsigned long)((12)*(20000000/4000000.0)));
  5470                           	opt asmopt_push
  5471                           opt asmopt_off
  5472                           	movlw	20
  5473  000A86  0E14               i1u230_27:
  5474  000A88                     decfsz	wreg,f
  5475  000A88  2EE8               	bra	i1u230_27
  5476  000A8A  D7FE               opt asmopt_pop
  5477                           
  5478                           	line	321
  5479                           	
  5480                           i1l2224:
  5481  000A8C                     ;main.c: 321:     LATDbits.LD0=0;
  5482                           	bcf	((c:3980)),c,0	;volatile
  5483  000A8C  908C               	line	322
  5484                           ;main.c: 322:     while(!PORTDbits.RD1);
  5485                           	goto	i1l215
  5486  000A8E  EF49  F005         	
  5487                           i1l216:
  5488  000A92                     	
  5489                           i1l215:
  5490  000A92                     	btfss	((c:3971)),c,1	;volatile
  5491  000A92  A283               	goto	i1u155_21
  5492  000A94  EF4E  F005         	goto	i1u155_20
  5493  000A98  EF50  F005         i1u155_21:
  5494  000A9C                     	goto	i1l215
  5495  000A9C  EF49  F005         i1u155_20:
  5496  000AA0                     	
  5497                           i1l217:
  5498  000AA0                     	line	323
  5499                           ;main.c: 323:     TMR0ON=1;
  5500                           	bsf	c:(32431/8),(32431)&7	;volatile
  5501  000AA0  8ED5               	line	324
  5502                           ;main.c: 324:     while(PORTDbits.RD1);
  5503                           	goto	i1l218
  5504  000AA2  EF53  F005         	
  5505                           i1l219:
  5506  000AA6                     	
  5507                           i1l218:
  5508  000AA6                     	btfsc	((c:3971)),c,1	;volatile
  5509  000AA6  B283               	goto	i1u156_21
  5510  000AA8  EF58  F005         	goto	i1u156_20
  5511  000AAC  EF5A  F005         i1u156_21:
  5512  000AB0                     	goto	i1l218
  5513  000AB0  EF53  F005         i1u156_20:
  5514  000AB4                     	
  5515                           i1l220:
  5516  000AB4                     	line	325
  5517                           ;main.c: 325:     TMR0ON=0;
  5518                           	bcf	c:(32431/8),(32431)&7	;volatile
  5519  000AB4  9ED5               	line	326
  5520                           	
  5521                           i1l2226:
  5522  000AB6                     ;main.c: 326:     distance+=(100000000/20000000)*(TMR0-26472)*343*4*32/(100000*2);
  5523                           	movlw	low(09898h)
  5524  000AB6  0E98               	movwf	(??_US_send_pulse+0+0)&0ffh,c
  5525  000AB8  6E1B               	movlw	high(09898h)
  5526  000ABA  0E98               	movwf	1+(??_US_send_pulse+0+0)&0ffh,c
  5527  000ABC  6E1C               	movff	(c:4054),??_US_send_pulse+2+0	;volatile
  5528  000ABE  CFD6 F01D          	movff	(c:4054+1),??_US_send_pulse+2+0+1	;volatile
  5529  000AC2  CFD7 F01E          	movf	(??_US_send_pulse+0+0),c,w
  5530  000AC6  501B               	addwf	(??_US_send_pulse+2+0),c
  5531  000AC8  261D               	movf	(??_US_send_pulse+0+1),c,w
  5532  000ACA  501C               	addwfc	(??_US_send_pulse+2+1),c
  5533  000ACC  221E               	movff	??_US_send_pulse+2+0,(c:___lmul@multiplier)
  5534  000ACE  C01D  F001         	movff	??_US_send_pulse+2+1,(c:___lmul@multiplier+1)
  5535  000AD2  C01E  F002         	clrf	((c:___lmul@multiplier+2)),c
  5536  000AD6  6A03               	clrf	((c:___lmul@multiplier+3)),c
  5537  000AD8  6A04               
  5538                           	movlw	low(035980h)
  5539  000ADA  0E80               	movwf	((c:___lmul@multiplicand)),c
  5540  000ADC  6E05               	movlw	high(035980h)
  5541  000ADE  0E59               	movwf	((c:___lmul@multiplicand+1)),c
  5542  000AE0  6E06               	movlw	low highword(035980h)
  5543  000AE2  0E03               	movwf	((c:___lmul@multiplicand+2)),c
  5544  000AE4  6E07               	movlw	high highword(035980h)
  5545  000AE6  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  5546  000AE8  6E08               	call	___lmul	;wreg free
  5547  000AEA  EC0F  F009         	movff	0+?___lmul,(c:___aldiv@dividend)
  5548  000AEE  C001  F00D         	movff	1+?___lmul,(c:___aldiv@dividend+1)
  5549  000AF2  C002  F00E         	movff	2+?___lmul,(c:___aldiv@dividend+2)
  5550  000AF6  C003  F00F         	movff	3+?___lmul,(c:___aldiv@dividend+3)
  5551  000AFA  C004  F010         	
  5552                           	movlw	low(030D40h)
  5553  000AFE  0E40               	movwf	((c:___aldiv@divisor)),c
  5554  000B00  6E11               	movlw	high(030D40h)
  5555  000B02  0E0D               	movwf	((c:___aldiv@divisor+1)),c
  5556  000B04  6E12               	movlw	low highword(030D40h)
  5557  000B06  0E03               	movwf	((c:___aldiv@divisor+2)),c
  5558  000B08  6E13               	movlw	high highword(030D40h)
  5559  000B0A  0E00               	movwf	((c:___aldiv@divisor+3)),c
  5560  000B0C  6E14               	call	___aldiv	;wreg free
  5561  000B0E  ECA2  F004         	movf	(0+?___aldiv),c,w
  5562  000B12  500D               	addwf	((c:_distance)),c	;volatile
  5563  000B14  2665               	movf	(1+?___aldiv),c,w
  5564  000B16  500E               	addwfc	((c:_distance+1)),c	;volatile
  5565  000B18  2266               
  5566                           	line	327
  5567                           	
  5568                           i1l2228:
  5569  000B1A                     ;main.c: 327:     TMR0=26472;
  5570                           	movlw	high(06768h)
  5571  000B1A  0E67               	movwf	((c:4054+1)),c	;volatile
  5572  000B1C  6ED7               	movlw	low(06768h)
  5573  000B1E  0E68               	movwf	((c:4054)),c	;volatile
  5574  000B20  6ED6               	line	328
  5575                           	
  5576                           i1l2230:
  5577  000B22                     ;main.c: 328:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  5578                           	opt asmopt_push
  5579                           opt asmopt_off
  5580                           	movlw	25
  5581  000B22  0E19               i1u231_27:
  5582  000B24                     decfsz	wreg,f
  5583  000B24  2EE8               	bra	i1u231_27
  5584  000B26  D7FE               opt asmopt_pop
  5585                           
  5586                           	line	330
  5587                           	
  5588                           i1l2232:
  5589  000B28                     ;main.c: 330:     US_print_distance(distance);
  5590                           	movff	(c:_distance),(c:US_print_distance@dist)	;volatile
  5591  000B28  C065  F012         	movff	(c:_distance+1),(c:US_print_distance@dist+1)	;volatile
  5592  000B2C  C066  F013         	call	_US_print_distance	;wreg free
  5593  000B30  ECE0  F009         	line	331
  5594                           	
  5595                           i1l2234:
  5596  000B34                     ;main.c: 331:     itoa4D(dist,distance);
  5597                           		movlw	low(US_send_pulse@dist)
  5598  000B34  0E20               	movwf	((c:itoa4D@arr)),c
  5599  000B36  6E0D               	movlw	high(US_send_pulse@dist)
  5600  000B38  0E00               	movwf	((c:itoa4D@arr+1)),c
  5601  000B3A  6E0E               
  5602                           	movff	(c:_distance),(c:itoa4D@num)	;volatile
  5603  000B3C  C065  F00F         	movff	(c:_distance+1),(c:itoa4D@num+1)	;volatile
  5604  000B40  C066  F010         	call	_itoa4D	;wreg free
  5605  000B44  ECE8  F003         	line	332
  5606                           	
  5607                           i1l2236:
  5608  000B48                     ;main.c: 332:     _delay((unsigned long)((20)*(20000000/4000.0)));
  5609                           	opt asmopt_push
  5610                           opt asmopt_off
  5611                           movlw	130
  5612  000B48  0E82               movwf	(??_US_send_pulse+0+0)&0ffh,c,f
  5613  000B4A  6E1B               	movlw	222
  5614  000B4C  0EDE               i1u232_27:
  5615  000B4E                     decfsz	wreg,f
  5616  000B4E  2EE8               	bra	i1u232_27
  5617  000B50  D7FE               	decfsz	(??_US_send_pulse+0+0)&0ffh,c,f
  5618  000B52  2E1B               	bra	i1u232_27
  5619  000B54  D7FC               opt asmopt_pop
  5620                           
  5621                           	goto	i1l221
  5622  000B56  EFAD  F005         	line	333
  5623                           	
  5624                           i1l2238:
  5625  000B5A                     	line	334
  5626                           ;main.c: 333:     return;
  5627                           	
  5628                           i1l221:
  5629  000B5A                     	return	;funcret
  5630  000B5A  0012               	opt stack 0
  5631                           GLOBAL	__end_of_US_send_pulse
  5632                           	__end_of_US_send_pulse:
  5633  000B5C                     	signat	_US_send_pulse,89
  5634                           	global	___lmul
  5635                           
  5636 ;; *************** function ___lmul *****************
  5637 ;; Defined at:
  5638 ;;		line 15 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/Umul32.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;  multiplier      4    0[COMRAM] unsigned long 
  5641 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;  product         4    8[COMRAM] unsigned long 
  5644 ;; Return value:  Size  Location     Type
  5645 ;;                  4    0[COMRAM] unsigned long 
  5646 ;; Registers used:
  5647 ;;		wreg, status,2, status,0
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5653 ;;      Params:         8       0       0       0       0       0       0
  5654 ;;      Locals:         4       0       0       0       0       0       0
  5655 ;;      Temps:          0       0       0       0       0       0       0
  5656 ;;      Totals:        12       0       0       0       0       0       0
  5657 ;;Total ram usage:       12 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		_US_send_pulse
  5663 ;;		_Rx_ISR
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           psect	text20,class=CODE,space=0,reloc=2,group=1
  5667                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/Umul32.c"
  5668                           	line	15
  5669                           global __ptext20
  5670                           __ptext20:
  5671  00121E                     psect	text20
  5672                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/Umul32.c"
  5673                           	line	15
  5674                           	global	__size_of___lmul
  5675                           	__size_of___lmul	equ	__end_of___lmul-___lmul
  5676  0000                     	
  5677                           ___lmul:
  5678  00121E                     ;incstack = 0
  5679                           	opt	stack 26
  5680                           	line	119
  5681                           	
  5682                           i1l2094:
  5683  00121E                     	movlw	low(0)
  5684  00121E  0E00               	movwf	((c:___lmul@product)),c
  5685  001220  6E09               	movlw	high(0)
  5686  001222  0E00               	movwf	((c:___lmul@product+1)),c
  5687  001224  6E0A               	movlw	low highword(0)
  5688  001226  0E00               	movwf	((c:___lmul@product+2)),c
  5689  001228  6E0B               	movlw	high highword(0)
  5690  00122A  0E00               	movwf	((c:___lmul@product+3)),c
  5691  00122C  6E0C               	goto	i1l2096
  5692  00122E  EF19  F009         	line	120
  5693                           	
  5694                           i1l378:
  5695  001232                     	line	121
  5696                           	
  5697                           i1l2096:
  5698  001232                     	
  5699                           	btfss	((c:___lmul@multiplier)),c,(0)&7
  5700  001232  A001               	goto	i1u142_21
  5701  001234  EF1E  F009         	goto	i1u142_20
  5702  001238  EF20  F009         i1u142_21:
  5703  00123C                     	goto	i1l2100
  5704  00123C  EF2A  F009         i1u142_20:
  5705  001240                     	line	122
  5706                           	
  5707                           i1l2098:
  5708  001240                     	movf	((c:___lmul@multiplicand)),c,w
  5709  001240  5005               	addwf	((c:___lmul@product)),c
  5710  001242  2609               	movf	((c:___lmul@multiplicand+1)),c,w
  5711  001244  5006               	addwfc	((c:___lmul@product+1)),c
  5712  001246  220A               	movf	((c:___lmul@multiplicand+2)),c,w
  5713  001248  5007               	addwfc	((c:___lmul@product+2)),c
  5714  00124A  220B               	movf	((c:___lmul@multiplicand+3)),c,w
  5715  00124C  5008               	addwfc	((c:___lmul@product+3)),c
  5716  00124E  220C               	goto	i1l2100
  5717  001250  EF2A  F009         	
  5718                           i1l379:
  5719  001254                     	line	123
  5720                           	
  5721                           i1l2100:
  5722  001254                     	bcf	status,0
  5723  001254  90D8               	rlcf	((c:___lmul@multiplicand)),c
  5724  001256  3605               	rlcf	((c:___lmul@multiplicand+1)),c
  5725  001258  3606               	rlcf	((c:___lmul@multiplicand+2)),c
  5726  00125A  3607               	rlcf	((c:___lmul@multiplicand+3)),c
  5727  00125C  3608               	line	124
  5728                           	
  5729                           i1l2102:
  5730  00125E                     	bcf	status,0
  5731  00125E  90D8               	rrcf	((c:___lmul@multiplier+3)),c
  5732  001260  3204               	rrcf	((c:___lmul@multiplier+2)),c
  5733  001262  3203               	rrcf	((c:___lmul@multiplier+1)),c
  5734  001264  3202               	rrcf	((c:___lmul@multiplier)),c
  5735  001266  3201               	line	125
  5736                           	movf	((c:___lmul@multiplier)),c,w
  5737  001268  5001               iorwf	((c:___lmul@multiplier+1)),c,w
  5738  00126A  1002               iorwf	((c:___lmul@multiplier+2)),c,w
  5739  00126C  1003               iorwf	((c:___lmul@multiplier+3)),c,w
  5740  00126E  1004               	btfss	status,2
  5741  001270  A4D8               	goto	i1u143_21
  5742  001272  EF3D  F009         	goto	i1u143_20
  5743  001276  EF3F  F009         
  5744                           i1u143_21:
  5745  00127A                     	goto	i1l2096
  5746  00127A  EF19  F009         i1u143_20:
  5747  00127E                     	
  5748                           i1l380:
  5749  00127E                     	line	128
  5750                           	movff	(c:___lmul@product),(c:?___lmul)
  5751  00127E  C009  F001         	movff	(c:___lmul@product+1),(c:?___lmul+1)
  5752  001282  C00A  F002         	movff	(c:___lmul@product+2),(c:?___lmul+2)
  5753  001286  C00B  F003         	movff	(c:___lmul@product+3),(c:?___lmul+3)
  5754  00128A  C00C  F004         	line	129
  5755                           	
  5756                           i1l381:
  5757  00128E                     	return	;funcret
  5758  00128E  0012               	opt stack 0
  5759                           GLOBAL	__end_of___lmul
  5760                           	__end_of___lmul:
  5761  001290                     	signat	___lmul,8316
  5762                           	global	___aldiv
  5763                           
  5764 ;; *************** function ___aldiv *****************
  5765 ;; Defined at:
  5766 ;;		line 7 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/aldiv.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;  dividend        4   12[COMRAM] long 
  5769 ;;  divisor         4   16[COMRAM] long 
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;  quotient        4   22[COMRAM] long 
  5772 ;;  sign            1   21[COMRAM] unsigned char 
  5773 ;;  counter         1   20[COMRAM] unsigned char 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  4   12[COMRAM] long 
  5776 ;; Registers used:
  5777 ;;		wreg, status,2, status,0
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5783 ;;      Params:         8       0       0       0       0       0       0
  5784 ;;      Locals:         6       0       0       0       0       0       0
  5785 ;;      Temps:          0       0       0       0       0       0       0
  5786 ;;      Totals:        14       0       0       0       0       0       0
  5787 ;;Total ram usage:       14 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; This function calls:
  5790 ;;		Nothing
  5791 ;; This function is called by:
  5792 ;;		_US_send_pulse
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           psect	text21,class=CODE,space=0,reloc=2,group=1
  5796                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/aldiv.c"
  5797                           	line	7
  5798                           global __ptext21
  5799                           __ptext21:
  5800  000944                     psect	text21
  5801                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/aldiv.c"
  5802                           	line	7
  5803                           	global	__size_of___aldiv
  5804                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  5805  0000                     	
  5806                           ___aldiv:
  5807  000944                     ;incstack = 0
  5808                           	opt	stack 25
  5809                           	line	13
  5810                           	
  5811                           i1l2104:
  5812  000944                     	movlw	low(0)
  5813  000944  0E00               	movwf	((c:___aldiv@sign)),c
  5814  000946  6E16               	line	14
  5815                           	
  5816                           i1l2106:
  5817  000948                     	btfsc	((c:___aldiv@divisor+3)),c,7
  5818  000948  BE14               	goto	i1u144_20
  5819  00094A  EFAB  F004         	goto	i1u144_21
  5820  00094E  EFA9  F004         
  5821                           i1u144_21:
  5822  000952                     	goto	i1l2112
  5823  000952  EFB7  F004         i1u144_20:
  5824  000956                     	line	15
  5825                           	
  5826                           i1l2108:
  5827  000956                     	comf	((c:___aldiv@divisor+3)),c
  5828  000956  1E14               	comf	((c:___aldiv@divisor+2)),c
  5829  000958  1E13               	comf	((c:___aldiv@divisor+1)),c
  5830  00095A  1E12               	negf	((c:___aldiv@divisor)),c
  5831  00095C  6C11               	movlw	0
  5832  00095E  0E00               	addwfc	((c:___aldiv@divisor+1)),c
  5833  000960  2212               	addwfc	((c:___aldiv@divisor+2)),c
  5834  000962  2213               	addwfc	((c:___aldiv@divisor+3)),c
  5835  000964  2214               	line	16
  5836                           	
  5837                           i1l2110:
  5838  000966                     	movlw	low(01h)
  5839  000966  0E01               	movwf	((c:___aldiv@sign)),c
  5840  000968  6E16               	goto	i1l2112
  5841  00096A  EFB7  F004         	line	17
  5842                           	
  5843                           i1l438:
  5844  00096E                     	line	18
  5845                           	
  5846                           i1l2112:
  5847  00096E                     	btfsc	((c:___aldiv@dividend+3)),c,7
  5848  00096E  BE10               	goto	i1u145_20
  5849  000970  EFBE  F004         	goto	i1u145_21
  5850  000974  EFBC  F004         
  5851                           i1u145_21:
  5852  000978                     	goto	i1l2118
  5853  000978  EFCA  F004         i1u145_20:
  5854  00097C                     	line	19
  5855                           	
  5856                           i1l2114:
  5857  00097C                     	comf	((c:___aldiv@dividend+3)),c
  5858  00097C  1E10               	comf	((c:___aldiv@dividend+2)),c
  5859  00097E  1E0F               	comf	((c:___aldiv@dividend+1)),c
  5860  000980  1E0E               	negf	((c:___aldiv@dividend)),c
  5861  000982  6C0D               	movlw	0
  5862  000984  0E00               	addwfc	((c:___aldiv@dividend+1)),c
  5863  000986  220E               	addwfc	((c:___aldiv@dividend+2)),c
  5864  000988  220F               	addwfc	((c:___aldiv@dividend+3)),c
  5865  00098A  2210               	line	20
  5866                           	
  5867                           i1l2116:
  5868  00098C                     	movlw	(01h)&0ffh
  5869  00098C  0E01               	xorwf	((c:___aldiv@sign)),c
  5870  00098E  1A16               	goto	i1l2118
  5871  000990  EFCA  F004         	line	21
  5872                           	
  5873                           i1l439:
  5874  000994                     	line	22
  5875                           	
  5876                           i1l2118:
  5877  000994                     	movlw	low(0)
  5878  000994  0E00               	movwf	((c:___aldiv@quotient)),c
  5879  000996  6E17               	movlw	high(0)
  5880  000998  0E00               	movwf	((c:___aldiv@quotient+1)),c
  5881  00099A  6E18               	movlw	low highword(0)
  5882  00099C  0E00               	movwf	((c:___aldiv@quotient+2)),c
  5883  00099E  6E19               	movlw	high highword(0)
  5884  0009A0  0E00               	movwf	((c:___aldiv@quotient+3)),c
  5885  0009A2  6E1A               	line	23
  5886                           	
  5887                           i1l2120:
  5888  0009A4                     	movf	((c:___aldiv@divisor)),c,w
  5889  0009A4  5011               iorwf	((c:___aldiv@divisor+1)),c,w
  5890  0009A6  1012               iorwf	((c:___aldiv@divisor+2)),c,w
  5891  0009A8  1013               iorwf	((c:___aldiv@divisor+3)),c,w
  5892  0009AA  1014               	btfsc	status,2
  5893  0009AC  B4D8               	goto	i1u146_21
  5894  0009AE  EFDB  F004         	goto	i1u146_20
  5895  0009B2  EFDD  F004         
  5896                           i1u146_21:
  5897  0009B6                     	goto	i1l2140
  5898  0009B6  EF1F  F005         i1u146_20:
  5899  0009BA                     	line	24
  5900                           	
  5901                           i1l2122:
  5902  0009BA                     	movlw	low(01h)
  5903  0009BA  0E01               	movwf	((c:___aldiv@counter)),c
  5904  0009BC  6E15               	line	25
  5905                           	goto	i1l2126
  5906  0009BE  EFE9  F004         	
  5907                           i1l442:
  5908  0009C2                     	line	26
  5909                           	
  5910                           i1l2124:
  5911  0009C2                     	bcf	status,0
  5912  0009C2  90D8               	rlcf	((c:___aldiv@divisor)),c
  5913  0009C4  3611               	rlcf	((c:___aldiv@divisor+1)),c
  5914  0009C6  3612               	rlcf	((c:___aldiv@divisor+2)),c
  5915  0009C8  3613               	rlcf	((c:___aldiv@divisor+3)),c
  5916  0009CA  3614               	line	27
  5917                           	incf	((c:___aldiv@counter)),c
  5918  0009CC  2A15               	goto	i1l2126
  5919  0009CE  EFE9  F004         	line	28
  5920                           	
  5921                           i1l441:
  5922  0009D2                     	line	25
  5923                           	
  5924                           i1l2126:
  5925  0009D2                     	
  5926                           	btfss	((c:___aldiv@divisor+3)),c,(31)&7
  5927  0009D2  AE14               	goto	i1u147_21
  5928  0009D4  EFEE  F004         	goto	i1u147_20
  5929  0009D8  EFF0  F004         i1u147_21:
  5930  0009DC                     	goto	i1l2124
  5931  0009DC  EFE1  F004         i1u147_20:
  5932  0009E0                     	goto	i1l2128
  5933  0009E0  EFF4  F004         	
  5934                           i1l443:
  5935  0009E4                     	goto	i1l2128
  5936  0009E4  EFF4  F004         	line	29
  5937                           	
  5938                           i1l444:
  5939  0009E8                     	line	30
  5940                           	
  5941                           i1l2128:
  5942  0009E8                     	bcf	status,0
  5943  0009E8  90D8               	rlcf	((c:___aldiv@quotient)),c
  5944  0009EA  3617               	rlcf	((c:___aldiv@quotient+1)),c
  5945  0009EC  3618               	rlcf	((c:___aldiv@quotient+2)),c
  5946  0009EE  3619               	rlcf	((c:___aldiv@quotient+3)),c
  5947  0009F0  361A               	line	31
  5948                           	
  5949                           i1l2130:
  5950  0009F2                     		movf	((c:___aldiv@divisor)),c,w
  5951  0009F2  5011               	subwf	((c:___aldiv@dividend)),c,w
  5952  0009F4  5C0D               	movf	((c:___aldiv@divisor+1)),c,w
  5953  0009F6  5012               	subwfb	((c:___aldiv@dividend+1)),c,w
  5954  0009F8  580E               	movf	((c:___aldiv@divisor+2)),c,w
  5955  0009FA  5013               	subwfb	((c:___aldiv@dividend+2)),c,w
  5956  0009FC  580F               	movf	((c:___aldiv@divisor+3)),c,w
  5957  0009FE  5014               	subwfb	((c:___aldiv@dividend+3)),c,w
  5958  000A00  5810               	btfss	status,0
  5959  000A02  A0D8               	goto	i1u148_21
  5960  000A04  EF06  F005         	goto	i1u148_20
  5961  000A08  EF08  F005         
  5962                           i1u148_21:
  5963  000A0C                     	goto	i1l2136
  5964  000A0C  EF13  F005         i1u148_20:
  5965  000A10                     	line	32
  5966                           	
  5967                           i1l2132:
  5968  000A10                     	movf	((c:___aldiv@divisor)),c,w
  5969  000A10  5011               	subwf	((c:___aldiv@dividend)),c
  5970  000A12  5E0D               	movf	((c:___aldiv@divisor+1)),c,w
  5971  000A14  5012               	subwfb	((c:___aldiv@dividend+1)),c
  5972  000A16  5A0E               	movf	((c:___aldiv@divisor+2)),c,w
  5973  000A18  5013               	subwfb	((c:___aldiv@dividend+2)),c
  5974  000A1A  5A0F               	movf	((c:___aldiv@divisor+3)),c,w
  5975  000A1C  5014               	subwfb	((c:___aldiv@dividend+3)),c
  5976  000A1E  5A10               	line	33
  5977                           	
  5978                           i1l2134:
  5979  000A20                     	bsf	(0+(0/8)+(c:___aldiv@quotient)),c,(0)&7
  5980  000A20  8017               	goto	i1l2136
  5981  000A22  EF13  F005         	line	34
  5982                           	
  5983                           i1l445:
  5984  000A26                     	line	35
  5985                           	
  5986                           i1l2136:
  5987  000A26                     	bcf	status,0
  5988  000A26  90D8               	rrcf	((c:___aldiv@divisor+3)),c
  5989  000A28  3214               	rrcf	((c:___aldiv@divisor+2)),c
  5990  000A2A  3213               	rrcf	((c:___aldiv@divisor+1)),c
  5991  000A2C  3212               	rrcf	((c:___aldiv@divisor)),c
  5992  000A2E  3211               	line	36
  5993                           	
  5994                           i1l2138:
  5995  000A30                     	decfsz	((c:___aldiv@counter)),c
  5996  000A30  2E15               	
  5997                           	goto	i1l2128
  5998  000A32  EFF4  F004         	goto	i1l2140
  5999  000A36  EF1F  F005         	
  6000                           i1l446:
  6001  000A3A                     	goto	i1l2140
  6002  000A3A  EF1F  F005         	line	37
  6003                           	
  6004                           i1l440:
  6005  000A3E                     	line	38
  6006                           	
  6007                           i1l2140:
  6008  000A3E                     	movf	((c:___aldiv@sign)),c,w
  6009  000A3E  5016               	btfsc	status,2
  6010  000A40  B4D8               	goto	i1u149_21
  6011  000A42  EF25  F005         	goto	i1u149_20
  6012  000A46  EF27  F005         i1u149_21:
  6013  000A4A                     	goto	i1l2144
  6014  000A4A  EF31  F005         i1u149_20:
  6015  000A4E                     	line	39
  6016                           	
  6017                           i1l2142:
  6018  000A4E                     	comf	((c:___aldiv@quotient+3)),c
  6019  000A4E  1E1A               	comf	((c:___aldiv@quotient+2)),c
  6020  000A50  1E19               	comf	((c:___aldiv@quotient+1)),c
  6021  000A52  1E18               	negf	((c:___aldiv@quotient)),c
  6022  000A54  6C17               	movlw	0
  6023  000A56  0E00               	addwfc	((c:___aldiv@quotient+1)),c
  6024  000A58  2218               	addwfc	((c:___aldiv@quotient+2)),c
  6025  000A5A  2219               	addwfc	((c:___aldiv@quotient+3)),c
  6026  000A5C  221A               	goto	i1l2144
  6027  000A5E  EF31  F005         	
  6028                           i1l447:
  6029  000A62                     	line	40
  6030                           	
  6031                           i1l2144:
  6032  000A62                     	movff	(c:___aldiv@quotient),(c:?___aldiv)
  6033  000A62  C017  F00D         	movff	(c:___aldiv@quotient+1),(c:?___aldiv+1)
  6034  000A66  C018  F00E         	movff	(c:___aldiv@quotient+2),(c:?___aldiv+2)
  6035  000A6A  C019  F00F         	movff	(c:___aldiv@quotient+3),(c:?___aldiv+3)
  6036  000A6E  C01A  F010         	goto	i1l448
  6037  000A72  EF3B  F005         	
  6038                           i1l2146:
  6039  000A76                     	line	41
  6040                           	
  6041                           i1l448:
  6042  000A76                     	return	;funcret
  6043  000A76  0012               	opt stack 0
  6044                           GLOBAL	__end_of___aldiv
  6045                           	__end_of___aldiv:
  6046  000A78                     	signat	___aldiv,8316
  6047                           	global	_US_print_distance
  6048                           
  6049 ;; *************** function _US_print_distance *****************
  6050 ;; Defined at:
  6051 ;;		line 336 in file "main.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;  dist            2   17[COMRAM] unsigned int 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;  dist4D          5   19[COMRAM] unsigned char [5]
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  1    wreg      void 
  6058 ;; Registers used:
  6059 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6065 ;;      Params:         2       0       0       0       0       0       0
  6066 ;;      Locals:         5       0       0       0       0       0       0
  6067 ;;      Temps:          0       0       0       0       0       0       0
  6068 ;;      Totals:         7       0       0       0       0       0       0
  6069 ;;Total ram usage:        7 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:    3
  6072 ;; This function calls:
  6073 ;;		_itoa4D
  6074 ;;		i1_BT_tx_char
  6075 ;;		i1_BT_tx_string
  6076 ;;		i1_LCD_command
  6077 ;;		i1_LCD_string_xy
  6078 ;; This function is called by:
  6079 ;;		_US_send_pulse
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           psect	text22,class=CODE,space=0,reloc=2,group=0
  6083                           	file	"main.c"
  6084                           	line	336
  6085                           global __ptext22
  6086                           __ptext22:
  6087  0013C0                     psect	text22
  6088                           	file	"main.c"
  6089                           	line	336
  6090                           	global	__size_of_US_print_distance
  6091                           	__size_of_US_print_distance	equ	__end_of_US_print_distance-_US_print_distance
  6092  0000                     	
  6093                           _US_print_distance:
  6094  0013C0                     ;incstack = 0
  6095                           	opt	stack 22
  6096                           	line	339
  6097                           	
  6098                           i1l2058:
  6099  0013C0                     ;main.c: 336: void US_print_distance(unsigned int dist);main.c: 337: {;main.c: 338:     
                                 char dist4D[5];;main.c: 339:     itoa4D(dist4D,dist);
  6100                           		movlw	low(US_print_distance@dist4D)
  6101  0013C0  0E14               	movwf	((c:itoa4D@arr)),c
  6102  0013C2  6E0D               	movlw	high(US_print_distance@dist4D)
  6103  0013C4  0E00               	movwf	((c:itoa4D@arr+1)),c
  6104  0013C6  6E0E               
  6105                           	movff	(c:US_print_distance@dist),(c:itoa4D@num)
  6106  0013C8  C012  F00F         	movff	(c:US_print_distance@dist+1),(c:itoa4D@num+1)
  6107  0013CC  C013  F010         	call	_itoa4D	;wreg free
  6108  0013D0  ECE8  F003         	line	340
  6109                           	
  6110                           i1l2060:
  6111  0013D4                     ;main.c: 340:     LCD_command(0x01);
  6112                           	movlw	(01h)&0ffh
  6113  0013D4  0E01               	
  6114                           	call	i1_LCD_command
  6115  0013D6  ECD5  F008         	line	341
  6116                           	
  6117                           i1l2062:
  6118  0013DA                     ;main.c: 341:     LCD_string_xy(1,1,"Distance (mm):");
  6119                           	movlw	low(01h)
  6120  0013DA  0E01               	movwf	((c:i1LCD_string_xy@pos)),c
  6121  0013DC  6E07               		movlw	low(STR_7)
  6122  0013DE  0EB1               	movwf	((c:i1LCD_string_xy@msg)),c
  6123  0013E0  6E08               	movlw	high(STR_7)
  6124  0013E2  0E7F               	movwf	((c:i1LCD_string_xy@msg+1)),c
  6125  0013E4  6E09               
  6126                           	movlw	(01h)&0ffh
  6127  0013E6  0E01               	
  6128                           	call	i1_LCD_string_xy
  6129  0013E8  EC11  F00A         	line	342
  6130                           	
  6131                           i1l2064:
  6132  0013EC                     ;main.c: 342:     LCD_string_xy(2,7,dist4D);
  6133                           	movlw	low(07h)
  6134  0013EC  0E07               	movwf	((c:i1LCD_string_xy@pos)),c
  6135  0013EE  6E07               		movlw	low(US_print_distance@dist4D)
  6136  0013F0  0E14               	movwf	((c:i1LCD_string_xy@msg)),c
  6137  0013F2  6E08               	movlw	high(US_print_distance@dist4D)
  6138  0013F4  0E00               	movwf	((c:i1LCD_string_xy@msg+1)),c
  6139  0013F6  6E09               
  6140                           	movlw	(02h)&0ffh
  6141  0013F8  0E02               	
  6142                           	call	i1_LCD_string_xy
  6143  0013FA  EC11  F00A         	line	343
  6144                           	
  6145                           i1l2066:
  6146  0013FE                     ;main.c: 343:     BT_tx_string("Distance (mm):");
  6147                           		movlw	low(STR_8)
  6148  0013FE  0EB1               	movwf	((c:i1BT_tx_string@msg)),c
  6149  001400  6E02               	movlw	high(STR_8)
  6150  001402  0E7F               	movwf	((c:i1BT_tx_string@msg+1)),c
  6151  001404  6E03               
  6152                           	call	i1_BT_tx_string	;wreg free
  6153  001406  EC7C  F009         	line	344
  6154                           	
  6155                           i1l2068:
  6156  00140A                     ;main.c: 344:     BT_tx_string(dist4D);
  6157                           		movlw	low(US_print_distance@dist4D)
  6158  00140A  0E14               	movwf	((c:i1BT_tx_string@msg)),c
  6159  00140C  6E02               	movlw	high(US_print_distance@dist4D)
  6160  00140E  0E00               	movwf	((c:i1BT_tx_string@msg+1)),c
  6161  001410  6E03               
  6162                           	call	i1_BT_tx_string	;wreg free
  6163  001412  EC7C  F009         	line	345
  6164                           	
  6165                           i1l2070:
  6166  001416                     ;main.c: 345:     BT_tx_char('\n');
  6167                           	movlw	(0Ah)&0ffh
  6168  001416  0E0A               	
  6169                           	call	i1_BT_tx_char
  6170  001418  EC09  F00C         	goto	i1l224
  6171  00141C  EF10  F00A         	line	346
  6172                           	
  6173                           i1l2072:
  6174  001420                     	line	347
  6175                           ;main.c: 346:     return;
  6176                           	
  6177                           i1l224:
  6178  001420                     	return	;funcret
  6179  001420  0012               	opt stack 0
  6180                           GLOBAL	__end_of_US_print_distance
  6181                           	__end_of_US_print_distance:
  6182  001422                     	signat	_US_print_distance,4217
  6183                           	global	i1_LCD_string_xy
  6184                           
  6185 ;; *************** function i1_LCD_string_xy *****************
  6186 ;; Defined at:
  6187 ;;		line 262 in file "main.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;  row             1    wreg     unsigned char 
  6190 ;;  pos             1    6[COMRAM] unsigned char 
  6191 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  6192 ;;		 -> STR_11(5), Rx_ISR@RxMessage(32), STR_7(15), US_print_distance@dist4D(5), 
  6193 ;;		 -> STR_5(13), STR_3(16), STR_1(14), 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  row             1   10[COMRAM] unsigned char 
  6196 ;;  LCD_string_x    1   11[COMRAM] unsigned char 
  6197 ;; Return value:  Size  Location     Type
  6198 ;;                  1    wreg      void 
  6199 ;; Registers used:
  6200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6201 ;; Tracked objects:
  6202 ;;		On entry : 0/0
  6203 ;;		On exit  : 0/0
  6204 ;;		Unchanged: 0/0
  6205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6206 ;;      Params:         3       0       0       0       0       0       0
  6207 ;;      Locals:         2       0       0       0       0       0       0
  6208 ;;      Temps:          1       0       0       0       0       0       0
  6209 ;;      Totals:         6       0       0       0       0       0       0
  6210 ;;Total ram usage:        6 bytes
  6211 ;; Hardware stack levels used:    1
  6212 ;; Hardware stack levels required when called:    2
  6213 ;; This function calls:
  6214 ;;		i1_LCD_command
  6215 ;;		i1_LCD_string
  6216 ;; This function is called by:
  6217 ;;		_US_print_distance
  6218 ;;		_Rx_ISR
  6219 ;; This function uses a non-reentrant model
  6220 ;;
  6221                           psect	text23,class=CODE,space=0,reloc=2,group=0
  6222                           	line	262
  6223                           global __ptext23
  6224                           __ptext23:
  6225  001422                     psect	text23
  6226                           	file	"main.c"
  6227                           	line	262
  6228                           	global	__size_ofi1_LCD_string_xy
  6229                           	__size_ofi1_LCD_string_xy	equ	__end_ofi1_LCD_string_xy-i1_LCD_string_xy
  6230  0000                     	
  6231                           i1_LCD_string_xy:
  6232  001422                     ;incstack = 0
  6233                           	opt	stack 24
  6234                           ;i1LCD_string_xy@row stored from wreg
  6235                           	movwf	((c:i1LCD_string_xy@row)),c
  6236  001422  6E0B               	line	264
  6237                           	
  6238                           i1l1998:
  6239  001424                     ;main.c: 262: void LCD_string_xy(char row,char pos,const char *msg);main.c: 263: {;main.
                                 c: 264:     char location=0;
  6240                           	movlw	low(0)
  6241  001424  0E00               	movwf	((c:i1LCD_string_xy@location)),c
  6242  001426  6E0C               	line	265
  6243                           	
  6244                           i1l2000:
  6245  001428                     ;main.c: 265:     if(row<=1)
  6246                           		movlw	02h-0
  6247  001428  0E02               	cpfslt	((c:i1LCD_string_xy@row)),c
  6248  00142A  600B               	goto	i1u126_21
  6249  00142C  EF1A  F00A         	goto	i1u126_20
  6250  001430  EF1C  F00A         
  6251                           i1u126_21:
  6252  001434                     	goto	i1l2006
  6253  001434  EF29  F00A         i1u126_20:
  6254  001438                     	line	267
  6255                           	
  6256                           i1l2002:
  6257  001438                     ;main.c: 266:     {;main.c: 267:         location=((0x80) | ((pos) & 0x0f))-1;
  6258                           	movff	(c:i1LCD_string_xy@pos),??i1_LCD_string_xy+0+0
  6259  001438  C007  F00A         	movlw	0Fh
  6260  00143C  0E0F               	andwf	(??i1_LCD_string_xy+0+0),c
  6261  00143E  160A               	movlw	080h
  6262  001440  0E80               	iorwf	(??i1_LCD_string_xy+0+0),c
  6263  001442  120A               	decf	(??i1_LCD_string_xy+0+0),c,w
  6264  001444  040A               	movwf	((c:i1LCD_string_xy@location)),c
  6265  001446  6E0C               	line	268
  6266                           	
  6267                           i1l2004:
  6268  001448                     ;main.c: 268:         LCD_command(location);
  6269                           	movf	((c:i1LCD_string_xy@location)),c,w
  6270  001448  500C               	
  6271                           	call	i1_LCD_command
  6272  00144A  ECD5  F008         	line	269
  6273                           ;main.c: 269:     }
  6274                           	goto	i1l2010
  6275  00144E  EF36  F00A         	line	270
  6276                           ;main.c: 270:     else
  6277                           	
  6278                           i1l204:
  6279  001452                     	line	272
  6280                           	
  6281                           i1l2006:
  6282  001452                     ;main.c: 271:     {;main.c: 272:         location=((0xC0) | ((pos) & 0x0f))-1;
  6283                           	movff	(c:i1LCD_string_xy@pos),??i1_LCD_string_xy+0+0
  6284  001452  C007  F00A         	movlw	0Fh
  6285  001456  0E0F               	andwf	(??i1_LCD_string_xy+0+0),c
  6286  001458  160A               	movlw	0C0h
  6287  00145A  0EC0               	iorwf	(??i1_LCD_string_xy+0+0),c
  6288  00145C  120A               	decf	(??i1_LCD_string_xy+0+0),c,w
  6289  00145E  040A               	movwf	((c:i1LCD_string_xy@location)),c
  6290  001460  6E0C               	line	273
  6291                           	
  6292                           i1l2008:
  6293  001462                     ;main.c: 273:         LCD_command(location);
  6294                           	movf	((c:i1LCD_string_xy@location)),c,w
  6295  001462  500C               	
  6296                           	call	i1_LCD_command
  6297  001464  ECD5  F008         	goto	i1l2010
  6298  001468  EF36  F00A         	line	274
  6299                           ;main.c: 274:     }
  6300                           	
  6301                           i1l205:
  6302  00146C                     	line	275
  6303                           	
  6304                           i1l2010:
  6305  00146C                     ;main.c: 275:     LCD_string(msg);
  6306                           		movff	(c:i1LCD_string_xy@msg),(c:i1LCD_string@msg)
  6307  00146C  C008  F004         	movff	(c:i1LCD_string_xy@msg+1),(c:i1LCD_string@msg+1)
  6308  001470  C009  F005         
  6309                           	call	i1_LCD_string	;wreg free
  6310  001474  EC5B  F007         	goto	i1l206
  6311  001478  EF3E  F00A         	line	276
  6312                           	
  6313                           i1l2012:
  6314  00147C                     	line	277
  6315                           ;main.c: 276:     return;
  6316                           	
  6317                           i1l206:
  6318  00147C                     	return	;funcret
  6319  00147C  0012               	opt stack 0
  6320                           GLOBAL	__end_ofi1_LCD_string_xy
  6321                           	__end_ofi1_LCD_string_xy:
  6322  00147E                     	signat	i1_LCD_string_xy,89
  6323                           	global	i1_LCD_string
  6324                           
  6325 ;; *************** function i1_LCD_string *****************
  6326 ;; Defined at:
  6327 ;;		line 249 in file "main.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  msg             2    3[COMRAM] PTR const unsigned char 
  6330 ;;		 -> STR_11(5), Rx_ISR@RxMessage(32), STR_7(15), US_print_distance@dist4D(5), 
  6331 ;;		 -> STR_5(13), STR_3(16), STR_1(14), 
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;  LCD_string      1    5[COMRAM] unsigned char 
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  1    wreg      void 
  6336 ;; Registers used:
  6337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6343 ;;      Params:         2       0       0       0       0       0       0
  6344 ;;      Locals:         1       0       0       0       0       0       0
  6345 ;;      Temps:          0       0       0       0       0       0       0
  6346 ;;      Totals:         3       0       0       0       0       0       0
  6347 ;;Total ram usage:        3 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; Hardware stack levels required when called:    1
  6350 ;; This function calls:
  6351 ;;		i1_LCD_char
  6352 ;;		i1_LCD_command
  6353 ;; This function is called by:
  6354 ;;		i1_LCD_string_xy
  6355 ;; This function uses a non-reentrant model
  6356 ;;
  6357                           psect	text24,class=CODE,space=0,reloc=2,group=0
  6358                           	line	249
  6359                           global __ptext24
  6360                           __ptext24:
  6361  000EB6                     psect	text24
  6362                           	file	"main.c"
  6363                           	line	249
  6364                           	global	__size_ofi1_LCD_string
  6365                           	__size_ofi1_LCD_string	equ	__end_ofi1_LCD_string-i1_LCD_string
  6366  0000                     	
  6367                           i1_LCD_string:
  6368  000EB6                     ;incstack = 0
  6369                           	opt	stack 24
  6370                           	line	251
  6371                           	
  6372                           i1l1900:
  6373  000EB6                     ;main.c: 249: void LCD_string(const char *msg);main.c: 250: {;main.c: 251:     unsigned 
                                 char i=0;
  6374                           	movlw	low(0)
  6375  000EB6  0E00               	movwf	((c:i1LCD_string@i)),c
  6376  000EB8  6E06               	line	252
  6377                           ;main.c: 252:     while((*msg)!=0)
  6378                           	goto	i1l1912
  6379  000EBA  EF84  F007         	
  6380                           i1l198:
  6381  000EBE                     	line	254
  6382                           	
  6383                           i1l1902:
  6384  000EBE                     ;main.c: 253:     {;main.c: 254:         LCD_char(*msg);
  6385                           	movff	(c:i1LCD_string@msg),tblptrl
  6386  000EBE  C004  FFF6         	movff	(c:i1LCD_string@msg+1),tblptrh
  6387  000EC2  C005  FFF7         	clrf	tblptru
  6388  000EC6  6AF8               	
  6389                           	movlw	high __ramtop-1
  6390  000EC8  0E05               	cpfsgt	tblptrh
  6391  000ECA  64F7               	bra	i1u118_27
  6392  000ECC  D003               	tblrd	*
  6393  000ECE  0008               	
  6394                           	movf	tablat,w
  6395  000ED0  50F5               	bra	i1u118_20
  6396  000ED2  D005               i1u118_27:
  6397  000ED4                     	movff	tblptrl,fsr0l
  6398  000ED4  CFF6 FFE9          	movff	tblptrh,fsr0h
  6399  000ED8  CFF7 FFEA          	movf	indf0,w
  6400  000EDC  50EF               i1u118_20:
  6401  000EDE                     	
  6402                           	call	i1_LCD_char
  6403  000EDE  EC9B  F008         	line	255
  6404                           	
  6405                           i1l1904:
  6406  000EE2                     ;main.c: 255:         msg++;
  6407                           	infsnz	((c:i1LCD_string@msg)),c
  6408  000EE2  4A04               	incf	((c:i1LCD_string@msg+1)),c
  6409  000EE4  2A05               	line	256
  6410                           	
  6411                           i1l1906:
  6412  000EE6                     ;main.c: 256:         i++;
  6413                           	incf	((c:i1LCD_string@i)),c
  6414  000EE6  2A06               	line	257
  6415                           	
  6416                           i1l1908:
  6417  000EE8                     ;main.c: 257:         if(i==16) LCD_command(0xC0);
  6418                           		movlw	16
  6419  000EE8  0E10               	xorwf	((c:i1LCD_string@i)),c,w
  6420  000EEA  1806               	btfss	status,2
  6421  000EEC  A4D8               	goto	i1u119_21
  6422  000EEE  EF7B  F007         	goto	i1u119_20
  6423  000EF2  EF7D  F007         
  6424                           i1u119_21:
  6425  000EF6                     	goto	i1l1912
  6426  000EF6  EF84  F007         i1u119_20:
  6427  000EFA                     	
  6428                           i1l1910:
  6429  000EFA                     	movlw	(0C0h)&0ffh
  6430  000EFA  0EC0               	
  6431                           	call	i1_LCD_command
  6432  000EFC  ECD5  F008         	goto	i1l1912
  6433  000F00  EF84  F007         	
  6434                           i1l199:
  6435  000F04                     	goto	i1l1912
  6436  000F04  EF84  F007         	line	258
  6437                           ;main.c: 258:     }
  6438                           	
  6439                           i1l197:
  6440  000F08                     	line	252
  6441                           	
  6442                           i1l1912:
  6443  000F08                     ;main.c: 252:     while((*msg)!=0)
  6444                           	movff	(c:i1LCD_string@msg),tblptrl
  6445  000F08  C004  FFF6         	movff	(c:i1LCD_string@msg+1),tblptrh
  6446  000F0C  C005  FFF7         	clrf	tblptru
  6447  000F10  6AF8               	
  6448                           	movlw	high __ramtop-1
  6449  000F12  0E05               	cpfsgt	tblptrh
  6450  000F14  64F7               	bra	i1u120_27
  6451  000F16  D003               	tblrd	*
  6452  000F18  0008               	
  6453                           	movf	tablat,w
  6454  000F1A  50F5               	bra	i1u120_20
  6455  000F1C  D005               i1u120_27:
  6456  000F1E                     	movff	tblptrl,fsr0l
  6457  000F1E  CFF6 FFE9          	movff	tblptrh,fsr0h
  6458  000F22  CFF7 FFEA          	movf	indf0,w
  6459  000F26  50EF               i1u120_20:
  6460  000F28                     	iorlw	0
  6461  000F28  0900               	btfss	status,2
  6462  000F2A  A4D8               	goto	i1u121_21
  6463  000F2C  EF9A  F007         	goto	i1u121_20
  6464  000F30  EF9C  F007         i1u121_21:
  6465  000F34                     	goto	i1l1902
  6466  000F34  EF5F  F007         i1u121_20:
  6467  000F38                     	goto	i1l201
  6468  000F38  EF9E  F007         	
  6469                           i1l200:
  6470  000F3C                     	line	260
  6471                           ;main.c: 259:     return;
  6472                           	
  6473                           i1l201:
  6474  000F3C                     	return	;funcret
  6475  000F3C  0012               	opt stack 0
  6476                           GLOBAL	__end_ofi1_LCD_string
  6477                           	__end_ofi1_LCD_string:
  6478  000F3E                     	signat	i1_LCD_string,89
  6479                           	global	i1_LCD_char
  6480                           
  6481 ;; *************** function i1_LCD_char *****************
  6482 ;; Defined at:
  6483 ;;		line 228 in file "main.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;  dat             1    wreg     unsigned char 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;  dat             1    2[COMRAM] unsigned char 
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  1    wreg      void 
  6490 ;; Registers used:
  6491 ;;		wreg, status,2, status,0
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6497 ;;      Params:         0       0       0       0       0       0       0
  6498 ;;      Locals:         1       0       0       0       0       0       0
  6499 ;;      Temps:          2       0       0       0       0       0       0
  6500 ;;      Totals:         3       0       0       0       0       0       0
  6501 ;;Total ram usage:        3 bytes
  6502 ;; Hardware stack levels used:    1
  6503 ;; This function calls:
  6504 ;;		Nothing
  6505 ;; This function is called by:
  6506 ;;		i1_LCD_string
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           psect	text25,class=CODE,space=0,reloc=2,group=0
  6510                           	line	228
  6511                           global __ptext25
  6512                           __ptext25:
  6513  001136                     psect	text25
  6514                           	file	"main.c"
  6515                           	line	228
  6516                           	global	__size_ofi1_LCD_char
  6517                           	__size_ofi1_LCD_char	equ	__end_ofi1_LCD_char-i1_LCD_char
  6518  0000                     	
  6519                           i1_LCD_char:
  6520  001136                     ;incstack = 0
  6521                           	opt	stack 24
  6522                           ;i1LCD_char@dat stored from wreg
  6523                           	movwf	((c:i1LCD_char@dat)),c
  6524  001136  6E03               	line	230
  6525                           	
  6526                           i1l1830:
  6527  001138                     ;main.c: 228: void LCD_char(unsigned char dat);main.c: 229: {;main.c: 230:     nibble=da
                                 t;
  6528                           	movff	(c:i1LCD_char@dat),(c:_nibble)	;volatile
  6529  001138  C003  F067         	line	231
  6530                           	
  6531                           i1l1832:
  6532  00113C                     ;main.c: 231:     LATB = (0xF0 & nibble)>>2;
  6533                           	rrncf	((c:_nibble)),c,w	;volatile
  6534  00113C  4067               	rrncf	wreg
  6535  00113E  42E8               	andlw	(0ffh shr 2) & 0ffh
  6536  001140  0B3F               	andlw	low(03Ch)
  6537  001142  0B3C               	movwf	((c:3978)),c	;volatile
  6538  001144  6E8A               	line	232
  6539                           	
  6540                           i1l1834:
  6541  001146                     ;main.c: 232:     LATBbits.LB0 = 1;
  6542                           	bsf	((c:3978)),c,0	;volatile
  6543  001146  808A               	line	233
  6544                           	
  6545                           i1l1836:
  6546  001148                     ;main.c: 233:     __nop();
  6547                           	opt	asmopt_push
  6548                           	opt	asmopt_off
  6549                           	nop
  6550  001148  F000               	opt	asmopt_pop
  6551                           	line	234
  6552                           	
  6553                           i1l1838:
  6554  00114A                     ;main.c: 234:     LATBbits.LB1 = 1;
  6555                           	bsf	((c:3978)),c,1	;volatile
  6556  00114A  828A               	line	235
  6557                           	
  6558                           i1l1840:
  6559  00114C                     ;main.c: 235:     __nop();
  6560                           	opt	asmopt_push
  6561                           	opt	asmopt_off
  6562                           	nop
  6563  00114C  F000               	opt	asmopt_pop
  6564                           	line	236
  6565                           	
  6566                           i1l1842:
  6567  00114E                     ;main.c: 236:     LATBbits.LB1 = 0;
  6568                           	bcf	((c:3978)),c,1	;volatile
  6569  00114E  928A               	line	237
  6570                           	
  6571                           i1l1844:
  6572  001150                     ;main.c: 237:     _delay((unsigned long)((1)*(20000000/4000.0)));
  6573                           	opt asmopt_push
  6574                           opt asmopt_off
  6575                           movlw	7
  6576  001150  0E07               movwf	(??i1_LCD_char+0+0)&0ffh,c,f
  6577  001152  6E01               	movlw	125
  6578  001154  0E7D               i1u233_27:
  6579  001156                     decfsz	wreg,f
  6580  001156  2EE8               	bra	i1u233_27
  6581  001158  D7FE               	decfsz	(??i1_LCD_char+0+0)&0ffh,c,f
  6582  00115A  2E01               	bra	i1u233_27
  6583  00115C  D7FC               	nop
  6584  00115E  F000               opt asmopt_pop
  6585                           
  6586                           	line	238
  6587                           	
  6588                           i1l1846:
  6589  001160                     ;main.c: 238:     nibble=dat;
  6590                           	movff	(c:i1LCD_char@dat),(c:_nibble)	;volatile
  6591  001160  C003  F067         	line	239
  6592                           ;main.c: 239:     LATB = (nibble<<4)>>2;
  6593                           	movf	((c:_nibble)),c,w	;volatile
  6594  001164  5067               	movwf	(??i1_LCD_char+0+0)&0ffh,c
  6595  001166  6E01               	clrf	(??i1_LCD_char+0+0+1)&0ffh,c
  6596  001168  6A02               
  6597                           	swapf	(??i1_LCD_char+0+0),c
  6598  00116A  3A01               	swapf	(??i1_LCD_char+0+1),c
  6599  00116C  3A02               	movlw	0f0h
  6600  00116E  0EF0               	andwf	(??i1_LCD_char+0+1),c
  6601  001170  1602               	movf	(??i1_LCD_char+0+0),c,w
  6602  001172  5001               	andlw	0fh
  6603  001174  0B0F               	iorwf	(??i1_LCD_char+0+1),c
  6604  001176  1202               	movlw	0f0h
  6605  001178  0EF0               	andwf	(??i1_LCD_char+0+0),c
  6606  00117A  1601               	rlcf	(??i1_LCD_char+0+1),c,w
  6607  00117C  3402               	rrcf	(??i1_LCD_char+0+1),c
  6608  00117E  3202               	rrcf	(??i1_LCD_char+0+0),c
  6609  001180  3201               	rlcf	(??i1_LCD_char+0+1),c,w
  6610  001182  3402               	rrcf	(??i1_LCD_char+0+1),c
  6611  001184  3202               	rrcf	(??i1_LCD_char+0+0),c
  6612  001186  3201               	movf	(??i1_LCD_char+0+0),c,w
  6613  001188  5001               	movwf	((c:3978)),c	;volatile
  6614  00118A  6E8A               	line	240
  6615                           	
  6616                           i1l1848:
  6617  00118C                     ;main.c: 240:     LATBbits.LB0=1;
  6618                           	bsf	((c:3978)),c,0	;volatile
  6619  00118C  808A               	line	241
  6620                           	
  6621                           i1l1850:
  6622  00118E                     ;main.c: 241:     __nop();
  6623                           	opt	asmopt_push
  6624                           	opt	asmopt_off
  6625                           	nop
  6626  00118E  F000               	opt	asmopt_pop
  6627                           	line	242
  6628                           	
  6629                           i1l1852:
  6630  001190                     ;main.c: 242:     LATBbits.LB1 = 1;
  6631                           	bsf	((c:3978)),c,1	;volatile
  6632  001190  828A               	line	243
  6633                           	
  6634                           i1l1854:
  6635  001192                     ;main.c: 243:     __nop();
  6636                           	opt	asmopt_push
  6637                           	opt	asmopt_off
  6638                           	nop
  6639  001192  F000               	opt	asmopt_pop
  6640                           	line	244
  6641                           	
  6642                           i1l1856:
  6643  001194                     ;main.c: 244:     LATBbits.LB1 = 0;
  6644                           	bcf	((c:3978)),c,1	;volatile
  6645  001194  928A               	line	245
  6646                           	
  6647                           i1l1858:
  6648  001196                     ;main.c: 245:     _delay((unsigned long)((2)*(20000000/4000.0)));
  6649                           	opt asmopt_push
  6650                           opt asmopt_off
  6651                           movlw	13
  6652  001196  0E0D               movwf	(??i1_LCD_char+0+0)&0ffh,c,f
  6653  001198  6E01               	movlw	252
  6654  00119A  0EFC               i1u234_27:
  6655  00119C                     decfsz	wreg,f
  6656  00119C  2EE8               	bra	i1u234_27
  6657  00119E  D7FE               	decfsz	(??i1_LCD_char+0+0)&0ffh,c,f
  6658  0011A0  2E01               	bra	i1u234_27
  6659  0011A2  D7FC               opt asmopt_pop
  6660                           
  6661                           	goto	i1l194
  6662  0011A4  EFD4  F008         	line	246
  6663                           	
  6664                           i1l1860:
  6665  0011A8                     	line	247
  6666                           ;main.c: 246:     return;
  6667                           	
  6668                           i1l194:
  6669  0011A8                     	return	;funcret
  6670  0011A8  0012               	opt stack 0
  6671                           GLOBAL	__end_ofi1_LCD_char
  6672                           	__end_ofi1_LCD_char:
  6673  0011AA                     	signat	i1_LCD_char,89
  6674                           	global	i1_BT_tx_string
  6675                           
  6676 ;; *************** function i1_BT_tx_string *****************
  6677 ;; Defined at:
  6678 ;;		line 517 in file "main.c"
  6679 ;; Parameters:    Size  Location     Type
  6680 ;;  msg             2    1[COMRAM] PTR const unsigned char 
  6681 ;;		 -> STR_16(16), STR_15(27), STR_14(73), STR_13(39), 
  6682 ;;		 -> STR_12(8), STR_10(17), STR_9(9), Rx_ISR@DuCyT(5), 
  6683 ;;		 -> STR_8(15), US_print_distance@dist4D(5), STR_6(14), STR_4(17), 
  6684 ;;		 -> STR_2(15), 
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;		None
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  1    wreg      void 
  6689 ;; Registers used:
  6690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6696 ;;      Params:         2       0       0       0       0       0       0
  6697 ;;      Locals:         0       0       0       0       0       0       0
  6698 ;;      Temps:          0       0       0       0       0       0       0
  6699 ;;      Totals:         2       0       0       0       0       0       0
  6700 ;;Total ram usage:        2 bytes
  6701 ;; Hardware stack levels used:    1
  6702 ;; Hardware stack levels required when called:    1
  6703 ;; This function calls:
  6704 ;;		i1_BT_tx_char
  6705 ;; This function is called by:
  6706 ;;		_US_print_distance
  6707 ;;		_Rx_ISR
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           psect	text26,class=CODE,space=0,reloc=2,group=0
  6711                           	line	517
  6712                           global __ptext26
  6713                           __ptext26:
  6714  0012F8                     psect	text26
  6715                           	file	"main.c"
  6716                           	line	517
  6717                           	global	__size_ofi1_BT_tx_string
  6718                           	__size_ofi1_BT_tx_string	equ	__end_ofi1_BT_tx_string-i1_BT_tx_string
  6719  0000                     	
  6720                           i1_BT_tx_string:
  6721  0012F8                     ;incstack = 0
  6722                           	opt	stack 25
  6723                           	line	519
  6724                           	
  6725                           i1l2014:
  6726  0012F8                     ;main.c: 517: void BT_tx_string(const unsigned char *msg);main.c: 518: {;main.c: 519:   
                                   while((*msg)!=0)
  6727                           	goto	i1l2020
  6728  0012F8  EF94  F009         	
  6729                           i1l283:
  6730  0012FC                     	line	521
  6731                           	
  6732                           i1l2016:
  6733  0012FC                     ;main.c: 520:     {;main.c: 521:         BT_tx_char(*msg);
  6734                           	movff	(c:i1BT_tx_string@msg),tblptrl
  6735  0012FC  C002  FFF6         	movff	(c:i1BT_tx_string@msg+1),tblptrh
  6736  001300  C003  FFF7         	clrf	tblptru
  6737  001304  6AF8               	
  6738                           	movlw	high __ramtop-1
  6739  001306  0E05               	cpfsgt	tblptrh
  6740  001308  64F7               	bra	i1u127_27
  6741  00130A  D003               	tblrd	*
  6742  00130C  0008               	
  6743                           	movf	tablat,w
  6744  00130E  50F5               	bra	i1u127_20
  6745  001310  D005               i1u127_27:
  6746  001312                     	movff	tblptrl,fsr0l
  6747  001312  CFF6 FFE9          	movff	tblptrh,fsr0h
  6748  001316  CFF7 FFEA          	movf	indf0,w
  6749  00131A  50EF               i1u127_20:
  6750  00131C                     	
  6751                           	call	i1_BT_tx_char
  6752  00131C  EC09  F00C         	line	522
  6753                           	
  6754                           i1l2018:
  6755  001320                     ;main.c: 522:  msg++;
  6756                           	infsnz	((c:i1BT_tx_string@msg)),c
  6757  001320  4A02               	incf	((c:i1BT_tx_string@msg+1)),c
  6758  001322  2A03               	goto	i1l2020
  6759  001324  EF94  F009         	line	523
  6760                           ;main.c: 523:     }
  6761                           	
  6762                           i1l282:
  6763  001328                     	line	519
  6764                           	
  6765                           i1l2020:
  6766  001328                     ;main.c: 519:     while((*msg)!=0)
  6767                           	movff	(c:i1BT_tx_string@msg),tblptrl
  6768  001328  C002  FFF6         	movff	(c:i1BT_tx_string@msg+1),tblptrh
  6769  00132C  C003  FFF7         	clrf	tblptru
  6770  001330  6AF8               	
  6771                           	movlw	high __ramtop-1
  6772  001332  0E05               	cpfsgt	tblptrh
  6773  001334  64F7               	bra	i1u128_27
  6774  001336  D003               	tblrd	*
  6775  001338  0008               	
  6776                           	movf	tablat,w
  6777  00133A  50F5               	bra	i1u128_20
  6778  00133C  D005               i1u128_27:
  6779  00133E                     	movff	tblptrl,fsr0l
  6780  00133E  CFF6 FFE9          	movff	tblptrh,fsr0h
  6781  001342  CFF7 FFEA          	movf	indf0,w
  6782  001346  50EF               i1u128_20:
  6783  001348                     	iorlw	0
  6784  001348  0900               	btfss	status,2
  6785  00134A  A4D8               	goto	i1u129_21
  6786  00134C  EFAA  F009         	goto	i1u129_20
  6787  001350  EFAC  F009         i1u129_21:
  6788  001354                     	goto	i1l2016
  6789  001354  EF7E  F009         i1u129_20:
  6790  001358                     	goto	i1l285
  6791  001358  EFAE  F009         	
  6792                           i1l284:
  6793  00135C                     	line	525
  6794                           ;main.c: 524:     return;
  6795                           	
  6796                           i1l285:
  6797  00135C                     	return	;funcret
  6798  00135C  0012               	opt stack 0
  6799                           GLOBAL	__end_ofi1_BT_tx_string
  6800                           	__end_ofi1_BT_tx_string:
  6801  00135E                     	signat	i1_BT_tx_string,89
  6802                           	global	i1_BT_tx_char
  6803                           
  6804 ;; *************** function i1_BT_tx_char *****************
  6805 ;; Defined at:
  6806 ;;		line 511 in file "main.c"
  6807 ;; Parameters:    Size  Location     Type
  6808 ;;  Tx              1    wreg     unsigned char 
  6809 ;; Auto vars:     Size  Location     Type
  6810 ;;  Tx              1    0[COMRAM] unsigned char 
  6811 ;; Return value:  Size  Location     Type
  6812 ;;                  1    wreg      void 
  6813 ;; Registers used:
  6814 ;;		wreg
  6815 ;; Tracked objects:
  6816 ;;		On entry : 0/0
  6817 ;;		On exit  : 0/0
  6818 ;;		Unchanged: 0/0
  6819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6820 ;;      Params:         0       0       0       0       0       0       0
  6821 ;;      Locals:         1       0       0       0       0       0       0
  6822 ;;      Temps:          0       0       0       0       0       0       0
  6823 ;;      Totals:         1       0       0       0       0       0       0
  6824 ;;Total ram usage:        1 bytes
  6825 ;; Hardware stack levels used:    1
  6826 ;; This function calls:
  6827 ;;		Nothing
  6828 ;; This function is called by:
  6829 ;;		_US_print_distance
  6830 ;;		i1_BT_tx_string
  6831 ;; This function uses a non-reentrant model
  6832 ;;
  6833                           psect	text27,class=CODE,space=0,reloc=2,group=0
  6834                           	line	511
  6835                           global __ptext27
  6836                           __ptext27:
  6837  001812                     psect	text27
  6838                           	file	"main.c"
  6839                           	line	511
  6840                           	global	__size_ofi1_BT_tx_char
  6841                           	__size_ofi1_BT_tx_char	equ	__end_ofi1_BT_tx_char-i1_BT_tx_char
  6842  0000                     	
  6843                           i1_BT_tx_char:
  6844  001812                     ;incstack = 0
  6845                           	opt	stack 25
  6846                           ;i1BT_tx_char@Tx stored from wreg
  6847                           	movwf	((c:i1BT_tx_char@Tx)),c
  6848  001812  6E01               	line	513
  6849                           	
  6850                           i1l1914:
  6851  001814                     ;main.c: 511: void BT_tx_char(unsigned char Tx);main.c: 512: {;main.c: 513:     while(!T
                                 XIF);
  6852                           	goto	i1l276
  6853  001814  EF0C  F00C         	
  6854                           i1l277:
  6855  001818                     	
  6856                           i1l276:
  6857  001818                     	btfss	c:(31988/8),(31988)&7	;volatile
  6858  001818  A89E               	goto	i1u122_21
  6859  00181A  EF11  F00C         	goto	i1u122_20
  6860  00181E  EF13  F00C         i1u122_21:
  6861  001822                     	goto	i1l276
  6862  001822  EF0C  F00C         i1u122_20:
  6863  001826                     	goto	i1l1916
  6864  001826  EF15  F00C         	
  6865                           i1l278:
  6866  00182A                     	line	514
  6867                           	
  6868                           i1l1916:
  6869  00182A                     ;main.c: 514:     TXREG=Tx;
  6870                           	movff	(c:i1BT_tx_char@Tx),(c:4013)	;volatile
  6871  00182A  C001  FFAD         	line	515
  6872                           	
  6873                           i1l279:
  6874  00182E                     	return	;funcret
  6875  00182E  0012               	opt stack 0
  6876                           GLOBAL	__end_ofi1_BT_tx_char
  6877                           	__end_ofi1_BT_tx_char:
  6878  001830                     	signat	i1_BT_tx_char,89
  6879                           	global	_itoa4D
  6880                           
  6881 ;; *************** function _itoa4D *****************
  6882 ;; Defined at:
  6883 ;;		line 705 in file "main.c"
  6884 ;; Parameters:    Size  Location     Type
  6885 ;;  arr             2   12[COMRAM] PTR unsigned char 
  6886 ;;		 -> Rx_ISR@DuCyT(5), US_print_distance@dist4D(5), US_send_pulse@dist(5), 
  6887 ;;  num             2   14[COMRAM] unsigned int 
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;		None
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  1    wreg      void 
  6892 ;; Registers used:
  6893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6899 ;;      Params:         4       0       0       0       0       0       0
  6900 ;;      Locals:         0       0       0       0       0       0       0
  6901 ;;      Temps:          1       0       0       0       0       0       0
  6902 ;;      Totals:         5       0       0       0       0       0       0
  6903 ;;Total ram usage:        5 bytes
  6904 ;; Hardware stack levels used:    1
  6905 ;; Hardware stack levels required when called:    1
  6906 ;; This function calls:
  6907 ;;		___lwdiv
  6908 ;;		___lwmod
  6909 ;; This function is called by:
  6910 ;;		_US_send_pulse
  6911 ;;		_US_print_distance
  6912 ;;		_Rx_ISR
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           psect	text28,class=CODE,space=0,reloc=2,group=0
  6916                           	line	705
  6917                           global __ptext28
  6918                           __ptext28:
  6919  0007D0                     psect	text28
  6920                           	file	"main.c"
  6921                           	line	705
  6922                           	global	__size_of_itoa4D
  6923                           	__size_of_itoa4D	equ	__end_of_itoa4D-_itoa4D
  6924  0000                     	
  6925                           _itoa4D:
  6926  0007D0                     ;incstack = 0
  6927                           	opt	stack 25
  6928                           	line	707
  6929                           	
  6930                           i1l1982:
  6931  0007D0                     ;main.c: 705: void itoa4D(char arr[], unsigned int num);main.c: 706: {;main.c: 707:     
                                 arr[0]=((num/1000)%10)|0x30;
  6932                           	movlw	high(03E8h)
  6933  0007D0  0E03               	movwf	((c:___lwdiv@divisor+1)),c
  6934  0007D2  6E04               	movlw	low(03E8h)
  6935  0007D4  0EE8               	movwf	((c:___lwdiv@divisor)),c
  6936  0007D6  6E03               	movff	(c:itoa4D@num),(c:___lwdiv@dividend)
  6937  0007D8  C00F  F001         	movff	(c:itoa4D@num+1),(c:___lwdiv@dividend+1)
  6938  0007DC  C010  F002         	call	___lwdiv	;wreg free
  6939  0007E0  EC9F  F007         	movff	0+?___lwdiv,(c:___lwmod@dividend)
  6940  0007E4  C001  F008         	movff	1+?___lwdiv,(c:___lwmod@dividend+1)
  6941  0007E8  C002  F009         	movlw	high(0Ah)
  6942  0007EC  0E00               	movwf	((c:___lwmod@divisor+1)),c
  6943  0007EE  6E0B               	movlw	low(0Ah)
  6944  0007F0  0E0A               	movwf	((c:___lwmod@divisor)),c
  6945  0007F2  6E0A               	call	___lwmod	;wreg free
  6946  0007F4  EC5F  F008         	movf	(0+?___lwmod),c,w
  6947  0007F8  5008               	iorlw	low(030h)
  6948  0007FA  0930               	movff	(c:itoa4D@arr),fsr2l
  6949  0007FC  C00D  FFD9         	movff	(c:itoa4D@arr+1),fsr2h
  6950  000800  C00E  FFDA         	movwf	indf2,c
  6951  000804  6EDF               
  6952                           	line	708
  6953                           ;main.c: 708:     arr[1]=((num/100)%10)|0x30;;
  6954                           	lfsr	2,01h
  6955  000806  EE20 F001          	movf	((c:itoa4D@arr)),c,w
  6956  00080A  500D               	addwf	fsr2l
  6957  00080C  26D9               	movf	((c:itoa4D@arr+1)),c,w
  6958  00080E  500E               	addwfc	fsr2h
  6959  000810  22DA               	movlw	high(064h)
  6960  000812  0E00               	movwf	((c:___lwdiv@divisor+1)),c
  6961  000814  6E04               	movlw	low(064h)
  6962  000816  0E64               	movwf	((c:___lwdiv@divisor)),c
  6963  000818  6E03               	movff	(c:itoa4D@num),(c:___lwdiv@dividend)
  6964  00081A  C00F  F001         	movff	(c:itoa4D@num+1),(c:___lwdiv@dividend+1)
  6965  00081E  C010  F002         	call	___lwdiv	;wreg free
  6966  000822  EC9F  F007         	movff	0+?___lwdiv,(c:___lwmod@dividend)
  6967  000826  C001  F008         	movff	1+?___lwdiv,(c:___lwmod@dividend+1)
  6968  00082A  C002  F009         	movlw	high(0Ah)
  6969  00082E  0E00               	movwf	((c:___lwmod@divisor+1)),c
  6970  000830  6E0B               	movlw	low(0Ah)
  6971  000832  0E0A               	movwf	((c:___lwmod@divisor)),c
  6972  000834  6E0A               	call	___lwmod	;wreg free
  6973  000836  EC5F  F008         	movf	(0+?___lwmod),c,w
  6974  00083A  5008               	iorlw	low(030h)
  6975  00083C  0930               	movwf	indf2,c
  6976  00083E  6EDF               
  6977                           	line	709
  6978                           ;main.c: 709:     arr[2]=((num/10)%10)|0x30;
  6979                           	lfsr	2,02h
  6980  000840  EE20 F002          	movf	((c:itoa4D@arr)),c,w
  6981  000844  500D               	addwf	fsr2l
  6982  000846  26D9               	movf	((c:itoa4D@arr+1)),c,w
  6983  000848  500E               	addwfc	fsr2h
  6984  00084A  22DA               	movlw	high(0Ah)
  6985  00084C  0E00               	movwf	((c:___lwdiv@divisor+1)),c
  6986  00084E  6E04               	movlw	low(0Ah)
  6987  000850  0E0A               	movwf	((c:___lwdiv@divisor)),c
  6988  000852  6E03               	movff	(c:itoa4D@num),(c:___lwdiv@dividend)
  6989  000854  C00F  F001         	movff	(c:itoa4D@num+1),(c:___lwdiv@dividend+1)
  6990  000858  C010  F002         	call	___lwdiv	;wreg free
  6991  00085C  EC9F  F007         	movff	0+?___lwdiv,(c:___lwmod@dividend)
  6992  000860  C001  F008         	movff	1+?___lwdiv,(c:___lwmod@dividend+1)
  6993  000864  C002  F009         	movlw	high(0Ah)
  6994  000868  0E00               	movwf	((c:___lwmod@divisor+1)),c
  6995  00086A  6E0B               	movlw	low(0Ah)
  6996  00086C  0E0A               	movwf	((c:___lwmod@divisor)),c
  6997  00086E  6E0A               	call	___lwmod	;wreg free
  6998  000870  EC5F  F008         	movf	(0+?___lwmod),c,w
  6999  000874  5008               	iorlw	low(030h)
  7000  000876  0930               	movwf	indf2,c
  7001  000878  6EDF               
  7002                           	line	710
  7003                           ;main.c: 710:     arr[3]=(num%10)|0x30;
  7004                           	lfsr	2,03h
  7005  00087A  EE20 F003          	movf	((c:itoa4D@arr)),c,w
  7006  00087E  500D               	addwf	fsr2l
  7007  000880  26D9               	movf	((c:itoa4D@arr+1)),c,w
  7008  000882  500E               	addwfc	fsr2h
  7009  000884  22DA               	movff	(c:itoa4D@num),(c:___lwmod@dividend)
  7010  000886  C00F  F008         	movff	(c:itoa4D@num+1),(c:___lwmod@dividend+1)
  7011  00088A  C010  F009         	movlw	high(0Ah)
  7012  00088E  0E00               	movwf	((c:___lwmod@divisor+1)),c
  7013  000890  6E0B               	movlw	low(0Ah)
  7014  000892  0E0A               	movwf	((c:___lwmod@divisor)),c
  7015  000894  6E0A               	call	___lwmod	;wreg free
  7016  000896  EC5F  F008         	movf	(0+?___lwmod),c,w
  7017  00089A  5008               	iorlw	low(030h)
  7018  00089C  0930               	movwf	indf2,c
  7019  00089E  6EDF               
  7020                           	line	711
  7021                           	
  7022                           i1l1984:
  7023  0008A0                     ;main.c: 711:     arr[4]='\0';
  7024                           	lfsr	2,04h
  7025  0008A0  EE20 F004          	movf	((c:itoa4D@arr)),c,w
  7026  0008A4  500D               	addwf	fsr2l
  7027  0008A6  26D9               	movf	((c:itoa4D@arr+1)),c,w
  7028  0008A8  500E               	addwfc	fsr2h
  7029  0008AA  22DA               	movlw	low(0)
  7030  0008AC  0E00               	movwf	indf2
  7031  0008AE  6EDF               	line	712
  7032                           	
  7033                           i1l1986:
  7034  0008B0                     ;main.c: 712:     if(arr[0]=='0')
  7035                           	movff	(c:itoa4D@arr),fsr2l
  7036  0008B0  C00D  FFD9         	movff	(c:itoa4D@arr+1),fsr2h
  7037  0008B4  C00E  FFDA         	movlw	48
  7038  0008B8  0E30               	xorwf	postinc2,w
  7039  0008BA  18DE               	btfss	status,2
  7040  0008BC  A4D8               	goto	i1u123_21
  7041  0008BE  EF63  F004         	goto	i1u123_20
  7042  0008C2  EF65  F004         
  7043                           i1u123_21:
  7044  0008C6                     	goto	i1l363
  7045  0008C6  EFA1  F004         i1u123_20:
  7046  0008CA                     	line	714
  7047                           	
  7048                           i1l1988:
  7049  0008CA                     ;main.c: 713:     {;main.c: 714:         arr[0]=' ';
  7050                           	movff	(c:itoa4D@arr),fsr2l
  7051  0008CA  C00D  FFD9         	movff	(c:itoa4D@arr+1),fsr2h
  7052  0008CE  C00E  FFDA         	movlw	low(020h)
  7053  0008D2  0E20               	movwf	indf2
  7054  0008D4  6EDF               	line	715
  7055                           	
  7056                           i1l1990:
  7057  0008D6                     ;main.c: 715:         if(arr[1]=='0')
  7058                           	lfsr	2,01h
  7059  0008D6  EE20 F001          	movf	((c:itoa4D@arr)),c,w
  7060  0008DA  500D               	addwf	fsr2l
  7061  0008DC  26D9               	movf	((c:itoa4D@arr+1)),c,w
  7062  0008DE  500E               	addwfc	fsr2h
  7063  0008E0  22DA               	movlw	48
  7064  0008E2  0E30               	xorwf	postinc2,w
  7065  0008E4  18DE               	btfss	status,2
  7066  0008E6  A4D8               	goto	i1u124_21
  7067  0008E8  EF78  F004         	goto	i1u124_20
  7068  0008EC  EF7A  F004         
  7069                           i1u124_21:
  7070  0008F0                     	goto	i1l363
  7071  0008F0  EFA1  F004         i1u124_20:
  7072  0008F4                     	line	717
  7073                           	
  7074                           i1l1992:
  7075  0008F4                     ;main.c: 716:         {;main.c: 717:             arr[1]=' ';
  7076                           	lfsr	2,01h
  7077  0008F4  EE20 F001          	movf	((c:itoa4D@arr)),c,w
  7078  0008F8  500D               	addwf	fsr2l
  7079  0008FA  26D9               	movf	((c:itoa4D@arr+1)),c,w
  7080  0008FC  500E               	addwfc	fsr2h
  7081  0008FE  22DA               	movlw	low(020h)
  7082  000900  0E20               	movwf	indf2
  7083  000902  6EDF               	line	718
  7084                           ;main.c: 718:             if(arr[2]=='0')arr[2]=' ';
  7085                           	lfsr	2,02h
  7086  000904  EE20 F002          	movf	((c:itoa4D@arr)),c,w
  7087  000908  500D               	addwf	fsr2l
  7088  00090A  26D9               	movf	((c:itoa4D@arr+1)),c,w
  7089  00090C  500E               	addwfc	fsr2h
  7090  00090E  22DA               	movlw	48
  7091  000910  0E30               	xorwf	postinc2,w
  7092  000912  18DE               	btfss	status,2
  7093  000914  A4D8               	goto	i1u125_21
  7094  000916  EF8F  F004         	goto	i1u125_20
  7095  00091A  EF91  F004         
  7096                           i1u125_21:
  7097  00091E                     	goto	i1l363
  7098  00091E  EFA1  F004         i1u125_20:
  7099  000922                     	
  7100                           i1l1994:
  7101  000922                     	lfsr	2,02h
  7102  000922  EE20 F002          	movf	((c:itoa4D@arr)),c,w
  7103  000926  500D               	addwf	fsr2l
  7104  000928  26D9               	movf	((c:itoa4D@arr+1)),c,w
  7105  00092A  500E               	addwfc	fsr2h
  7106  00092C  22DA               	movlw	low(020h)
  7107  00092E  0E20               	movwf	indf2
  7108  000930  6EDF               	goto	i1l363
  7109  000932  EFA1  F004         	
  7110                           i1l362:
  7111  000936                     	goto	i1l363
  7112  000936  EFA1  F004         	line	719
  7113                           ;main.c: 719:         }
  7114                           	
  7115                           i1l361:
  7116  00093A                     	goto	i1l363
  7117  00093A  EFA1  F004         	line	720
  7118                           ;main.c: 720:     }
  7119                           	
  7120                           i1l360:
  7121  00093E                     	goto	i1l363
  7122  00093E  EFA1  F004         	line	721
  7123                           	
  7124                           i1l1996:
  7125  000942                     	line	722
  7126                           ;main.c: 721:     return;
  7127                           	
  7128                           i1l363:
  7129  000942                     	return	;funcret
  7130  000942  0012               	opt stack 0
  7131                           GLOBAL	__end_of_itoa4D
  7132                           	__end_of_itoa4D:
  7133  000944                     	signat	_itoa4D,8313
  7134                           	global	___lwmod
  7135                           
  7136 ;; *************** function ___lwmod *****************
  7137 ;; Defined at:
  7138 ;;		line 7 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/lwmod.c"
  7139 ;; Parameters:    Size  Location     Type
  7140 ;;  dividend        2    7[COMRAM] unsigned int 
  7141 ;;  divisor         2    9[COMRAM] unsigned int 
  7142 ;; Auto vars:     Size  Location     Type
  7143 ;;  counter         1   11[COMRAM] unsigned char 
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  2    7[COMRAM] unsigned int 
  7146 ;; Registers used:
  7147 ;;		wreg, status,2, status,0
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7153 ;;      Params:         4       0       0       0       0       0       0
  7154 ;;      Locals:         1       0       0       0       0       0       0
  7155 ;;      Temps:          0       0       0       0       0       0       0
  7156 ;;      Totals:         5       0       0       0       0       0       0
  7157 ;;Total ram usage:        5 bytes
  7158 ;; Hardware stack levels used:    1
  7159 ;; This function calls:
  7160 ;;		Nothing
  7161 ;; This function is called by:
  7162 ;;		_itoa4D
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           psect	text29,class=CODE,space=0,reloc=2,group=1
  7166                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/lwmod.c"
  7167                           	line	7
  7168                           global __ptext29
  7169                           __ptext29:
  7170  0010BE                     psect	text29
  7171                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/lwmod.c"
  7172                           	line	7
  7173                           	global	__size_of___lwmod
  7174                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  7175  0000                     	
  7176                           ___lwmod:
  7177  0010BE                     ;incstack = 0
  7178                           	opt	stack 25
  7179                           	line	12
  7180                           	
  7181                           i1l1884:
  7182  0010BE                     	movf	((c:___lwmod@divisor)),c,w
  7183  0010BE  500A               iorwf	((c:___lwmod@divisor+1)),c,w
  7184  0010C0  100B               	btfsc	status,2
  7185  0010C2  B4D8               	goto	i1u115_21
  7186  0010C4  EF66  F008         	goto	i1u115_20
  7187  0010C8  EF68  F008         
  7188                           i1u115_21:
  7189  0010CC                     	goto	i1l870
  7190  0010CC  EF96  F008         i1u115_20:
  7191  0010D0                     	line	13
  7192                           	
  7193                           i1l1886:
  7194  0010D0                     	movlw	low(01h)
  7195  0010D0  0E01               	movwf	((c:___lwmod@counter)),c
  7196  0010D2  6E0C               	line	14
  7197                           	goto	i1l1890
  7198  0010D4  EF72  F008         	
  7199                           i1l872:
  7200  0010D8                     	line	15
  7201                           	
  7202                           i1l1888:
  7203  0010D8                     	bcf	status,0
  7204  0010D8  90D8               	rlcf	((c:___lwmod@divisor)),c
  7205  0010DA  360A               	rlcf	((c:___lwmod@divisor+1)),c
  7206  0010DC  360B               	line	16
  7207                           	incf	((c:___lwmod@counter)),c
  7208  0010DE  2A0C               	goto	i1l1890
  7209  0010E0  EF72  F008         	line	17
  7210                           	
  7211                           i1l871:
  7212  0010E4                     	line	14
  7213                           	
  7214                           i1l1890:
  7215  0010E4                     	
  7216                           	btfss	((c:___lwmod@divisor+1)),c,(15)&7
  7217  0010E4  AE0B               	goto	i1u116_21
  7218  0010E6  EF77  F008         	goto	i1u116_20
  7219  0010EA  EF79  F008         i1u116_21:
  7220  0010EE                     	goto	i1l1888
  7221  0010EE  EF6C  F008         i1u116_20:
  7222  0010F2                     	goto	i1l1892
  7223  0010F2  EF7D  F008         	
  7224                           i1l873:
  7225  0010F6                     	goto	i1l1892
  7226  0010F6  EF7D  F008         	line	18
  7227                           	
  7228                           i1l874:
  7229  0010FA                     	line	19
  7230                           	
  7231                           i1l1892:
  7232  0010FA                     		movf	((c:___lwmod@divisor)),c,w
  7233  0010FA  500A               	subwf	((c:___lwmod@dividend)),c,w
  7234  0010FC  5C08               	movf	((c:___lwmod@divisor+1)),c,w
  7235  0010FE  500B               	subwfb	((c:___lwmod@dividend+1)),c,w
  7236  001100  5809               	btfss	status,0
  7237  001102  A0D8               	goto	i1u117_21
  7238  001104  EF86  F008         	goto	i1u117_20
  7239  001108  EF88  F008         
  7240                           i1u117_21:
  7241  00110C                     	goto	i1l1896
  7242  00110C  EF8E  F008         i1u117_20:
  7243  001110                     	line	20
  7244                           	
  7245                           i1l1894:
  7246  001110                     	movf	((c:___lwmod@divisor)),c,w
  7247  001110  500A               	subwf	((c:___lwmod@dividend)),c
  7248  001112  5E08               	movf	((c:___lwmod@divisor+1)),c,w
  7249  001114  500B               	subwfb	((c:___lwmod@dividend+1)),c
  7250  001116  5A09               
  7251                           	goto	i1l1896
  7252  001118  EF8E  F008         	
  7253                           i1l875:
  7254  00111C                     	line	21
  7255                           	
  7256                           i1l1896:
  7257  00111C                     	bcf	status,0
  7258  00111C  90D8               	rrcf	((c:___lwmod@divisor+1)),c
  7259  00111E  320B               	rrcf	((c:___lwmod@divisor)),c
  7260  001120  320A               	line	22
  7261                           	
  7262                           i1l1898:
  7263  001122                     	decfsz	((c:___lwmod@counter)),c
  7264  001122  2E0C               	
  7265                           	goto	i1l1892
  7266  001124  EF7D  F008         	goto	i1l870
  7267  001128  EF96  F008         	
  7268                           i1l876:
  7269  00112C                     	line	23
  7270                           	
  7271                           i1l870:
  7272  00112C                     	line	24
  7273                           	movff	(c:___lwmod@dividend),(c:?___lwmod)
  7274  00112C  C008  F008         	movff	(c:___lwmod@dividend+1),(c:?___lwmod+1)
  7275  001130  C009  F009         	line	25
  7276                           	
  7277                           i1l877:
  7278  001134                     	return	;funcret
  7279  001134  0012               	opt stack 0
  7280                           GLOBAL	__end_of___lwmod
  7281                           	__end_of___lwmod:
  7282  001136                     	signat	___lwmod,8314
  7283                           	global	___lwdiv
  7284                           
  7285 ;; *************** function ___lwdiv *****************
  7286 ;; Defined at:
  7287 ;;		line 7 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/lwdiv.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;  dividend        2    0[COMRAM] unsigned int 
  7290 ;;  divisor         2    2[COMRAM] unsigned int 
  7291 ;; Auto vars:     Size  Location     Type
  7292 ;;  quotient        2    4[COMRAM] unsigned int 
  7293 ;;  counter         1    6[COMRAM] unsigned char 
  7294 ;; Return value:  Size  Location     Type
  7295 ;;                  2    0[COMRAM] unsigned int 
  7296 ;; Registers used:
  7297 ;;		wreg, status,2, status,0
  7298 ;; Tracked objects:
  7299 ;;		On entry : 0/0
  7300 ;;		On exit  : 0/0
  7301 ;;		Unchanged: 0/0
  7302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7303 ;;      Params:         4       0       0       0       0       0       0
  7304 ;;      Locals:         3       0       0       0       0       0       0
  7305 ;;      Temps:          0       0       0       0       0       0       0
  7306 ;;      Totals:         7       0       0       0       0       0       0
  7307 ;;Total ram usage:        7 bytes
  7308 ;; Hardware stack levels used:    1
  7309 ;; This function calls:
  7310 ;;		Nothing
  7311 ;; This function is called by:
  7312 ;;		_itoa4D
  7313 ;; This function uses a non-reentrant model
  7314 ;;
  7315                           psect	text30,class=CODE,space=0,reloc=2,group=1
  7316                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/lwdiv.c"
  7317                           	line	7
  7318                           global __ptext30
  7319                           __ptext30:
  7320  000F3E                     psect	text30
  7321                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/lwdiv.c"
  7322                           	line	7
  7323                           	global	__size_of___lwdiv
  7324                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  7325  0000                     	
  7326                           ___lwdiv:
  7327  000F3E                     ;incstack = 0
  7328                           	opt	stack 25
  7329                           	line	13
  7330                           	
  7331                           i1l1862:
  7332  000F3E                     	movlw	high(0)
  7333  000F3E  0E00               	movwf	((c:___lwdiv@quotient+1)),c
  7334  000F40  6E06               	movlw	low(0)
  7335  000F42  0E00               	movwf	((c:___lwdiv@quotient)),c
  7336  000F44  6E05               	line	14
  7337                           	
  7338                           i1l1864:
  7339  000F46                     	movf	((c:___lwdiv@divisor)),c,w
  7340  000F46  5003               iorwf	((c:___lwdiv@divisor+1)),c,w
  7341  000F48  1004               	btfsc	status,2
  7342  000F4A  B4D8               	goto	i1u112_21
  7343  000F4C  EFAA  F007         	goto	i1u112_20
  7344  000F50  EFAC  F007         
  7345                           i1u112_21:
  7346  000F54                     	goto	i1l860
  7347  000F54  EFDE  F007         i1u112_20:
  7348  000F58                     	line	15
  7349                           	
  7350                           i1l1866:
  7351  000F58                     	movlw	low(01h)
  7352  000F58  0E01               	movwf	((c:___lwdiv@counter)),c
  7353  000F5A  6E07               	line	16
  7354                           	goto	i1l1870
  7355  000F5C  EFB6  F007         	
  7356                           i1l862:
  7357  000F60                     	line	17
  7358                           	
  7359                           i1l1868:
  7360  000F60                     	bcf	status,0
  7361  000F60  90D8               	rlcf	((c:___lwdiv@divisor)),c
  7362  000F62  3603               	rlcf	((c:___lwdiv@divisor+1)),c
  7363  000F64  3604               	line	18
  7364                           	incf	((c:___lwdiv@counter)),c
  7365  000F66  2A07               	goto	i1l1870
  7366  000F68  EFB6  F007         	line	19
  7367                           	
  7368                           i1l861:
  7369  000F6C                     	line	16
  7370                           	
  7371                           i1l1870:
  7372  000F6C                     	
  7373                           	btfss	((c:___lwdiv@divisor+1)),c,(15)&7
  7374  000F6C  AE04               	goto	i1u113_21
  7375  000F6E  EFBB  F007         	goto	i1u113_20
  7376  000F72  EFBD  F007         i1u113_21:
  7377  000F76                     	goto	i1l1868
  7378  000F76  EFB0  F007         i1u113_20:
  7379  000F7A                     	goto	i1l1872
  7380  000F7A  EFC1  F007         	
  7381                           i1l863:
  7382  000F7E                     	goto	i1l1872
  7383  000F7E  EFC1  F007         	line	20
  7384                           	
  7385                           i1l864:
  7386  000F82                     	line	21
  7387                           	
  7388                           i1l1872:
  7389  000F82                     	bcf	status,0
  7390  000F82  90D8               	rlcf	((c:___lwdiv@quotient)),c
  7391  000F84  3605               	rlcf	((c:___lwdiv@quotient+1)),c
  7392  000F86  3606               	line	22
  7393                           	
  7394                           i1l1874:
  7395  000F88                     		movf	((c:___lwdiv@divisor)),c,w
  7396  000F88  5003               	subwf	((c:___lwdiv@dividend)),c,w
  7397  000F8A  5C01               	movf	((c:___lwdiv@divisor+1)),c,w
  7398  000F8C  5004               	subwfb	((c:___lwdiv@dividend+1)),c,w
  7399  000F8E  5802               	btfss	status,0
  7400  000F90  A0D8               	goto	i1u114_21
  7401  000F92  EFCD  F007         	goto	i1u114_20
  7402  000F96  EFCF  F007         
  7403                           i1u114_21:
  7404  000F9A                     	goto	i1l1880
  7405  000F9A  EFD6  F007         i1u114_20:
  7406  000F9E                     	line	23
  7407                           	
  7408                           i1l1876:
  7409  000F9E                     	movf	((c:___lwdiv@divisor)),c,w
  7410  000F9E  5003               	subwf	((c:___lwdiv@dividend)),c
  7411  000FA0  5E01               	movf	((c:___lwdiv@divisor+1)),c,w
  7412  000FA2  5004               	subwfb	((c:___lwdiv@dividend+1)),c
  7413  000FA4  5A02               
  7414                           	line	24
  7415                           	
  7416                           i1l1878:
  7417  000FA6                     	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
  7418  000FA6  8005               	goto	i1l1880
  7419  000FA8  EFD6  F007         	line	25
  7420                           	
  7421                           i1l865:
  7422  000FAC                     	line	26
  7423                           	
  7424                           i1l1880:
  7425  000FAC                     	bcf	status,0
  7426  000FAC  90D8               	rrcf	((c:___lwdiv@divisor+1)),c
  7427  000FAE  3204               	rrcf	((c:___lwdiv@divisor)),c
  7428  000FB0  3203               	line	27
  7429                           	
  7430                           i1l1882:
  7431  000FB2                     	decfsz	((c:___lwdiv@counter)),c
  7432  000FB2  2E07               	
  7433                           	goto	i1l1872
  7434  000FB4  EFC1  F007         	goto	i1l860
  7435  000FB8  EFDE  F007         	
  7436                           i1l866:
  7437  000FBC                     	line	28
  7438                           	
  7439                           i1l860:
  7440  000FBC                     	line	29
  7441                           	movff	(c:___lwdiv@quotient),(c:?___lwdiv)
  7442  000FBC  C005  F001         	movff	(c:___lwdiv@quotient+1),(c:?___lwdiv+1)
  7443  000FC0  C006  F002         	line	30
  7444                           	
  7445                           i1l867:
  7446  000FC4                     	return	;funcret
  7447  000FC4  0012               	opt stack 0
  7448                           GLOBAL	__end_of___lwdiv
  7449                           	__end_of___lwdiv:
  7450  000FC6                     	signat	___lwdiv,8314
  7451                           	global	_M_set_DC
  7452                           
  7453 ;; *************** function _M_set_DC *****************
  7454 ;; Defined at:
  7455 ;;		line 458 in file "main.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  DutyCycle       2    0[COMRAM] unsigned int 
  7458 ;;  motor           1    2[COMRAM] unsigned char 
  7459 ;; Auto vars:     Size  Location     Type
  7460 ;;		None
  7461 ;; Return value:  Size  Location     Type
  7462 ;;                  1    wreg      void 
  7463 ;; Registers used:
  7464 ;;		wreg, status,2, status,0
  7465 ;; Tracked objects:
  7466 ;;		On entry : 0/0
  7467 ;;		On exit  : 0/0
  7468 ;;		Unchanged: 0/0
  7469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7470 ;;      Params:         3       0       0       0       0       0       0
  7471 ;;      Locals:         0       0       0       0       0       0       0
  7472 ;;      Temps:          2       0       0       0       0       0       0
  7473 ;;      Totals:         5       0       0       0       0       0       0
  7474 ;;Total ram usage:        5 bytes
  7475 ;; Hardware stack levels used:    1
  7476 ;; This function calls:
  7477 ;;		Nothing
  7478 ;; This function is called by:
  7479 ;;		_Rx_ISR
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           psect	text31,class=CODE,space=0,reloc=2,group=0
  7483                           	file	"main.c"
  7484                           	line	458
  7485                           global __ptext31
  7486                           __ptext31:
  7487  00061C                     psect	text31
  7488                           	file	"main.c"
  7489                           	line	458
  7490                           	global	__size_of_M_set_DC
  7491                           	__size_of_M_set_DC	equ	__end_of_M_set_DC-_M_set_DC
  7492  0000                     	
  7493                           _M_set_DC:
  7494  00061C                     ;incstack = 0
  7495                           	opt	stack 26
  7496                           	line	460
  7497                           	
  7498                           i1l2260:
  7499  00061C                     ;main.c: 458: void M_set_DC(unsigned int DutyCycle, unsigned char motor);main.c: 459: {;
                                 main.c: 460:     if(motor<1||motor>3||DutyCycle<=0||DutyCycle>1023)return;
  7500                           	movf	((c:M_set_DC@motor)),c,w
  7501  00061C  5003               	btfsc	status,2
  7502  00061E  B4D8               	goto	i1u177_21
  7503  000620  EF14  F003         	goto	i1u177_20
  7504  000624  EF16  F003         i1u177_21:
  7505  000628                     	goto	i1l265
  7506  000628  EFE7  F003         i1u177_20:
  7507  00062C                     	
  7508                           i1l2262:
  7509  00062C                     		movlw	04h-0
  7510  00062C  0E04               	cpfslt	((c:M_set_DC@motor)),c
  7511  00062E  6003               	goto	i1u178_21
  7512  000630  EF1C  F003         	goto	i1u178_20
  7513  000634  EF1E  F003         
  7514                           i1u178_21:
  7515  000638                     	goto	i1l265
  7516  000638  EFE7  F003         i1u178_20:
  7517  00063C                     	
  7518                           i1l2264:
  7519  00063C                     	movf	((c:M_set_DC@DutyCycle)),c,w
  7520  00063C  5001               iorwf	((c:M_set_DC@DutyCycle+1)),c,w
  7521  00063E  1002               	btfsc	status,2
  7522  000640  B4D8               	goto	i1u179_21
  7523  000642  EF25  F003         	goto	i1u179_20
  7524  000646  EF27  F003         
  7525                           i1u179_21:
  7526  00064A                     	goto	i1l265
  7527  00064A  EFE7  F003         i1u179_20:
  7528  00064E                     	
  7529                           i1l2266:
  7530  00064E                     		movlw	4
  7531  00064E  0E04               	subwf	 ((c:M_set_DC@DutyCycle+1)),c,w
  7532  000650  5C02               	btfss	status,0
  7533  000652  A0D8               	goto	i1u180_21
  7534  000654  EF2E  F003         	goto	i1u180_20
  7535  000658  EF30  F003         
  7536                           i1u180_21:
  7537  00065C                     	goto	i1l2284
  7538  00065C  EFCE  F003         i1u180_20:
  7539  000660                     	goto	i1l265
  7540  000660  EFE7  F003         	
  7541                           i1l264:
  7542  000664                     	goto	i1l265
  7543  000664  EFE7  F003         	
  7544                           i1l262:
  7545  000668                     	line	461
  7546                           ;main.c: 461:     switch(motor)
  7547                           	goto	i1l2284
  7548  000668  EFCE  F003         	line	463
  7549                           ;main.c: 462:     {;main.c: 463:         case 1:
  7550                           	
  7551                           i1l267:
  7552  00066C                     	line	464
  7553                           	
  7554                           i1l2268:
  7555  00066C                     ;main.c: 464:             CCPR1L=DutyCycle>>2;
  7556                           	movff	(c:M_set_DC@DutyCycle),??_M_set_DC+0+0
  7557  00066C  C001  F004         	movff	(c:M_set_DC@DutyCycle+1),??_M_set_DC+0+0+1
  7558  000670  C002  F005         	bcf	status,0
  7559  000674  90D8               	rrcf	(??_M_set_DC+0+1),c
  7560  000676  3205               	rrcf	(??_M_set_DC+0+0),c
  7561  000678  3204               	bcf	status,0
  7562  00067A  90D8               	rrcf	(??_M_set_DC+0+1),c
  7563  00067C  3205               	rrcf	(??_M_set_DC+0+0),c
  7564  00067E  3204               	movf	(??_M_set_DC+0+0),c,w
  7565  000680  5004               	movwf	((c:4030)),c	;volatile
  7566  000682  6EBE               	line	465
  7567                           ;main.c: 465:             DC1B1=(DutyCycle&2)>>1;
  7568                           	bcf	status,0
  7569  000684  90D8               	rrcf	((c:M_set_DC@DutyCycle+1)),c,w
  7570  000686  3002               	movwf	(??_M_set_DC+0+0+1)&0ffh,c
  7571  000688  6E05               	rrcf	((c:M_set_DC@DutyCycle)),c,w
  7572  00068A  3001               	movwf	(??_M_set_DC+0+0)&0ffh,c
  7573  00068C  6E04               	rrcf	(??_M_set_DC+0+0),c,w
  7574  00068E  3004               	btfsc	status,0
  7575  000690  B0D8               	goto	i1u181_21
  7576  000692  EF4D  F003         	goto	i1u181_20
  7577  000696  EF50  F003         i1u181_21:
  7578  00069A                     	bsf	c:(32237/8),(32237)&7	;volatile
  7579  00069A  8ABD               	goto	i1u182_25
  7580  00069C  EF51  F003         i1u181_20:
  7581  0006A0                     	bcf	c:(32237/8),(32237)&7	;volatile
  7582  0006A0  9ABD               i1u182_25:
  7583  0006A2                     	line	466
  7584                           	
  7585                           i1l2270:
  7586  0006A2                     ;main.c: 466:             DC1B0=DutyCycle&1;
  7587                           	btfsc	((c:M_set_DC@DutyCycle)),c,0
  7588  0006A2  B001               	goto	i1u183_21
  7589  0006A4  EF56  F003         	goto	i1u183_20
  7590  0006A8  EF59  F003         i1u183_21:
  7591  0006AC                     	bsf	c:(32236/8),(32236)&7	;volatile
  7592  0006AC  88BD               	goto	i1u184_25
  7593  0006AE  EF5A  F003         i1u183_20:
  7594  0006B2                     	bcf	c:(32236/8),(32236)&7	;volatile
  7595  0006B2  98BD               i1u184_25:
  7596  0006B4                     	line	467
  7597                           ;main.c: 467:             break;
  7598                           	goto	i1l265
  7599  0006B4  EFE7  F003         	line	468
  7600                           ;main.c: 468:         case 2:
  7601                           	
  7602                           i1l269:
  7603  0006B8                     	line	469
  7604                           	
  7605                           i1l2272:
  7606  0006B8                     ;main.c: 469:             CCPR2L=DutyCycle>>2;
  7607                           	movff	(c:M_set_DC@DutyCycle),??_M_set_DC+0+0
  7608  0006B8  C001  F004         	movff	(c:M_set_DC@DutyCycle+1),??_M_set_DC+0+0+1
  7609  0006BC  C002  F005         	bcf	status,0
  7610  0006C0  90D8               	rrcf	(??_M_set_DC+0+1),c
  7611  0006C2  3205               	rrcf	(??_M_set_DC+0+0),c
  7612  0006C4  3204               	bcf	status,0
  7613  0006C6  90D8               	rrcf	(??_M_set_DC+0+1),c
  7614  0006C8  3205               	rrcf	(??_M_set_DC+0+0),c
  7615  0006CA  3204               	movf	(??_M_set_DC+0+0),c,w
  7616  0006CC  5004               	movwf	((c:4027)),c	;volatile
  7617  0006CE  6EBB               	line	470
  7618                           ;main.c: 470:             DC2B1=(DutyCycle&2)>>1;
  7619                           	bcf	status,0
  7620  0006D0  90D8               	rrcf	((c:M_set_DC@DutyCycle+1)),c,w
  7621  0006D2  3002               	movwf	(??_M_set_DC+0+0+1)&0ffh,c
  7622  0006D4  6E05               	rrcf	((c:M_set_DC@DutyCycle)),c,w
  7623  0006D6  3001               	movwf	(??_M_set_DC+0+0)&0ffh,c
  7624  0006D8  6E04               	rrcf	(??_M_set_DC+0+0),c,w
  7625  0006DA  3004               	btfsc	status,0
  7626  0006DC  B0D8               	goto	i1u185_21
  7627  0006DE  EF73  F003         	goto	i1u185_20
  7628  0006E2  EF76  F003         i1u185_21:
  7629  0006E6                     	bsf	c:(32213/8),(32213)&7	;volatile
  7630  0006E6  8ABA               	goto	i1u186_25
  7631  0006E8  EF77  F003         i1u185_20:
  7632  0006EC                     	bcf	c:(32213/8),(32213)&7	;volatile
  7633  0006EC  9ABA               i1u186_25:
  7634  0006EE                     	line	471
  7635                           	
  7636                           i1l2274:
  7637  0006EE                     ;main.c: 471:             DC2B0=DutyCycle&1;
  7638                           	btfsc	((c:M_set_DC@DutyCycle)),c,0
  7639  0006EE  B001               	goto	i1u187_21
  7640  0006F0  EF7C  F003         	goto	i1u187_20
  7641  0006F4  EF7F  F003         i1u187_21:
  7642  0006F8                     	bsf	c:(32212/8),(32212)&7	;volatile
  7643  0006F8  88BA               	goto	i1u188_25
  7644  0006FA  EF80  F003         i1u187_20:
  7645  0006FE                     	bcf	c:(32212/8),(32212)&7	;volatile
  7646  0006FE  98BA               i1u188_25:
  7647  000700                     	line	472
  7648                           ;main.c: 472:             break;
  7649                           	goto	i1l265
  7650  000700  EFE7  F003         	line	473
  7651                           ;main.c: 473:         case 3:
  7652                           	
  7653                           i1l270:
  7654  000704                     	line	474
  7655                           	
  7656                           i1l2276:
  7657  000704                     ;main.c: 474:             CCPR1L=DutyCycle>>2;
  7658                           	movff	(c:M_set_DC@DutyCycle),??_M_set_DC+0+0
  7659  000704  C001  F004         	movff	(c:M_set_DC@DutyCycle+1),??_M_set_DC+0+0+1
  7660  000708  C002  F005         	bcf	status,0
  7661  00070C  90D8               	rrcf	(??_M_set_DC+0+1),c
  7662  00070E  3205               	rrcf	(??_M_set_DC+0+0),c
  7663  000710  3204               	bcf	status,0
  7664  000712  90D8               	rrcf	(??_M_set_DC+0+1),c
  7665  000714  3205               	rrcf	(??_M_set_DC+0+0),c
  7666  000716  3204               	movf	(??_M_set_DC+0+0),c,w
  7667  000718  5004               	movwf	((c:4030)),c	;volatile
  7668  00071A  6EBE               	line	475
  7669                           ;main.c: 475:             DC1B1=(DutyCycle&2)>>1;
  7670                           	bcf	status,0
  7671  00071C  90D8               	rrcf	((c:M_set_DC@DutyCycle+1)),c,w
  7672  00071E  3002               	movwf	(??_M_set_DC+0+0+1)&0ffh,c
  7673  000720  6E05               	rrcf	((c:M_set_DC@DutyCycle)),c,w
  7674  000722  3001               	movwf	(??_M_set_DC+0+0)&0ffh,c
  7675  000724  6E04               	rrcf	(??_M_set_DC+0+0),c,w
  7676  000726  3004               	btfsc	status,0
  7677  000728  B0D8               	goto	i1u189_21
  7678  00072A  EF99  F003         	goto	i1u189_20
  7679  00072E  EF9C  F003         i1u189_21:
  7680  000732                     	bsf	c:(32237/8),(32237)&7	;volatile
  7681  000732  8ABD               	goto	i1u190_25
  7682  000734  EF9D  F003         i1u189_20:
  7683  000738                     	bcf	c:(32237/8),(32237)&7	;volatile
  7684  000738  9ABD               i1u190_25:
  7685  00073A                     	line	476
  7686                           	
  7687                           i1l2278:
  7688  00073A                     ;main.c: 476:             DC1B0=DutyCycle&1;
  7689                           	btfsc	((c:M_set_DC@DutyCycle)),c,0
  7690  00073A  B001               	goto	i1u191_21
  7691  00073C  EFA2  F003         	goto	i1u191_20
  7692  000740  EFA5  F003         i1u191_21:
  7693  000744                     	bsf	c:(32236/8),(32236)&7	;volatile
  7694  000744  88BD               	goto	i1u192_25
  7695  000746  EFA6  F003         i1u191_20:
  7696  00074A                     	bcf	c:(32236/8),(32236)&7	;volatile
  7697  00074A  98BD               i1u192_25:
  7698  00074C                     	line	477
  7699                           ;main.c: 477:             CCPR2L=DutyCycle>>2;
  7700                           	movff	(c:M_set_DC@DutyCycle),??_M_set_DC+0+0
  7701  00074C  C001  F004         	movff	(c:M_set_DC@DutyCycle+1),??_M_set_DC+0+0+1
  7702  000750  C002  F005         	bcf	status,0
  7703  000754  90D8               	rrcf	(??_M_set_DC+0+1),c
  7704  000756  3205               	rrcf	(??_M_set_DC+0+0),c
  7705  000758  3204               	bcf	status,0
  7706  00075A  90D8               	rrcf	(??_M_set_DC+0+1),c
  7707  00075C  3205               	rrcf	(??_M_set_DC+0+0),c
  7708  00075E  3204               	movf	(??_M_set_DC+0+0),c,w
  7709  000760  5004               	movwf	((c:4027)),c	;volatile
  7710  000762  6EBB               	line	478
  7711                           ;main.c: 478:             DC2B1=(DutyCycle&2)>>1;
  7712                           	bcf	status,0
  7713  000764  90D8               	rrcf	((c:M_set_DC@DutyCycle+1)),c,w
  7714  000766  3002               	movwf	(??_M_set_DC+0+0+1)&0ffh,c
  7715  000768  6E05               	rrcf	((c:M_set_DC@DutyCycle)),c,w
  7716  00076A  3001               	movwf	(??_M_set_DC+0+0)&0ffh,c
  7717  00076C  6E04               	rrcf	(??_M_set_DC+0+0),c,w
  7718  00076E  3004               	btfsc	status,0
  7719  000770  B0D8               	goto	i1u193_21
  7720  000772  EFBD  F003         	goto	i1u193_20
  7721  000776  EFC0  F003         i1u193_21:
  7722  00077A                     	bsf	c:(32213/8),(32213)&7	;volatile
  7723  00077A  8ABA               	goto	i1u194_25
  7724  00077C  EFC1  F003         i1u193_20:
  7725  000780                     	bcf	c:(32213/8),(32213)&7	;volatile
  7726  000780  9ABA               i1u194_25:
  7727  000782                     	line	479
  7728                           	
  7729                           i1l2280:
  7730  000782                     ;main.c: 479:             DC2B0=DutyCycle&1;
  7731                           	btfsc	((c:M_set_DC@DutyCycle)),c,0
  7732  000782  B001               	goto	i1u195_21
  7733  000784  EFC6  F003         	goto	i1u195_20
  7734  000788  EFC9  F003         i1u195_21:
  7735  00078C                     	bsf	c:(32212/8),(32212)&7	;volatile
  7736  00078C  88BA               	goto	i1u196_25
  7737  00078E  EFCA  F003         i1u195_20:
  7738  000792                     	bcf	c:(32212/8),(32212)&7	;volatile
  7739  000792  98BA               i1u196_25:
  7740  000794                     	line	480
  7741                           ;main.c: 480:             break;
  7742                           	goto	i1l265
  7743  000794  EFE7  F003         	line	481
  7744                           	
  7745                           i1l2282:
  7746  000798                     ;main.c: 481:     }
  7747                           	goto	i1l265
  7748  000798  EFE7  F003         	
  7749                           i1l266:
  7750  00079C                     	
  7751                           i1l2284:
  7752  00079C                     	movf	((c:M_set_DC@motor)),c,w
  7753  00079C  5003               	movwf	(??_M_set_DC+0+0)&0ffh,c
  7754  00079E  6E04               	clrf	(??_M_set_DC+0+0+1)&0ffh,c
  7755  0007A0  6A05               
  7756                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  7757                           ; Switch size 1, requested type "space"
  7758                           ; Number of cases is 1, Range of values is 0 to 0
  7759                           ; switch strategies available:
  7760                           ; Name         Instructions Cycles
  7761                           ; simple_byte            4     3 (average)
  7762                           ;	Chosen strategy is simple_byte
  7763                           
  7764                           	movf ??_M_set_DC+0+1,c,w
  7765  0007A2  5005               	xorlw	0^0	; case 0
  7766  0007A4  0A00               	skipnz
  7767  0007A6  B4D8               	goto	i1l2554
  7768  0007A8  EFD8  F003         	goto	i1l265
  7769  0007AC  EFE7  F003         	
  7770                           i1l2554:
  7771  0007B0                     ; Switch size 1, requested type "space"
  7772                           ; Number of cases is 3, Range of values is 1 to 3
  7773                           ; switch strategies available:
  7774                           ; Name         Instructions Cycles
  7775                           ; simple_byte           10     6 (average)
  7776                           ;	Chosen strategy is simple_byte
  7777                           
  7778                           	movf ??_M_set_DC+0+0,c,w
  7779  0007B0  5004               	xorlw	1^0	; case 1
  7780  0007B2  0A01               	skipnz
  7781  0007B4  B4D8               	goto	i1l2268
  7782  0007B6  EF36  F003         	xorlw	2^1	; case 2
  7783  0007BA  0A03               	skipnz
  7784  0007BC  B4D8               	goto	i1l2272
  7785  0007BE  EF5C  F003         	xorlw	3^2	; case 3
  7786  0007C2  0A01               	skipnz
  7787  0007C4  B4D8               	goto	i1l2276
  7788  0007C6  EF82  F003         	goto	i1l265
  7789  0007CA  EFE7  F003         
  7790                           	
  7791                           i1l268:
  7792  0007CE                     	line	482
  7793                           	
  7794                           i1l265:
  7795  0007CE                     	return	;funcret
  7796  0007CE  0012               	opt stack 0
  7797                           GLOBAL	__end_of_M_set_DC
  7798                           	__end_of_M_set_DC:
  7799  0007D0                     	signat	_M_set_DC,8313
  7800                           	global	_M_foward_direction
  7801                           
  7802 ;; *************** function _M_foward_direction *****************
  7803 ;; Defined at:
  7804 ;;		line 403 in file "main.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;		None
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;		None
  7809 ;; Return value:  Size  Location     Type
  7810 ;;                  1    wreg      void 
  7811 ;; Registers used:
  7812 ;;		wreg, status,2, status,0
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7818 ;;      Params:         0       0       0       0       0       0       0
  7819 ;;      Locals:         0       0       0       0       0       0       0
  7820 ;;      Temps:          0       0       0       0       0       0       0
  7821 ;;      Totals:         0       0       0       0       0       0       0
  7822 ;;Total ram usage:        0 bytes
  7823 ;; Hardware stack levels used:    1
  7824 ;; This function calls:
  7825 ;;		Nothing
  7826 ;; This function is called by:
  7827 ;;		_Rx_ISR
  7828 ;; This function uses a non-reentrant model
  7829 ;;
  7830                           psect	text32,class=CODE,space=0,reloc=2,group=0
  7831                           	line	403
  7832                           global __ptext32
  7833                           __ptext32:
  7834  0015B6                     psect	text32
  7835                           	file	"main.c"
  7836                           	line	403
  7837                           	global	__size_of_M_foward_direction
  7838                           	__size_of_M_foward_direction	equ	__end_of_M_foward_direction-_M_foward_direction
  7839  0000                     	
  7840                           _M_foward_direction:
  7841  0015B6                     ;incstack = 0
  7842                           	opt	stack 26
  7843                           	line	405
  7844                           	
  7845                           i1l2244:
  7846  0015B6                     ;main.c: 405:     if(CCPR1L!=CCPR2L)
  7847                           	movf	((c:4027)),c,w	;volatile
  7848  0015B6  50BB               xorwf	((c:4030)),c,w	;volatile
  7849  0015B8  18BE               	btfsc	status,2
  7850  0015BA  B4D8               	goto	i1u157_21
  7851  0015BC  EFE2  F00A         	goto	i1u157_20
  7852  0015C0  EFE4  F00A         
  7853                           i1u157_21:
  7854  0015C4                     	goto	i1l242
  7855  0015C4  EFF8  F00A         i1u157_20:
  7856  0015C8                     	line	407
  7857                           	
  7858                           i1l2246:
  7859  0015C8                     ;main.c: 406:     {;main.c: 407:         CCPR2L=CCPR1L;
  7860                           	movff	(c:4030),(c:4027)	;volatile
  7861  0015C8  CFBE FFBB          	line	408
  7862                           ;main.c: 408:         DC2B1=DC1B1;
  7863                           	btfsc	c:(32237/8),(32237)&7	;volatile
  7864  0015CC  BABD               	goto	i1u158_21
  7865  0015CE  EFEB  F00A         	goto	i1u158_20
  7866  0015D2  EFEE  F00A         i1u158_21:
  7867  0015D6                     	bsf	c:(32213/8),(32213)&7	;volatile
  7868  0015D6  8ABA               	goto	i1u159_25
  7869  0015D8  EFEF  F00A         i1u158_20:
  7870  0015DC                     	bcf	c:(32213/8),(32213)&7	;volatile
  7871  0015DC  9ABA               i1u159_25:
  7872  0015DE                     	line	409
  7873                           ;main.c: 409:         DC2B0=DC1B0;
  7874                           	btfsc	c:(32236/8),(32236)&7	;volatile
  7875  0015DE  B8BD               	goto	i1u160_21
  7876  0015E0  EFF4  F00A         	goto	i1u160_20
  7877  0015E4  EFF7  F00A         i1u160_21:
  7878  0015E8                     	bsf	c:(32212/8),(32212)&7	;volatile
  7879  0015E8  88BA               	goto	i1u161_25
  7880  0015EA  EFF8  F00A         i1u160_20:
  7881  0015EE                     	bcf	c:(32212/8),(32212)&7	;volatile
  7882  0015EE  98BA               i1u161_25:
  7883  0015F0                     	line	410
  7884                           ;main.c: 410:     }
  7885                           	
  7886                           i1l242:
  7887  0015F0                     	line	411
  7888                           ;main.c: 411:     LATDbits.LD4=1;LATDbits.LD6=1;LATDbits.LD5=0;LATDbits.LD7=0;
  7889                           	bsf	((c:3980)),c,4	;volatile
  7890  0015F0  888C               	bsf	((c:3980)),c,6	;volatile
  7891  0015F2  8C8C               	bcf	((c:3980)),c,5	;volatile
  7892  0015F4  9A8C               	bcf	((c:3980)),c,7	;volatile
  7893  0015F6  9E8C               	line	412
  7894                           	
  7895                           i1l243:
  7896  0015F8                     	return	;funcret
  7897  0015F8  0012               	opt stack 0
  7898                           GLOBAL	__end_of_M_foward_direction
  7899                           	__end_of_M_foward_direction:
  7900  0015FA                     	signat	_M_foward_direction,89
  7901                           	global	_M_clockwise_direction
  7902                           
  7903 ;; *************** function _M_clockwise_direction *****************
  7904 ;; Defined at:
  7905 ;;		line 425 in file "main.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;		None
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;		None
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  1    wreg      void 
  7912 ;; Registers used:
  7913 ;;		wreg, status,2, status,0
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7919 ;;      Params:         0       0       0       0       0       0       0
  7920 ;;      Locals:         0       0       0       0       0       0       0
  7921 ;;      Temps:          0       0       0       0       0       0       0
  7922 ;;      Totals:         0       0       0       0       0       0       0
  7923 ;;Total ram usage:        0 bytes
  7924 ;; Hardware stack levels used:    1
  7925 ;; This function calls:
  7926 ;;		Nothing
  7927 ;; This function is called by:
  7928 ;;		_Rx_ISR
  7929 ;; This function uses a non-reentrant model
  7930 ;;
  7931                           psect	text33,class=CODE,space=0,reloc=2,group=0
  7932                           	line	425
  7933                           global __ptext33
  7934                           __ptext33:
  7935  0015FA                     psect	text33
  7936                           	file	"main.c"
  7937                           	line	425
  7938                           	global	__size_of_M_clockwise_direction
  7939                           	__size_of_M_clockwise_direction	equ	__end_of_M_clockwise_direction-_M_clockwise_directi
                                 on
  7940  0000                     	
  7941                           _M_clockwise_direction:
  7942  0015FA                     ;incstack = 0
  7943                           	opt	stack 26
  7944                           	line	427
  7945                           	
  7946                           i1l2252:
  7947  0015FA                     ;main.c: 427:     if(CCPR1L!=CCPR2L)
  7948                           	movf	((c:4027)),c,w	;volatile
  7949  0015FA  50BB               xorwf	((c:4030)),c,w	;volatile
  7950  0015FC  18BE               	btfsc	status,2
  7951  0015FE  B4D8               	goto	i1u167_21
  7952  001600  EF04  F00B         	goto	i1u167_20
  7953  001604  EF06  F00B         
  7954                           i1u167_21:
  7955  001608                     	goto	i1l250
  7956  001608  EF1A  F00B         i1u167_20:
  7957  00160C                     	line	429
  7958                           	
  7959                           i1l2254:
  7960  00160C                     ;main.c: 428:     {;main.c: 429:         CCPR2L=CCPR1L;
  7961                           	movff	(c:4030),(c:4027)	;volatile
  7962  00160C  CFBE FFBB          	line	430
  7963                           ;main.c: 430:         DC2B1=DC1B1;
  7964                           	btfsc	c:(32237/8),(32237)&7	;volatile
  7965  001610  BABD               	goto	i1u168_21
  7966  001612  EF0D  F00B         	goto	i1u168_20
  7967  001616  EF10  F00B         i1u168_21:
  7968  00161A                     	bsf	c:(32213/8),(32213)&7	;volatile
  7969  00161A  8ABA               	goto	i1u169_25
  7970  00161C  EF11  F00B         i1u168_20:
  7971  001620                     	bcf	c:(32213/8),(32213)&7	;volatile
  7972  001620  9ABA               i1u169_25:
  7973  001622                     	line	431
  7974                           ;main.c: 431:         DC2B0=DC1B0;
  7975                           	btfsc	c:(32236/8),(32236)&7	;volatile
  7976  001622  B8BD               	goto	i1u170_21
  7977  001624  EF16  F00B         	goto	i1u170_20
  7978  001628  EF19  F00B         i1u170_21:
  7979  00162C                     	bsf	c:(32212/8),(32212)&7	;volatile
  7980  00162C  88BA               	goto	i1u171_25
  7981  00162E  EF1A  F00B         i1u170_20:
  7982  001632                     	bcf	c:(32212/8),(32212)&7	;volatile
  7983  001632  98BA               i1u171_25:
  7984  001634                     	line	432
  7985                           ;main.c: 432:     }
  7986                           	
  7987                           i1l250:
  7988  001634                     	line	433
  7989                           ;main.c: 433:     LATDbits.LD4=1;LATDbits.LD6=0;LATDbits.LD5=0;LATDbits.LD7=1;
  7990                           	bsf	((c:3980)),c,4	;volatile
  7991  001634  888C               	bcf	((c:3980)),c,6	;volatile
  7992  001636  9C8C               	bcf	((c:3980)),c,5	;volatile
  7993  001638  9A8C               	bsf	((c:3980)),c,7	;volatile
  7994  00163A  8E8C               	line	434
  7995                           	
  7996                           i1l251:
  7997  00163C                     	return	;funcret
  7998  00163C  0012               	opt stack 0
  7999                           GLOBAL	__end_of_M_clockwise_direction
  8000                           	__end_of_M_clockwise_direction:
  8001  00163E                     	signat	_M_clockwise_direction,89
  8002                           	global	_M_backward_direction
  8003                           
  8004 ;; *************** function _M_backward_direction *****************
  8005 ;; Defined at:
  8006 ;;		line 414 in file "main.c"
  8007 ;; Parameters:    Size  Location     Type
  8008 ;;		None
  8009 ;; Auto vars:     Size  Location     Type
  8010 ;;		None
  8011 ;; Return value:  Size  Location     Type
  8012 ;;                  1    wreg      void 
  8013 ;; Registers used:
  8014 ;;		wreg, status,2, status,0
  8015 ;; Tracked objects:
  8016 ;;		On entry : 0/0
  8017 ;;		On exit  : 0/0
  8018 ;;		Unchanged: 0/0
  8019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8020 ;;      Params:         0       0       0       0       0       0       0
  8021 ;;      Locals:         0       0       0       0       0       0       0
  8022 ;;      Temps:          0       0       0       0       0       0       0
  8023 ;;      Totals:         0       0       0       0       0       0       0
  8024 ;;Total ram usage:        0 bytes
  8025 ;; Hardware stack levels used:    1
  8026 ;; This function calls:
  8027 ;;		Nothing
  8028 ;; This function is called by:
  8029 ;;		_Rx_ISR
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           psect	text34,class=CODE,space=0,reloc=2,group=0
  8033                           	line	414
  8034                           global __ptext34
  8035                           __ptext34:
  8036  00163E                     psect	text34
  8037                           	file	"main.c"
  8038                           	line	414
  8039                           	global	__size_of_M_backward_direction
  8040                           	__size_of_M_backward_direction	equ	__end_of_M_backward_direction-_M_backward_direction

  8041  0000                     	
  8042                           _M_backward_direction:
  8043  00163E                     ;incstack = 0
  8044                           	opt	stack 26
  8045                           	line	416
  8046                           	
  8047                           i1l2248:
  8048  00163E                     ;main.c: 416:     if(CCPR1L!=CCPR2L)
  8049                           	movf	((c:4027)),c,w	;volatile
  8050  00163E  50BB               xorwf	((c:4030)),c,w	;volatile
  8051  001640  18BE               	btfsc	status,2
  8052  001642  B4D8               	goto	i1u162_21
  8053  001644  EF26  F00B         	goto	i1u162_20
  8054  001648  EF28  F00B         
  8055                           i1u162_21:
  8056  00164C                     	goto	i1l246
  8057  00164C  EF3C  F00B         i1u162_20:
  8058  001650                     	line	418
  8059                           	
  8060                           i1l2250:
  8061  001650                     ;main.c: 417:     {;main.c: 418:         CCPR2L=CCPR1L;
  8062                           	movff	(c:4030),(c:4027)	;volatile
  8063  001650  CFBE FFBB          	line	419
  8064                           ;main.c: 419:         DC2B1=DC1B1;
  8065                           	btfsc	c:(32237/8),(32237)&7	;volatile
  8066  001654  BABD               	goto	i1u163_21
  8067  001656  EF2F  F00B         	goto	i1u163_20
  8068  00165A  EF32  F00B         i1u163_21:
  8069  00165E                     	bsf	c:(32213/8),(32213)&7	;volatile
  8070  00165E  8ABA               	goto	i1u164_25
  8071  001660  EF33  F00B         i1u163_20:
  8072  001664                     	bcf	c:(32213/8),(32213)&7	;volatile
  8073  001664  9ABA               i1u164_25:
  8074  001666                     	line	420
  8075                           ;main.c: 420:         DC2B0=DC1B0;
  8076                           	btfsc	c:(32236/8),(32236)&7	;volatile
  8077  001666  B8BD               	goto	i1u165_21
  8078  001668  EF38  F00B         	goto	i1u165_20
  8079  00166C  EF3B  F00B         i1u165_21:
  8080  001670                     	bsf	c:(32212/8),(32212)&7	;volatile
  8081  001670  88BA               	goto	i1u166_25
  8082  001672  EF3C  F00B         i1u165_20:
  8083  001676                     	bcf	c:(32212/8),(32212)&7	;volatile
  8084  001676  98BA               i1u166_25:
  8085  001678                     	line	421
  8086                           ;main.c: 421:     }
  8087                           	
  8088                           i1l246:
  8089  001678                     	line	422
  8090                           ;main.c: 422:     LATDbits.LD4=0;LATDbits.LD6=0;LATDbits.LD5=1;LATDbits.LD7=1;
  8091                           	bcf	((c:3980)),c,4	;volatile
  8092  001678  988C               	bcf	((c:3980)),c,6	;volatile
  8093  00167A  9C8C               	bsf	((c:3980)),c,5	;volatile
  8094  00167C  8A8C               	bsf	((c:3980)),c,7	;volatile
  8095  00167E  8E8C               	line	423
  8096                           	
  8097                           i1l247:
  8098  001680                     	return	;funcret
  8099  001680  0012               	opt stack 0
  8100                           GLOBAL	__end_of_M_backward_direction
  8101                           	__end_of_M_backward_direction:
  8102  001682                     	signat	_M_backward_direction,89
  8103                           	global	_M_anticlockwise_direction
  8104                           
  8105 ;; *************** function _M_anticlockwise_direction *****************
  8106 ;; Defined at:
  8107 ;;		line 436 in file "main.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;		None
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;		None
  8112 ;; Return value:  Size  Location     Type
  8113 ;;                  1    wreg      void 
  8114 ;; Registers used:
  8115 ;;		wreg, status,2, status,0
  8116 ;; Tracked objects:
  8117 ;;		On entry : 0/0
  8118 ;;		On exit  : 0/0
  8119 ;;		Unchanged: 0/0
  8120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8121 ;;      Params:         0       0       0       0       0       0       0
  8122 ;;      Locals:         0       0       0       0       0       0       0
  8123 ;;      Temps:          0       0       0       0       0       0       0
  8124 ;;      Totals:         0       0       0       0       0       0       0
  8125 ;;Total ram usage:        0 bytes
  8126 ;; Hardware stack levels used:    1
  8127 ;; This function calls:
  8128 ;;		Nothing
  8129 ;; This function is called by:
  8130 ;;		_Rx_ISR
  8131 ;; This function uses a non-reentrant model
  8132 ;;
  8133                           psect	text35,class=CODE,space=0,reloc=2,group=0
  8134                           	line	436
  8135                           global __ptext35
  8136                           __ptext35:
  8137  001682                     psect	text35
  8138                           	file	"main.c"
  8139                           	line	436
  8140                           	global	__size_of_M_anticlockwise_direction
  8141                           	__size_of_M_anticlockwise_direction	equ	__end_of_M_anticlockwise_direction-_M_anticlock
                                 wise_direction
  8142  0000                     	
  8143                           _M_anticlockwise_direction:
  8144  001682                     ;incstack = 0
  8145                           	opt	stack 26
  8146                           	line	438
  8147                           	
  8148                           i1l2256:
  8149  001682                     ;main.c: 438:     if(CCPR1L!=CCPR2L)
  8150                           	movf	((c:4027)),c,w	;volatile
  8151  001682  50BB               xorwf	((c:4030)),c,w	;volatile
  8152  001684  18BE               	btfsc	status,2
  8153  001686  B4D8               	goto	i1u172_21
  8154  001688  EF48  F00B         	goto	i1u172_20
  8155  00168C  EF4A  F00B         
  8156                           i1u172_21:
  8157  001690                     	goto	i1l254
  8158  001690  EF5E  F00B         i1u172_20:
  8159  001694                     	line	440
  8160                           	
  8161                           i1l2258:
  8162  001694                     ;main.c: 439:     {;main.c: 440:         CCPR2L=CCPR1L;
  8163                           	movff	(c:4030),(c:4027)	;volatile
  8164  001694  CFBE FFBB          	line	441
  8165                           ;main.c: 441:         DC2B1=DC1B1;
  8166                           	btfsc	c:(32237/8),(32237)&7	;volatile
  8167  001698  BABD               	goto	i1u173_21
  8168  00169A  EF51  F00B         	goto	i1u173_20
  8169  00169E  EF54  F00B         i1u173_21:
  8170  0016A2                     	bsf	c:(32213/8),(32213)&7	;volatile
  8171  0016A2  8ABA               	goto	i1u174_25
  8172  0016A4  EF55  F00B         i1u173_20:
  8173  0016A8                     	bcf	c:(32213/8),(32213)&7	;volatile
  8174  0016A8  9ABA               i1u174_25:
  8175  0016AA                     	line	442
  8176                           ;main.c: 442:         DC2B0=DC1B0;
  8177                           	btfsc	c:(32236/8),(32236)&7	;volatile
  8178  0016AA  B8BD               	goto	i1u175_21
  8179  0016AC  EF5A  F00B         	goto	i1u175_20
  8180  0016B0  EF5D  F00B         i1u175_21:
  8181  0016B4                     	bsf	c:(32212/8),(32212)&7	;volatile
  8182  0016B4  88BA               	goto	i1u176_25
  8183  0016B6  EF5E  F00B         i1u175_20:
  8184  0016BA                     	bcf	c:(32212/8),(32212)&7	;volatile
  8185  0016BA  98BA               i1u176_25:
  8186  0016BC                     	line	443
  8187                           ;main.c: 443:     }
  8188                           	
  8189                           i1l254:
  8190  0016BC                     	line	444
  8191                           ;main.c: 444:     LATDbits.LD4=0;LATDbits.LD6=1;LATDbits.LD5=1;LATDbits.LD7=0;
  8192                           	bcf	((c:3980)),c,4	;volatile
  8193  0016BC  988C               	bsf	((c:3980)),c,6	;volatile
  8194  0016BE  8C8C               	bsf	((c:3980)),c,5	;volatile
  8195  0016C0  8A8C               	bcf	((c:3980)),c,7	;volatile
  8196  0016C2  9E8C               	line	445
  8197                           	
  8198                           i1l255:
  8199  0016C4                     	return	;funcret
  8200  0016C4  0012               	opt stack 0
  8201                           GLOBAL	__end_of_M_anticlockwise_direction
  8202                           	__end_of_M_anticlockwise_direction:
  8203  0016C6                     	signat	_M_anticlockwise_direction,89
  8204                           	global	_L_turn_on
  8205                           
  8206 ;; *************** function _L_turn_on *****************
  8207 ;; Defined at:
  8208 ;;		line 358 in file "main.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;		None
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;		None
  8213 ;; Return value:  Size  Location     Type
  8214 ;;                  1    wreg      void 
  8215 ;; Registers used:
  8216 ;;		None
  8217 ;; Tracked objects:
  8218 ;;		On entry : 0/0
  8219 ;;		On exit  : 0/0
  8220 ;;		Unchanged: 0/0
  8221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8222 ;;      Params:         0       0       0       0       0       0       0
  8223 ;;      Locals:         0       0       0       0       0       0       0
  8224 ;;      Temps:          0       0       0       0       0       0       0
  8225 ;;      Totals:         0       0       0       0       0       0       0
  8226 ;;Total ram usage:        0 bytes
  8227 ;; Hardware stack levels used:    1
  8228 ;; This function calls:
  8229 ;;		Nothing
  8230 ;; This function is called by:
  8231 ;;		_Rx_ISR
  8232 ;; This function uses a non-reentrant model
  8233 ;;
  8234                           psect	text36,class=CODE,space=0,reloc=2,group=0
  8235                           	line	358
  8236                           global __ptext36
  8237                           __ptext36:
  8238  001844                     psect	text36
  8239                           	file	"main.c"
  8240                           	line	358
  8241                           	global	__size_of_L_turn_on
  8242                           	__size_of_L_turn_on	equ	__end_of_L_turn_on-_L_turn_on
  8243  0000                     	
  8244                           _L_turn_on:
  8245  001844                     ;incstack = 0
  8246                           	opt	stack 26
  8247                           	line	360
  8248                           	
  8249                           i1l2240:
  8250  001844                     ;main.c: 360:     LATCbits.LC3=1;
  8251                           	bsf	((c:3979)),c,3	;volatile
  8252  001844  868B               	line	361
  8253                           ;main.c: 361:     LATCbits.LC4=1;
  8254                           	bsf	((c:3979)),c,4	;volatile
  8255  001846  888B               	line	362
  8256                           ;main.c: 362:     LATCbits.LC5=1;
  8257                           	bsf	((c:3979)),c,5	;volatile
  8258  001848  8A8B               	line	364
  8259                           ;main.c: 363:     return;
  8260                           	
  8261                           i1l230:
  8262  00184A                     	return	;funcret
  8263  00184A  0012               	opt stack 0
  8264                           GLOBAL	__end_of_L_turn_on
  8265                           	__end_of_L_turn_on:
  8266  00184C                     	signat	_L_turn_on,89
  8267                           	global	_L_turn_off
  8268                           
  8269 ;; *************** function _L_turn_off *****************
  8270 ;; Defined at:
  8271 ;;		line 366 in file "main.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;		None
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;		None
  8276 ;; Return value:  Size  Location     Type
  8277 ;;                  1    wreg      void 
  8278 ;; Registers used:
  8279 ;;		None
  8280 ;; Tracked objects:
  8281 ;;		On entry : 0/0
  8282 ;;		On exit  : 0/0
  8283 ;;		Unchanged: 0/0
  8284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8285 ;;      Params:         0       0       0       0       0       0       0
  8286 ;;      Locals:         0       0       0       0       0       0       0
  8287 ;;      Temps:          0       0       0       0       0       0       0
  8288 ;;      Totals:         0       0       0       0       0       0       0
  8289 ;;Total ram usage:        0 bytes
  8290 ;; Hardware stack levels used:    1
  8291 ;; This function calls:
  8292 ;;		Nothing
  8293 ;; This function is called by:
  8294 ;;		_Rx_ISR
  8295 ;; This function uses a non-reentrant model
  8296 ;;
  8297                           psect	text37,class=CODE,space=0,reloc=2,group=0
  8298                           	line	366
  8299                           global __ptext37
  8300                           __ptext37:
  8301  00184C                     psect	text37
  8302                           	file	"main.c"
  8303                           	line	366
  8304                           	global	__size_of_L_turn_off
  8305                           	__size_of_L_turn_off	equ	__end_of_L_turn_off-_L_turn_off
  8306  0000                     	
  8307                           _L_turn_off:
  8308  00184C                     ;incstack = 0
  8309                           	opt	stack 26
  8310                           	line	368
  8311                           	
  8312                           i1l2242:
  8313  00184C                     ;main.c: 368:     LATCbits.LC3=0;
  8314                           	bcf	((c:3979)),c,3	;volatile
  8315  00184C  968B               	line	369
  8316                           ;main.c: 369:     LATCbits.LC4=0;
  8317                           	bcf	((c:3979)),c,4	;volatile
  8318  00184E  988B               	line	370
  8319                           ;main.c: 370:     LATCbits.LC5=0;
  8320                           	bcf	((c:3979)),c,5	;volatile
  8321  001850  9A8B               	line	372
  8322                           ;main.c: 371:     return;
  8323                           	
  8324                           i1l233:
  8325  001852                     	return	;funcret
  8326  001852  0012               	opt stack 0
  8327                           GLOBAL	__end_of_L_turn_off
  8328                           	__end_of_L_turn_off:
  8329  001854                     	signat	_L_turn_off,89
  8330                           	global	_LCD_clear
  8331                           
  8332 ;; *************** function _LCD_clear *****************
  8333 ;; Defined at:
  8334 ;;		line 279 in file "main.c"
  8335 ;; Parameters:    Size  Location     Type
  8336 ;;		None
  8337 ;; Auto vars:     Size  Location     Type
  8338 ;;		None
  8339 ;; Return value:  Size  Location     Type
  8340 ;;                  1    wreg      void 
  8341 ;; Registers used:
  8342 ;;		wreg, status,2, status,0, cstack
  8343 ;; Tracked objects:
  8344 ;;		On entry : 0/0
  8345 ;;		On exit  : 0/0
  8346 ;;		Unchanged: 0/0
  8347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8348 ;;      Params:         0       0       0       0       0       0       0
  8349 ;;      Locals:         0       0       0       0       0       0       0
  8350 ;;      Temps:          0       0       0       0       0       0       0
  8351 ;;      Totals:         0       0       0       0       0       0       0
  8352 ;;Total ram usage:        0 bytes
  8353 ;; Hardware stack levels used:    1
  8354 ;; Hardware stack levels required when called:    1
  8355 ;; This function calls:
  8356 ;;		i1_LCD_command
  8357 ;; This function is called by:
  8358 ;;		_Rx_ISR
  8359 ;; This function uses a non-reentrant model
  8360 ;;
  8361                           psect	text38,class=CODE,space=0,reloc=2,group=0
  8362                           	line	279
  8363                           global __ptext38
  8364                           __ptext38:
  8365  001830                     psect	text38
  8366                           	file	"main.c"
  8367                           	line	279
  8368                           	global	__size_of_LCD_clear
  8369                           	__size_of_LCD_clear	equ	__end_of_LCD_clear-_LCD_clear
  8370  0000                     	
  8371                           _LCD_clear:
  8372  001830                     ;incstack = 0
  8373                           	opt	stack 25
  8374                           	line	281
  8375                           	
  8376                           i1l2214:
  8377  001830                     ;main.c: 281:     LCD_command(0x01);
  8378                           	movlw	(01h)&0ffh
  8379  001830  0E01               	
  8380                           	call	i1_LCD_command
  8381  001832  ECD5  F008         	goto	i1l209
  8382  001836  EF1D  F00C         	line	282
  8383                           	
  8384                           i1l2216:
  8385  00183A                     	line	283
  8386                           ;main.c: 282:     return;
  8387                           	
  8388                           i1l209:
  8389  00183A                     	return	;funcret
  8390  00183A  0012               	opt stack 0
  8391                           GLOBAL	__end_of_LCD_clear
  8392                           	__end_of_LCD_clear:
  8393  00183C                     	signat	_LCD_clear,89
  8394                           	global	i1_LCD_command
  8395                           
  8396 ;; *************** function i1_LCD_command *****************
  8397 ;; Defined at:
  8398 ;;		line 207 in file "main.c"
  8399 ;; Parameters:    Size  Location     Type
  8400 ;;  cmd             1    wreg     unsigned char 
  8401 ;; Auto vars:     Size  Location     Type
  8402 ;;  cmd             1    2[COMRAM] unsigned char 
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  1    wreg      void 
  8405 ;; Registers used:
  8406 ;;		wreg, status,2, status,0
  8407 ;; Tracked objects:
  8408 ;;		On entry : 0/0
  8409 ;;		On exit  : 0/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8412 ;;      Params:         0       0       0       0       0       0       0
  8413 ;;      Locals:         1       0       0       0       0       0       0
  8414 ;;      Temps:          2       0       0       0       0       0       0
  8415 ;;      Totals:         3       0       0       0       0       0       0
  8416 ;;Total ram usage:        3 bytes
  8417 ;; Hardware stack levels used:    1
  8418 ;; This function calls:
  8419 ;;		Nothing
  8420 ;; This function is called by:
  8421 ;;		_LCD_clear
  8422 ;;		_US_print_distance
  8423 ;;		i1_LCD_string
  8424 ;;		i1_LCD_string_xy
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           psect	text39,class=CODE,space=0,reloc=2,group=0
  8428                           	line	207
  8429                           global __ptext39
  8430                           __ptext39:
  8431  0011AA                     psect	text39
  8432                           	file	"main.c"
  8433                           	line	207
  8434                           	global	__size_ofi1_LCD_command
  8435                           	__size_ofi1_LCD_command	equ	__end_ofi1_LCD_command-i1_LCD_command
  8436  0000                     	
  8437                           i1_LCD_command:
  8438  0011AA                     ;incstack = 0
  8439                           	opt	stack 24
  8440                           ;i1LCD_command@cmd stored from wreg
  8441                           	movwf	((c:i1LCD_command@cmd)),c
  8442  0011AA  6E03               	line	209
  8443                           	
  8444                           i1l1798:
  8445  0011AC                     ;main.c: 207: void LCD_command(unsigned char cmd );main.c: 208: {;main.c: 209:     nibbl
                                 e=cmd;
  8446                           	movff	(c:i1LCD_command@cmd),(c:_nibble)	;volatile
  8447  0011AC  C003  F067         	line	210
  8448                           	
  8449                           i1l1800:
  8450  0011B0                     ;main.c: 210:     LATB = (0xF0 & nibble)>>2;
  8451                           	rrncf	((c:_nibble)),c,w	;volatile
  8452  0011B0  4067               	rrncf	wreg
  8453  0011B2  42E8               	andlw	(0ffh shr 2) & 0ffh
  8454  0011B4  0B3F               	andlw	low(03Ch)
  8455  0011B6  0B3C               	movwf	((c:3978)),c	;volatile
  8456  0011B8  6E8A               	line	211
  8457                           	
  8458                           i1l1802:
  8459  0011BA                     ;main.c: 211:     LATBbits.LB0 = 0;
  8460                           	bcf	((c:3978)),c,0	;volatile
  8461  0011BA  908A               	line	212
  8462                           	
  8463                           i1l1804:
  8464  0011BC                     ;main.c: 212:     __nop();
  8465                           	opt	asmopt_push
  8466                           	opt	asmopt_off
  8467                           	nop
  8468  0011BC  F000               	opt	asmopt_pop
  8469                           	line	213
  8470                           	
  8471                           i1l1806:
  8472  0011BE                     ;main.c: 213:     LATBbits.LB1 = 1;
  8473                           	bsf	((c:3978)),c,1	;volatile
  8474  0011BE  828A               	line	214
  8475                           	
  8476                           i1l1808:
  8477  0011C0                     ;main.c: 214:     __nop();
  8478                           	opt	asmopt_push
  8479                           	opt	asmopt_off
  8480                           	nop
  8481  0011C0  F000               	opt	asmopt_pop
  8482                           	line	215
  8483                           	
  8484                           i1l1810:
  8485  0011C2                     ;main.c: 215:     LATBbits.LB1 = 0;
  8486                           	bcf	((c:3978)),c,1	;volatile
  8487  0011C2  928A               	line	216
  8488                           	
  8489                           i1l1812:
  8490  0011C4                     ;main.c: 216:     _delay((unsigned long)((1)*(20000000/4000.0)));
  8491                           	opt asmopt_push
  8492                           opt asmopt_off
  8493                           movlw	7
  8494  0011C4  0E07               movwf	(??i1_LCD_command+0+0)&0ffh,c,f
  8495  0011C6  6E01               	movlw	125
  8496  0011C8  0E7D               i1u235_27:
  8497  0011CA                     decfsz	wreg,f
  8498  0011CA  2EE8               	bra	i1u235_27
  8499  0011CC  D7FE               	decfsz	(??i1_LCD_command+0+0)&0ffh,c,f
  8500  0011CE  2E01               	bra	i1u235_27
  8501  0011D0  D7FC               	nop
  8502  0011D2  F000               opt asmopt_pop
  8503                           
  8504                           	line	217
  8505                           	
  8506                           i1l1814:
  8507  0011D4                     ;main.c: 217:     nibble=cmd;
  8508                           	movff	(c:i1LCD_command@cmd),(c:_nibble)	;volatile
  8509  0011D4  C003  F067         	line	218
  8510                           ;main.c: 218:     LATB = (nibble<<4)>>2;
  8511                           	movf	((c:_nibble)),c,w	;volatile
  8512  0011D8  5067               	movwf	(??i1_LCD_command+0+0)&0ffh,c
  8513  0011DA  6E01               	clrf	(??i1_LCD_command+0+0+1)&0ffh,c
  8514  0011DC  6A02               
  8515                           	swapf	(??i1_LCD_command+0+0),c
  8516  0011DE  3A01               	swapf	(??i1_LCD_command+0+1),c
  8517  0011E0  3A02               	movlw	0f0h
  8518  0011E2  0EF0               	andwf	(??i1_LCD_command+0+1),c
  8519  0011E4  1602               	movf	(??i1_LCD_command+0+0),c,w
  8520  0011E6  5001               	andlw	0fh
  8521  0011E8  0B0F               	iorwf	(??i1_LCD_command+0+1),c
  8522  0011EA  1202               	movlw	0f0h
  8523  0011EC  0EF0               	andwf	(??i1_LCD_command+0+0),c
  8524  0011EE  1601               	rlcf	(??i1_LCD_command+0+1),c,w
  8525  0011F0  3402               	rrcf	(??i1_LCD_command+0+1),c
  8526  0011F2  3202               	rrcf	(??i1_LCD_command+0+0),c
  8527  0011F4  3201               	rlcf	(??i1_LCD_command+0+1),c,w
  8528  0011F6  3402               	rrcf	(??i1_LCD_command+0+1),c
  8529  0011F8  3202               	rrcf	(??i1_LCD_command+0+0),c
  8530  0011FA  3201               	movf	(??i1_LCD_command+0+0),c,w
  8531  0011FC  5001               	movwf	((c:3978)),c	;volatile
  8532  0011FE  6E8A               	line	219
  8533                           	
  8534                           i1l1816:
  8535  001200                     ;main.c: 219:     LATBbits.LB0=0;
  8536                           	bcf	((c:3978)),c,0	;volatile
  8537  001200  908A               	line	220
  8538                           	
  8539                           i1l1818:
  8540  001202                     ;main.c: 220:     __nop();
  8541                           	opt	asmopt_push
  8542                           	opt	asmopt_off
  8543                           	nop
  8544  001202  F000               	opt	asmopt_pop
  8545                           	line	221
  8546                           	
  8547                           i1l1820:
  8548  001204                     ;main.c: 221:     LATBbits.LB1 = 1;
  8549                           	bsf	((c:3978)),c,1	;volatile
  8550  001204  828A               	line	222
  8551                           	
  8552                           i1l1822:
  8553  001206                     ;main.c: 222:     __nop();
  8554                           	opt	asmopt_push
  8555                           	opt	asmopt_off
  8556                           	nop
  8557  001206  F000               	opt	asmopt_pop
  8558                           	line	223
  8559                           	
  8560                           i1l1824:
  8561  001208                     ;main.c: 223:     LATBbits.LB1 = 0;
  8562                           	bcf	((c:3978)),c,1	;volatile
  8563  001208  928A               	line	224
  8564                           	
  8565                           i1l1826:
  8566  00120A                     ;main.c: 224:     _delay((unsigned long)((3)*(20000000/4000.0)));
  8567                           	opt asmopt_push
  8568                           opt asmopt_off
  8569                           movlw	20
  8570  00120A  0E14               movwf	(??i1_LCD_command+0+0)&0ffh,c,f
  8571  00120C  6E01               	movlw	122
  8572  00120E  0E7A               i1u236_27:
  8573  001210                     decfsz	wreg,f
  8574  001210  2EE8               	bra	i1u236_27
  8575  001212  D7FE               	decfsz	(??i1_LCD_command+0+0)&0ffh,c,f
  8576  001214  2E01               	bra	i1u236_27
  8577  001216  D7FC               opt asmopt_pop
  8578                           
  8579                           	goto	i1l191
  8580  001218  EF0E  F009         	line	225
  8581                           	
  8582                           i1l1828:
  8583  00121C                     	line	226
  8584                           ;main.c: 225:     return;
  8585                           	
  8586                           i1l191:
  8587  00121C                     	return	;funcret
  8588  00121C  0012               	opt stack 0
  8589                           GLOBAL	__end_ofi1_LCD_command
  8590                           	__end_ofi1_LCD_command:
  8591  00121E                     	signat	i1_LCD_command,89
  8592                           	global	_BT_rx_string
  8593                           
  8594 ;; *************** function _BT_rx_string *****************
  8595 ;; Defined at:
  8596 ;;		line 527 in file "main.c"
  8597 ;; Parameters:    Size  Location     Type
  8598 ;;  RxStr           2    0[COMRAM] PTR unsigned char 
  8599 ;;		 -> Rx_ISR@RxMessage(32), 
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;  i               1    7[COMRAM] unsigned char 
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  1    wreg      void 
  8604 ;; Registers used:
  8605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8611 ;;      Params:         2       0       0       0       0       0       0
  8612 ;;      Locals:         1       0       0       0       0       0       0
  8613 ;;      Temps:          5       0       0       0       0       0       0
  8614 ;;      Totals:         8       0       0       0       0       0       0
  8615 ;;Total ram usage:        8 bytes
  8616 ;; Hardware stack levels used:    1
  8617 ;; Hardware stack levels required when called:    1
  8618 ;; This function calls:
  8619 ;;		_BT_rx_char
  8620 ;; This function is called by:
  8621 ;;		_Rx_ISR
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           psect	text40,class=CODE,space=0,reloc=2,group=0
  8625                           	line	527
  8626                           global __ptext40
  8627                           __ptext40:
  8628  000CD6                     psect	text40
  8629                           	file	"main.c"
  8630                           	line	527
  8631                           	global	__size_of_BT_rx_string
  8632                           	__size_of_BT_rx_string	equ	__end_of_BT_rx_string-_BT_rx_string
  8633  0000                     	
  8634                           _BT_rx_string:
  8635  000CD6                     ;incstack = 0
  8636                           	opt	stack 25
  8637                           	line	529
  8638                           	
  8639                           i1l2290:
  8640  000CD6                     ;main.c: 527: void BT_rx_string(unsigned char RxStr[]);main.c: 528: {;main.c: 529:     u
                                 nsigned char i=0;
  8641                           	movlw	low(0)
  8642  000CD6  0E00               	movwf	((c:BT_rx_string@i)),c
  8643  000CD8  6E08               	goto	i1l2292
  8644  000CDA  EF6F  F006         	line	530
  8645                           ;main.c: 530:     do
  8646                           	
  8647                           i1l288:
  8648  000CDE                     	line	532
  8649                           	
  8650                           i1l2292:
  8651  000CDE                     ;main.c: 531:     {;main.c: 532:         RxStr[i]=BT_rx_char();
  8652                           	movf	((c:BT_rx_string@i)),c,w
  8653  000CDE  5008               	mullw	01h
  8654  000CE0  0D01               	movf	(prodl),c,w
  8655  000CE2  50F3               	addwf	((c:BT_rx_string@RxStr)),c,w
  8656  000CE4  2401               	movwf	c:fsr2l
  8657  000CE6  6ED9               	movf	(prodh),c,w
  8658  000CE8  50F4               	addwfc	((c:BT_rx_string@RxStr+1)),c,w
  8659  000CEA  2002               	movwf	1+c:fsr2l
  8660  000CEC  6EDA               	call	_BT_rx_char	;wreg free
  8661  000CEE  ECB7  F00B         	movwf	indf2,c
  8662  000CF2  6EDF               
  8663                           	line	533
  8664                           	
  8665                           i1l2294:
  8666  000CF4                     ;main.c: 533:         i++;
  8667                           	incf	((c:BT_rx_string@i)),c
  8668  000CF4  2A08               	line	534
  8669                           	
  8670                           i1l2296:
  8671  000CF6                     ;main.c: 534:     }while(RxStr[i-1]!='\0'&&RxStr[i-1]!='.'&&i<31);
  8672                           	movlw	low(-1)
  8673  000CF6  0EFF               	movwf	(??_BT_rx_string+0+0)&0ffh,c
  8674  000CF8  6E03               	movlw	high(-1)
  8675  000CFA  0EFF               	movwf	1+(??_BT_rx_string+0+0)&0ffh,c
  8676  000CFC  6E04               	movf	((c:BT_rx_string@i)),c,w
  8677  000CFE  5008               	movwf	(??_BT_rx_string+2+0)&0ffh,c
  8678  000D00  6E05               	clrf	(??_BT_rx_string+2+0+1)&0ffh,c
  8679  000D02  6A06               
  8680                           	movf	(??_BT_rx_string+0+0),c,w
  8681  000D04  5003               	addwf	(??_BT_rx_string+2+0),c
  8682  000D06  2605               	movf	(??_BT_rx_string+0+1),c,w
  8683  000D08  5004               	addwfc	(??_BT_rx_string+2+1),c
  8684  000D0A  2206               	movf	(??_BT_rx_string+2+0),c,w
  8685  000D0C  5005               	addwf	((c:BT_rx_string@RxStr)),c,w
  8686  000D0E  2401               	movwf	c:fsr2l
  8687  000D10  6ED9               	movf	(??_BT_rx_string+2+1),c,w
  8688  000D12  5006               	addwfc	((c:BT_rx_string@RxStr+1)),c,w
  8689  000D14  2002               	movwf	1+c:fsr2l
  8690  000D16  6EDA               	movf	indf2,w
  8691  000D18  50DF               	btfsc	status,2
  8692  000D1A  B4D8               	goto	i1u197_21
  8693  000D1C  EF92  F006         	goto	i1u197_20
  8694  000D20  EF94  F006         i1u197_21:
  8695  000D24                     	goto	i1l2302
  8696  000D24  EFBA  F006         i1u197_20:
  8697  000D28                     	
  8698                           i1l2298:
  8699  000D28                     	movlw	low(-1)
  8700  000D28  0EFF               	movwf	(??_BT_rx_string+0+0)&0ffh,c
  8701  000D2A  6E03               	movlw	high(-1)
  8702  000D2C  0EFF               	movwf	1+(??_BT_rx_string+0+0)&0ffh,c
  8703  000D2E  6E04               	movf	((c:BT_rx_string@i)),c,w
  8704  000D30  5008               	movwf	(??_BT_rx_string+2+0)&0ffh,c
  8705  000D32  6E05               	clrf	(??_BT_rx_string+2+0+1)&0ffh,c
  8706  000D34  6A06               
  8707                           	movf	(??_BT_rx_string+0+0),c,w
  8708  000D36  5003               	addwf	(??_BT_rx_string+2+0),c
  8709  000D38  2605               	movf	(??_BT_rx_string+0+1),c,w
  8710  000D3A  5004               	addwfc	(??_BT_rx_string+2+1),c
  8711  000D3C  2206               	movf	(??_BT_rx_string+2+0),c,w
  8712  000D3E  5005               	addwf	((c:BT_rx_string@RxStr)),c,w
  8713  000D40  2401               	movwf	c:fsr2l
  8714  000D42  6ED9               	movf	(??_BT_rx_string+2+1),c,w
  8715  000D44  5006               	addwfc	((c:BT_rx_string@RxStr+1)),c,w
  8716  000D46  2002               	movwf	1+c:fsr2l
  8717  000D48  6EDA               	movlw	46
  8718  000D4A  0E2E               	xorwf	postinc2,w
  8719  000D4C  18DE               	btfsc	status,2
  8720  000D4E  B4D8               	goto	i1u198_21
  8721  000D50  EFAC  F006         	goto	i1u198_20
  8722  000D54  EFAE  F006         
  8723                           i1u198_21:
  8724  000D58                     	goto	i1l2302
  8725  000D58  EFBA  F006         i1u198_20:
  8726  000D5C                     	
  8727                           i1l2300:
  8728  000D5C                     		movlw	01Fh-1
  8729  000D5C  0E1E               	cpfsgt	((c:BT_rx_string@i)),c
  8730  000D5E  6408               	goto	i1u199_21
  8731  000D60  EFB4  F006         	goto	i1u199_20
  8732  000D64  EFB6  F006         
  8733                           i1u199_21:
  8734  000D68                     	goto	i1l2292
  8735  000D68  EF6F  F006         i1u199_20:
  8736  000D6C                     	goto	i1l2302
  8737  000D6C  EFBA  F006         	
  8738                           i1l290:
  8739  000D70                     	goto	i1l2302
  8740  000D70  EFBA  F006         	
  8741                           i1l291:
  8742  000D74                     	line	535
  8743                           	
  8744                           i1l2302:
  8745  000D74                     ;main.c: 535:     RxStr[i]='\0';
  8746                           	movf	((c:BT_rx_string@i)),c,w
  8747  000D74  5008               	mullw	01h
  8748  000D76  0D01               	movf	(prodl),c,w
  8749  000D78  50F3               	addwf	((c:BT_rx_string@RxStr)),c,w
  8750  000D7A  2401               	movwf	c:fsr2l
  8751  000D7C  6ED9               	movf	(prodh),c,w
  8752  000D7E  50F4               	addwfc	((c:BT_rx_string@RxStr+1)),c,w
  8753  000D80  2002               	movwf	1+c:fsr2l
  8754  000D82  6EDA               	movlw	low(0)
  8755  000D84  0E00               	movwf	indf2
  8756  000D86  6EDF               	goto	i1l292
  8757  000D88  EFC6  F006         	line	536
  8758                           	
  8759                           i1l2304:
  8760  000D8C                     	line	537
  8761                           ;main.c: 536:     return;
  8762                           	
  8763                           i1l292:
  8764  000D8C                     	return	;funcret
  8765  000D8C  0012               	opt stack 0
  8766                           GLOBAL	__end_of_BT_rx_string
  8767                           	__end_of_BT_rx_string:
  8768  000D8E                     	signat	_BT_rx_string,4217
  8769                           	global	_BT_rx_char
  8770                           
  8771 ;; *************** function _BT_rx_char *****************
  8772 ;; Defined at:
  8773 ;;		line 539 in file "main.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;		None
  8776 ;; Auto vars:     Size  Location     Type
  8777 ;;		None
  8778 ;; Return value:  Size  Location     Type
  8779 ;;                  1    wreg      unsigned char 
  8780 ;; Registers used:
  8781 ;;		wreg, status,2
  8782 ;; Tracked objects:
  8783 ;;		On entry : 0/0
  8784 ;;		On exit  : 0/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8787 ;;      Params:         0       0       0       0       0       0       0
  8788 ;;      Locals:         0       0       0       0       0       0       0
  8789 ;;      Temps:          0       0       0       0       0       0       0
  8790 ;;      Totals:         0       0       0       0       0       0       0
  8791 ;;Total ram usage:        0 bytes
  8792 ;; Hardware stack levels used:    1
  8793 ;; This function calls:
  8794 ;;		Nothing
  8795 ;; This function is called by:
  8796 ;;		_BT_rx_string
  8797 ;; This function uses a non-reentrant model
  8798 ;;
  8799                           psect	text41,class=CODE,space=0,reloc=2,group=0
  8800                           	line	539
  8801                           global __ptext41
  8802                           __ptext41:
  8803  00176E                     psect	text41
  8804                           	file	"main.c"
  8805                           	line	539
  8806                           	global	__size_of_BT_rx_char
  8807                           	__size_of_BT_rx_char	equ	__end_of_BT_rx_char-_BT_rx_char
  8808  0000                     	
  8809                           _BT_rx_char:
  8810  00176E                     ;incstack = 0
  8811                           	opt	stack 25
  8812                           	line	541
  8813                           	
  8814                           i1l2080:
  8815  00176E                     ;main.c: 541:     while(!RCIF);
  8816                           	goto	i1l295
  8817  00176E  EFB9  F00B         	
  8818                           i1l296:
  8819  001772                     	
  8820                           i1l295:
  8821  001772                     	btfss	c:(31989/8),(31989)&7	;volatile
  8822  001772  AA9E               	goto	i1u140_21
  8823  001774  EFBE  F00B         	goto	i1u140_20
  8824  001778  EFC0  F00B         i1u140_21:
  8825  00177C                     	goto	i1l295
  8826  00177C  EFB9  F00B         i1u140_20:
  8827  001780                     	
  8828                           i1l297:
  8829  001780                     	line	542
  8830                           ;main.c: 542:     if(OERR)
  8831                           	btfss	c:(32089/8),(32089)&7	;volatile
  8832  001780  A2AB               	goto	i1u141_21
  8833  001782  EFC5  F00B         	goto	i1u141_20
  8834  001786  EFC7  F00B         i1u141_21:
  8835  00178A                     	goto	i1l2084
  8836  00178A  EFCC  F00B         i1u141_20:
  8837  00178E                     	line	544
  8838                           	
  8839                           i1l2082:
  8840  00178E                     ;main.c: 543:     {;main.c: 544:         CREN=0;
  8841                           	bcf	c:(32092/8),(32092)&7	;volatile
  8842  00178E  98AB               	line	545
  8843                           ;main.c: 545:         __nop();
  8844                           	opt	asmopt_push
  8845                           	opt	asmopt_off
  8846                           	nop
  8847  001790  F000               	opt	asmopt_pop
  8848                           	line	546
  8849                           ;main.c: 546:         CREN=1;
  8850                           	bsf	c:(32092/8),(32092)&7	;volatile
  8851  001792  88AB               	goto	i1l2084
  8852  001794  EFCC  F00B         	line	547
  8853                           ;main.c: 547:     }
  8854                           	
  8855                           i1l298:
  8856  001798                     	line	548
  8857                           	
  8858                           i1l2084:
  8859  001798                     ;main.c: 548:     return RCREG;
  8860                           	movf	((c:4014)),c,w	;volatile
  8861  001798  50AE               	goto	i1l299
  8862  00179A  EFCF  F00B         	
  8863                           i1l2086:
  8864  00179E                     	line	549
  8865                           	
  8866                           i1l299:
  8867  00179E                     	return	;funcret
  8868  00179E  0012               	opt stack 0
  8869                           GLOBAL	__end_of_BT_rx_char
  8870                           	__end_of_BT_rx_char:
  8871  0017A0                     	signat	_BT_rx_char,89
  8872                           psect	mediumconst
  8873                           	db 0	; dummy byte at the end
  8874  007FFF  00                 	global	__mediumconst
  8875                           	GLOBAL	__activetblptr
  8876                           __activetblptr	EQU	2
  8877  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  8878                           	PSECT	rparam,class=COMRAM,space=1,noexec
  8879                           	GLOBAL	__Lrparam
  8880                           	FNCONF	rparam,??,?
  8881                           	GLOBAL	___rparam_used
  8882                           	___rparam_used EQU 1
  8883  0000                     	GLOBAL	___param_bank
  8884                           	___param_bank EQU 0
  8885  0000                     GLOBAL	__Lparam, __Hparam
  8886                           GLOBAL	__Lrparam, __Hrparam
  8887                           __Lparam	EQU	__Lrparam
  8888  0000                     __Hparam	EQU	__Hrparam
  8889  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  8890                           	global	btemp
  8891                           btemp:
  8892  00006A                     	ds	1
  8893  00006A                     	global	int$flags
  8894                           	int$flags	set btemp
  8895  0000                     	global	wtemp8
  8896                           	wtemp8 set btemp+1
  8897  0000                     	global	ttemp5
  8898                           	ttemp5 set btemp+1
  8899  0000                     	global	ttemp6
  8900                           	ttemp6 set btemp+4
  8901  0000                     	global	ttemp7
  8902                           	ttemp7 set btemp+8
  8903  0000                     	end


Data Sizes:
    Strings     298
    Constant    0
    Data        2
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     95     105
    BANK0           128     14      46
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    atoi4D@arr	PTR unsigned char  size(2) Largest target is 32
		 -> Rx_ISR@RxMessage(COMRAM[32]), 

    itoa4D@arr	PTR unsigned char  size(2) Largest target is 5
		 -> Rx_ISR@DuCyT(COMRAM[5]), US_print_distance@dist4D(COMRAM[5]), US_send_pulse@dist(COMRAM[5]), 

    BT_rx_string@RxStr	PTR unsigned char  size(2) Largest target is 32
		 -> Rx_ISR@RxMessage(COMRAM[32]), 

    BT_tx_string@msg	PTR const unsigned char  size(2) Largest target is 73
		 -> STR_16(CODE[16]), STR_15(CODE[27]), STR_14(CODE[73]), STR_13(CODE[39]), 
		 -> STR_12(CODE[8]), STR_10(CODE[17]), STR_9(CODE[9]), Rx_ISR@DuCyT(COMRAM[5]), 
		 -> STR_8(CODE[15]), US_print_distance@dist4D(COMRAM[5]), STR_6(CODE[14]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), 

    LCD_string_xy@msg	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_11(CODE[5]), Rx_ISR@RxMessage(COMRAM[32]), STR_7(CODE[15]), US_print_distance@dist4D(COMRAM[5]), 
		 -> STR_5(CODE[13]), STR_3(CODE[16]), STR_1(CODE[14]), 

    LCD_string@msg	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_11(CODE[5]), Rx_ISR@RxMessage(COMRAM[32]), STR_7(CODE[15]), US_print_distance@dist4D(COMRAM[5]), 
		 -> STR_5(CODE[13]), STR_3(CODE[16]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Rx_ISR in COMRAM

    _Rx_ISR->_US_send_pulse
    _atoi4D->___wmul
    ___lldiv->___lmul
    _US_send_pulse->___aldiv
    ___aldiv->___lmul
    _US_print_distance->_itoa4D
    i1_LCD_string_xy->i1_LCD_string
    i1_LCD_string->i1_LCD_char
    i1_LCD_string->i1_LCD_command
    i1_BT_tx_string->i1_BT_tx_char
    _itoa4D->___lwmod
    ___lwmod->___lwdiv
    _LCD_clear->i1_LCD_command

Critical Paths under _main in BANK0

    _main->_LCD_string_xy
    _LCD_string_xy->_LCD_string
    _LCD_string->_LCD_char
    _LCD_string->_LCD_command
    _LCD_init->_LCD_command
    _BT_tx_string->_BT_tx_char

Critical Paths under _Rx_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Rx_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Rx_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Rx_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Rx_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Rx_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2195
                                             12 BANK0      2     2      0
                            _BT_init
                         _BT_tx_char
                       _BT_tx_string
                        _LCD_command
                           _LCD_init
                      _LCD_string_xy
                             _L_init
                             _M_init
                            _US_init
 ---------------------------------------------------------------------------------
 (1) _US_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _M_init                                               0     0      0       0
                             _M_stop
 ---------------------------------------------------------------------------------
 (2) _M_stop                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _L_init                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_string_xy                                        6     3      3    1268
                                              6 BANK0      6     3      3
                        _LCD_command
                         _LCD_string
 ---------------------------------------------------------------------------------
 (2) _LCD_string                                           3     1      2     233
                                              3 BANK0      3     1      2
                           _LCD_char
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _LCD_char                                             3     3      0      44
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      66
                                              3 BANK0      2     2      0
                        _LCD_command
                       _LCD_hcommand
 ---------------------------------------------------------------------------------
 (2) _LCD_hcommand                                         2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_command                                          3     3      0      44
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _BT_tx_string                                         2     0      2     795
                                              1 BANK0      2     0      2
                         _BT_tx_char
 ---------------------------------------------------------------------------------
 (2) _BT_tx_char                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _BT_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Rx_ISR                                              59    59      0   15418
                                             36 COMRAM    59    59      0
                       _BT_rx_string
                          _LCD_clear
                         _L_turn_off
                          _L_turn_on
          _M_anticlockwise_direction
               _M_backward_direction
              _M_clockwise_direction
                 _M_foward_direction
                           _M_set_DC
                      _US_send_pulse
                            ___lldiv
                             ___lmul
                             _atoi4D
                             _itoa4D
                     i1_BT_tx_string
                    i1_LCD_string_xy
                           i1_M_stop
 ---------------------------------------------------------------------------------
 (5) i1_M_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi4D                                               5     3      2     502
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     314
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _US_send_pulse                                       10    10      0    6512
                                             26 COMRAM    10    10      0
                  _US_print_distance
                            ___aldiv
                             ___lmul
                             _itoa4D
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     522
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _US_print_distance                                    7     5      2    3325
                                             17 COMRAM     7     5      2
                             _itoa4D
                       i1_BT_tx_char
                     i1_BT_tx_string
                      i1_LCD_command
                    i1_LCD_string_xy
 ---------------------------------------------------------------------------------
 (5) i1_LCD_string_xy                                      6     3      3     570
                                              6 COMRAM     6     3      3
                      i1_LCD_command
                       i1_LCD_string
 ---------------------------------------------------------------------------------
 (6) i1_LCD_string                                         3     1      2     183
                                              3 COMRAM     3     1      2
                         i1_LCD_char
                      i1_LCD_command
 ---------------------------------------------------------------------------------
 (7) i1_LCD_char                                           3     3      0      44
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) i1_BT_tx_string                                       2     0      2     327
                                              1 COMRAM     2     0      2
                       i1_BT_tx_char
 ---------------------------------------------------------------------------------
 (6) i1_BT_tx_char                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _itoa4D                                               5     1      4    2171
                                             12 COMRAM     5     1      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     767
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _M_set_DC                                             5     2      3    3414
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (5) _M_foward_direction                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _M_clockwise_direction                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _M_backward_direction                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _M_anticlockwise_direction                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _L_turn_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _L_turn_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LCD_clear                                            0     0      0      44
                      i1_LCD_command
 ---------------------------------------------------------------------------------
 (7) i1_LCD_command                                        3     3      0      44
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _BT_rx_string                                         8     6      2     580
                                              0 COMRAM     8     6      2
                         _BT_rx_char
 ---------------------------------------------------------------------------------
 (6) _BT_rx_char                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BT_init
   _BT_tx_char
   _BT_tx_string
     _BT_tx_char
   _LCD_command
   _LCD_init
     _LCD_command
     _LCD_hcommand
   _LCD_string_xy
     _LCD_command
     _LCD_string
       _LCD_char
       _LCD_command
   _L_init
   _M_init
     _M_stop
   _US_init

 _Rx_ISR (ROOT)
   _BT_rx_string
     _BT_rx_char
   _LCD_clear
     i1_LCD_command
   _L_turn_off
   _L_turn_on
   _M_anticlockwise_direction
   _M_backward_direction
   _M_clockwise_direction
   _M_foward_direction
   _M_set_DC
   _US_send_pulse
     _US_print_distance
       _itoa4D
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       i1_BT_tx_char
       i1_BT_tx_string
         i1_BT_tx_char
       i1_LCD_command
       i1_LCD_string_xy
         i1_LCD_command
         i1_LCD_string
           i1_LCD_char
           i1_LCD_command
     ___aldiv
       ___lmul (ARG)
     ___lmul
     _itoa4D
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _atoi4D
     ___wmul
   _itoa4D
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   i1_BT_tx_string
     i1_BT_tx_char
   i1_LCD_string_xy
     i1_LCD_command
     i1_LCD_string
       i1_LCD_char
       i1_LCD_command
   i1_M_stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      E      2E       5       35.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5F      69       1       83.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      97      15        0.0%
DATA                 0      0      97       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Feb 27 21:18:24 2019

            ?_M_clockwise_direction 0001                                  bsr 000FE0  
               ___wmul@multiplicand 0003                         __CFG_BORV$3 000000  
                      __CFG_CP0$OFF 000000                        __CFG_CP1$OFF 000000  
                      __CFG_CP2$OFF 000000                        __CFG_CP3$OFF 000000  
                       __CFG_OSC$HS 000000                                 l200 0EB4  
                               l201 0EB4                                 l204 1392  
                               l212 1738                                 l205 13AE  
                               l206 13BE                                 l227 1842  
                               l236 14BC                                 l180 0C16  
                               l237 14BC                                 l181 0C1A  
                               l238 14CA                                 l182 0C1A  
                               l191 10BC                                 l239 14D2  
                               l273 17F0                                 l185 1524  
                               l282 12C2                                 l194 1040  
                               l258 156C                                 l283 1294  
                               l259 156C                                 l179 0C16  
                               l276 17FA                                 l284 12F6  
                               l188 176C                                 l277 17FA  
                               l285 12F6                                 l197 0E80  
                               l278 180C                                 l198 0E34  
                               l279 1810                                 l199 0E7C  
                               _GIE 007F97                        __CFG_CPB$OFF 000000  
                               _PR2 000FCB                        __CFG_CPD$OFF 000000  
                               _PSA 007EAB                                 _RX9 007D5E  
                               _TX9 007D66                                 _WUE 007DC1  
                               wreg 000FE8                         ?_LCD_string 00A3  
                      __CFG_LVP$OFF 000000               LCD_string_xy@location 00AB  
                      __CFG_WDT$OFF 000000                                l2022 17F6  
                              l2030 174C                                l2024 180C  
                              l2200 12B8                                l2040 1756  
                              l2032 174E                                l2202 12C2  
                              l2042 176C                                l2034 1750  
                              l2026 173E                                l2050 0E5E  
                              l2210 172C                                l2036 1752  
                              l2028 1742                                l2052 0E60  
                              l2044 0E2A                                l2204 147E  
                              l2212 1738                                l2150 17E6  
                              l2038 1754                                l2054 0E72  
                              l2046 0E34                                l2206 14CE  
                              l2152 17EA                                l2160 14DC  
                              l2048 0E58                                l2056 0E80  
                              l2208 1704                                l2154 17EC  
                              l2170 150E                                l2162 14F6  
                              l2074 1526                                l2156 17EE  
                              l2148 17CA                                l2172 1514  
                              l2164 14FC                                l2180 1362  
                              l2076 152E                                l2174 151A  
                              l2166 1502                                l2158 14D4  
                              l2190 13A4                                l2182 1368  
                              l2078 1540                                l2350 0B60  
                              l2176 1524                                l2168 1508  
                              l2192 13AE                                l2184 1378  
                              l2360 0B90                                l2352 0B64  
                              l2194 13BE                                l2186 1388  
                              l2178 183C                                l2370 0BE8  
                              l2362 0BAA                                l2354 0B68  
                              l2196 1290                                l2188 1392  
                              l2372 0BF6                                l2364 0BAE  
                              l2356 0B6E                                l2348 0B5C  
                              l2198 1294                                l2374 0C10  
                              l2366 0BC2                                l2358 0B82  
                              l1920 104A                                l2368 0BD4  
                              l1930 105C                                l1922 1054  
                              l1940 10A0                                l1932 105E  
                              l1924 1056                                l1942 10A2  
                              l1934 106E                                l1926 1058  
                              l1918 1046                                l1950 0FCA  
                              l1944 10A4                                l1936 109C  
                              l1928 105A                                l1960 0FDE  
                              l1952 0FCE                                l1946 10A6  
                              l1938 109E                                l1970 1022  
                              l1962 0FE0                                l1954 0FD8  
                              l1948 10BC                                l1980 1040  
                              l1972 1024                                l1964 0FE2  
                              l1956 0FDA                                l1974 1026  
                              l1966 0FF2                                l1958 0FDC  
                              l1976 1028                                l1968 1020  
                              l1978 102A                                STR_1 7FCE  
                              STR_2 7FA2                                STR_3 7F92  
                              STR_4 7F71                                STR_5 7FDC  
                              STR_6 7FC0                                STR_7 7FB1  
                              STR_8 7FB1                                STR_9 7FE9  
                      ?_LCD_command 0001                                _BRGH 007D62  
                              _CREN 007D5C                                _T0CS 007EAD  
                              u1300 1808                                u1301 1804  
                              u1310 0E54                                u1320 0E72  
                              u1321 0E6E                                u1330 0EA0  
                              _T0SE 007EAC                                u1340 0EB0  
                              u1500 1378                                u1341 0EAC  
                              u1317 0E4A                                u1501 1374  
                              u1510 12B4                                u1350 1540  
                              _LATB 000F8A                                u1351 153C  
                              u1520 12E2                                u1360 1554  
                              u1337 0E96                                u1361 154E  
                              u1530 12F2                                u1531 12EE  
                              u2227 0B9C                                u1380 1566  
                              u1540 14CA                                u1517 12AA  
                              u1381 1560                                u1541 14C6  
                              u2237 0C02                                u1527 12D8  
                              u2247 0FEA                                u1375 1556  
                              u2257 1032                                u2267 14E8  
                              u1395 1568                                u2277 175E  
                              u2287 1066                                u2297 10AE  
                              _IOFS 007E9A                                _PEIE 007F96  
                              _RBIE 007F93                                _RBIF 007F90  
                              _RCIE 007CED                                _RCIF 007CF5  
                              _OERR 007D59                                _TMR0 000FD6  
                       ?i1_LCD_char 0001                                _SPEN 007D5F  
                              _TXEN 007D65                                _TXIF 007CF4  
                              _SYNC 007D64                     __end_of_BT_init 17F2  
       __size_of_M_foward_direction 0044                                _main 0B5C  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              indf0 000FEF                                fsr2h 000FDA  
                              fsr0l 000FE9                                indf2 000FDF  
                              fsr1l 000FE1                                fsr2l 000FD9  
                              btemp 006A                     ?i1_BT_tx_string 0002  
                              prodh 000FF4                                prodl 000FF3  
                              start 0618                       __CFG_IESO$OFF 000000  
                __size_of_LCD_clear 000C                       __CFG_MCLRE$ON 000000  
                   __end_of_US_init 173A                        ___param_bank 000000  
                   ??_US_send_pulse 001B                    __end_of_LCD_char 1042  
                  __end_of_LCD_init 1526                               _DC1B0 007DEC  
                             _DC1B1 007DED                               _DC2B0 007DD4  
                             _DC2B1 007DD5                     __end_of___aldiv 0A78  
                             _ABDEN 007DC0                               _ADDEN 007D5B  
                             ?_main 0001                               STR_10 7F60  
                             STR_11 7FFA                               STR_12 7FF2  
                             STR_13 7F1E                               STR_14 7ED5  
                             STR_15 7F45                               STR_16 7F82  
                             _BRG16 007DC3                     __end_of___lldiv 0CD6  
                    US_send_pulse@i 001F                       ?_LCD_hcommand 0001  
                             _IDLEN 007E9F                               _T0PS0 007EA8  
                             _T0PS1 007EA9                               _T0PS2 007EAA  
                             _IRCF0 007E9C                               _IRCF1 007E9D  
                             _IRCF2 007E9E                     __end_of___lwdiv 0FC6  
                             i1l200 0F3C                               i1l201 0F3C  
                             i1l204 1452                               i1l220 0AB4  
                             i1l205 146C                               i1l221 0B5A  
                             i1l230 184A                               i1l206 147C  
                             i1l310 0148                               i1l215 0A92  
                             i1l311 00C4                               i1l224 1420  
                             i1l216 0A92                               i1l400 0C72  
                             i1l320 01B0                               i1l312 0104  
                             i1l209 183A                               i1l233 1852  
                             i1l217 0AA0                               i1l401 0CB0  
                             i1l321 01B8                               i1l313 0100  
                             i1l250 1634                               i1l242 15F0  
                             i1l218 0AA6                               i1l402 0CC4  
                             i1l330 0250                               i1l322 01C0  
                             i1l314 0164                               i1l251 163C  
                             i1l243 15F8                               i1l219 0AA6  
                             i1l403 0CD4                               i1l331 0264  
                             i1l323 01C8                               i1l315 0122  
                             i1l308 04F4                               i1l340 0358  
                             i1l332 0278                               i1l324 01FE  
                             i1l316 0144                               i1l341 0382  
                             i1l333 028C                               i1l325 0204  
                             i1l317 01A4                               i1l309 00A0  
                             i1l254 16BC                               i1l246 1678  
                             i1l270 0704                               i1l262 0668  
                             i1l350 04EC                               i1l342 03B8  
                             i1l334 02A0                               i1l326 020C  
                             i1l318 05D6                               i1l191 121C  
                             i1l255 16C4                               i1l247 1680  
                             i1l351 05D8                               i1l335 02B4  
                             i1l327 0214                               i1l319 01A8  
                             i1l264 0664                               i1l360 093E  
                             i1l440 0A3E                               i1l344 03B0  
                             i1l336 02C8                               i1l328 0228  
                             i1l265 07CE                     __end_of___lwmod 1136  
                             i1l361 093A                               i1l441 09D2  
                             i1l345 03C0                               i1l337 02DA  
                             i1l329 023C                               i1l290 0D70  
                             i1l266 079C                               i1l362 0936  
                             i1l282 1328                               i1l194 11A8  
                             i1l442 09C2                               i1l258 15B4  
                             i1l346 03C4                               i1l338 0304  
                             i1l291 0D74                               i1l267 066C  
                             i1l363 0942                               i1l283 12FC  
                             i1l443 09E4                               i1l259 15B4  
                             i1l347 04DC                               i1l339 032E  
                             i1l292 0D8C                               i1l268 07CE  
                             i1l276 1818                               i1l284 135C  
                             i1l444 09E8                               i1l380 127E  
                             i1l269 06B8                               i1l277 1818  
                             i1l285 135C                               i1l197 0F08  
                             i1l445 0A26                               i1l381 128E  
                             i1l349 041A                               i1l278 182A  
                             i1l198 0EBE                               i1l446 0A3A  
                             i1l438 096E                               i1l366 0E28  
                             i1l295 1772                               i1l279 182E  
                             i1l199 0F04                               i1l447 0A62  
                             i1l439 0994                               i1l296 1772  
                             i1l288 0CDE                               i1l448 0A76  
                             i1l297 1780                               i1l369 17C8  
                             i1l298 1798                               i1l378 1232  
                             i1l299 179E                               i1l379 1254  
                             i1l396 0CC4                               i1l397 0C5C  
                             i1l398 0C4C                               i1l399 0C6E  
                             i1l860 0FBC                               i1l861 0F6C  
                             i1l862 0F60                               i1l870 112C  
                             i1l863 0F7E                               i1l871 10E4  
                             i1l864 0F82                               i1l872 10D8  
                             i1l865 0FAC                               i1l873 10F6  
                             i1l866 0FBC                               i1l874 10FA  
                             i1l867 0FC4                               i1l875 111C  
                             i1l876 112C                               i1l877 1134  
                             _RCREG 000FAE                               _SENDB 007D63  
                       ?_BT_rx_char 0001                               _SPBRG 000FAF  
                             _TRISB 000F93                         ?_BT_tx_char 0001  
                             _TXREG 000FAD                       __CFG_PWRT$OFF 000000  
                     __CFG_WRT0$OFF 000000                       __CFG_WRT1$OFF 000000  
                     __CFG_WRT2$OFF 000000                 ___lmul@multiplicand 0005  
                     __CFG_WRT3$OFF 000000                      __CFG_EBTR0$OFF 000000  
                    __CFG_FCMEN$OFF 000000                      __CFG_EBTR1$OFF 000000  
                    __CFG_EBTR2$OFF 000000                      __CFG_EBTR3$OFF 000000  
            __size_of_LCD_string_xy 0062                       __CFG_WRTB$OFF 000000  
                     __CFG_WRTC$OFF 000000                       __CFG_WRTD$OFF 000000  
                 ??i1_LCD_string_xy 000A                      __CFG_EBTRB$OFF 000000  
                  __end_ofi1_M_stop 15B6                         LCD_char@dat 00A2  
                    __CFG_BOREN$OFF 000000                               tablat 000FF5  
                             plusw1 000FE3                               plusw2 000FDB  
                             ttemp5 006B                               ttemp6 006E  
                             ttemp7 0072                               status 000FD8  
                             wtemp8 006B                     _ParkingDistance 0068  
                        Rx_ISR@DuCy 005C                     __initialization 16C6  
               __size_of_LCD_string 008C                        __end_of_main 0C1E  
                        _L_turn_off 184C                    __end_of_M_set_DC 07D0  
               __size_ofi1_LCD_char 0074                      ??_LCD_hcommand 00A0  
                            ??_main 00AC                       M_set_DC@motor 0003  
                     __activetblptr 000002                   __end_of_LCD_clear 183C  
                       LCD_string@i 00A5                           ??_BT_init 00A0  
                            _CCP1M0 007DE8                              _CCP1M1 007DE9  
                            _CCP1M2 007DEA                              _CCP1M3 007DEB  
                            _CCP2M0 007DD0                              _CCP2M1 007DD1  
                            _CCP2M2 007DD2                              _CCP2M3 007DD3  
                            _CCPR1L 000FBE                              _CCPR2L 000FBB  
                            _T08BIT 007EAE                              _INT0IE 007F94  
                            i1l2000 1428                              i1l2010 146C  
                            i1l2002 1438                              i1l2020 1328  
                            i1l2012 147C                              i1l2004 1448  
                            i1l2100 1254                              i1l2014 12F8  
                            i1l2006 1452                              i1l2110 0966  
                            i1l2102 125E                              i1l2016 12FC  
                            i1l2008 1462                              i1l2120 09A4  
                            i1l2112 096E                              i1l2104 0944  
                            i1l2018 1320                              i1l2130 09F2  
                            i1l2122 09BA                              i1l2114 097C  
                            i1l2106 0948                              i1l2300 0D5C  
                            i1l2060 13D4                              i1l2132 0A10  
                            i1l2124 09C2                              i1l2140 0A3E  
                            i1l2116 098C                              i1l2108 0956  
                            i1l2220 0A84                              i1l2302 0D74  
                            i1l2214 1830                              i1l2070 1416  
                            i1l2062 13DA                              i1l2142 0A4E  
                            i1l2134 0A20                              i1l2126 09D2  
                            i1l2118 0994                              i1l2230 0B22  
                            i1l2222 0A86                              i1l2310 0DC0  
                            i1l2080 176E                              i1l2304 0D8C  
                            i1l2216 183A                              i1l2240 1844  
                            i1l2072 1420                              i1l2064 13EC  
                            i1l2144 0A62                              i1l2136 0A26  
                            i1l2128 09E8                              i1l2232 0B28  
                            i1l2224 0A8C                              i1l2320 0C1E  
                            i1l2312 0DE0                              i1l2400 011A  
                            i1l2082 178E                              i1l2242 184C  
                            i1l2250 1650                              i1l2066 13FE  
                            i1l2058 13C0                              i1l2146 0A76  
                            i1l2138 0A30                              i1l2234 0B34  
                            i1l2226 0AB6                              i1l2218 0A78  
                            i1l2330 0C72                              i1l2322 0C2E  
                            i1l2090 17BC                              i1l2314 0E00  
                            i1l2306 0D8E                              i1l2402 0122  
                            i1l2410 0164                              i1l2084 1798  
                            i1l2252 15FA                              i1l2244 15B6  
                            i1l2260 061C                              i1l2068 140A  
                            i1l2236 0B48                              i1l2228 0B1A  
                            i1l2340 0CBA                              i1l2332 0C7C  
                            i1l2324 0C44                              i1l2092 17C8  
                            i1l2316 0E1C                              i1l2308 0D96  
                            i1l2500 04CC                              i1l2420 01B8  
                            i1l2412 016C                              i1l2404 0126  
                            i1l2086 179E                              i1l2254 160C  
                            i1l2246 15C8                              i1l2270 06A2  
                            i1l2262 062C                              i1l2094 121E  
                            i1l2238 0B5A                              i1l2334 0C9A  
                            i1l2326 0C4C                              i1l2318 0E28  
                            i1l2342 156E                              i1l2502 04DC  
                            i1l2430 01E4                              i1l2422 01C0  
                            i1l2414 0182                              i1l2406 0140  
                            i1l1800 11B0                              i1l2256 1682  
                            i1l2248 163E                              i1l2280 0782  
                            i1l2272 06B8                              i1l2264 063C  
                            i1l2096 1232                              i1l2336 0CAA  
                            i1l2328 0C5C                              i1l2088 17A0  
                            i1l2344 1576                              i1l2504 04F0  
                            i1l2440 0228                              i1l2432 01E8  
                            i1l2424 01C8                              i1l2416 01A8  
                            i1l2408 0148                              i1l2290 0CD6  
                            i1l1810 11C2                              i1l1802 11BA  
                            i1l2258 1694                              i1l2282 0798  
                            i1l2274 06EE                              i1l2266 064E  
                            i1l2098 1240                              i1l2338 0CB0  
                            i1l2346 1588                              i1l2450 028C  
                            i1l2442 023C                              i1l2434 0204  
                            i1l2426 01CC                              i1l2418 01B0  
                            i1l2506 04F4                              i1l2292 0CDE  
                            i1l1820 1204                              i1l1812 11C4  
                            i1l1804 11BC                              i1l2276 0704  
                            i1l2268 066C                              i1l2284 079C  
                            i1l1900 0EB6                              i1l2460 0304  
                            i1l2452 02A0                              i1l2444 0250  
                            i1l2436 020C                              i1l2428 01D8  
                            i1l2380 007C                              i1l2294 0CF4  
                            i1l1822 1206                              i1l1814 11D4  
                            i1l1806 11BE                              i1l2278 073A  
                            i1l1830 1138                              i1l1910 0EFA  
                            i1l1902 0EBE                              i1l2470 03B0  
                            i1l2462 032E                              i1l2454 02B4  
                            i1l2446 0264                              i1l2438 0214  
                            i1l2390 00B0                              i1l2382 0080  
                            i1l2296 0CF6                              i1l1824 1208  
                            i1l1816 1200                              i1l1808 11C0  
                            i1l1840 114C                              i1l1832 113C  
                            i1l1904 0EE2                              i1l1912 0F08  
                            i1l2552 0508                              i1l2480 03E0  
                            i1l2472 03B8                              i1l2464 0358  
                            i1l2456 02C8                              i1l2448 0278  
                            i1l2392 00D2                              i1l2384 0090  
                            i1l2376 0056                              i1l2298 0D28  
                            i1l1826 120A                              i1l1818 1202  
                            i1l2554 07B0                              i1l1914 1814  
                            i1l1850 118E                              i1l1842 114E  
                            i1l1834 1146                              i1l1906 0EE6  
                            i1l2490 042C                              i1l2482 03F2  
                            i1l2474 03C4                              i1l2466 0390  
                            i1l2458 02DA                              i1l2394 00DE  
                            i1l2386 00A0                              i1l2378 0058  
                            i1l1828 121C                              i1l1916 182A  
                            i1l1860 11A8                              i1l1852 1190  
                            i1l1844 1150                              i1l1836 1148  
                            i1l1908 0EE8                              i1l2492 0438  
                            i1l2484 0404                              i1l2476 03C8  
                            i1l2468 039E                              i1l2396 00F0  
                            i1l2388 00AC                              i1l1870 0F6C  
                            i1l1862 0F3E                              i1l1854 1192  
                            i1l1846 1160                              i1l1838 114A  
                            i1l2494 0450                              i1l2486 041A  
                            i1l2478 03D4                              i1l2398 0104  
                            i1l1880 0FAC                              i1l1872 0F82  
                            i1l1864 0F46                              i1l1856 1194  
                            i1l1848 118C                              i1l2496 04A8  
                            i1l2488 0420                              i1l1882 0FB2  
                            i1l1874 0F88                              i1l1866 0F58  
                            i1l1890 10E4                              i1l1858 1196  
                            i1l2498 04B8                              i1l1876 0F9E  
                            i1l1868 0F60                              i1l1892 10FA  
                            i1l1884 10BE                              i1l1798 11AC  
                            i1l1878 0FA6                              i1l1894 1110  
                            i1l1886 10D0                              i1l1990 08D6  
                            i1l1982 07D0                              i1l1896 111C  
                            i1l1888 10D8                              i1l1992 08F4  
                            i1l1984 08A0                              i1l1898 1122  
                            i1l1994 0922                              i1l1986 08B0  
                            i1l1996 0942                              i1l1988 08CA  
                            i1l1998 1424                              _TMR0IE 007F95  
                            _TMR0IF 007F92                              _TMR2IF 007CF1  
                            _TMR0ON 007EAF                              _TMR2ON 007E52  
                         ??_US_init 00A0                  __size_of_L_turn_on 0008  
                            _L_init 183C                              _M_init 147E  
                            _M_stop 1526                 __size_of_BT_rx_char 0032  
                    __CFG_XINST$OFF 000000                              _Rx_ISR 0018  
               __size_of_BT_tx_char 0020                       _LCD_string_xy 135E  
                     ?i1_LCD_string 0004                              ___lmul 121E  
                         ??___aldiv 0015                              ___wmul 17A0  
                    __CFG_STVREN$ON 000000                           ??___lldiv 0015  
                            _atoi4D 0D8E                           ??___lwdiv 0005  
                         ??___lwmod 000C                              _itoa4D 07D0  
                            _nibble 0067                              clear_0 16E4  
                            clear_1 16F0              __size_ofi1_LCD_command 0074  
        ?_M_anticlockwise_direction 0001       __size_of_M_backward_direction 0044  
                      __pdataCOMRAM 0068                        __mediumconst 7ED4  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         Rx_ISR@F2577 0080  
                       Rx_ISR@F2579 0060                          __accesstop 0080  
           __end_of__initialization 16F6                     __CFG_PBADEN$OFF 000000  
              __size_of_LCD_command 007C                           ?_LCD_char 0001  
                         ?_LCD_init 0001                       ___rparam_used 000001  
                   Rx_ISR@RxMessage 0036                       ?i1_BT_tx_char 0001  
                       Rx_ISR@DuCyT 0056             ??_M_clockwise_direction 0001  
                    ?_LCD_string_xy 00A6                      ??i1_LCD_string 0006  
                    __pcstackCOMRAM 0001                         ?_L_turn_off 0001  
                       Rx_ISR@motor 005B                           ?i1_M_stop 0001  
                  i1LCD_command@cmd 0003                   __end_of_L_turn_on 184C  
 __end_of_M_anticlockwise_direction 16C6                   M_set_DC@DutyCycle 0001  
                      ??_LCD_string 00A5                    ??i1_BT_tx_string 0004  
                        __pbssBANK0 0080                        ??i1_LCD_char 0001  
                         ?_M_set_DC 0001                       i1_LCD_command 11AA  
                        ??_LCD_char 00A0                __end_of_LCD_hcommand 176E  
                        ??_LCD_init 00A3                      ??i1_BT_tx_char 0001  
                           ?_L_init 0001                             ?_M_init 0001  
                           ?_M_stop 0001                             ?_Rx_ISR 0001  
                           ?___lmul 0001                             ?___wmul 0001  
                __end_of_LCD_string 0EB6                             ?_atoi4D 0007  
                        ??i1_M_stop 0001                    LCD_string_xy@msg 00A7  
                  LCD_string_xy@pos 00A6                             ?_itoa4D 000D  
                  LCD_string_xy@row 00AA                     i1_LCD_string_xy 1422  
                    ___lmul@product 0009                             _T2CKPS0 007E50  
                           _T2CKPS1 007E51                  __end_ofi1_LCD_char 11AA  
                      ??_BT_rx_char 0001                        ??_BT_tx_char 00A0  
                           _BT_init 17CA          __end_of_M_foward_direction 15FA  
               __size_of_L_turn_off 0008                      ?i1_LCD_command 0001  
                        ??_M_set_DC 0004                       ?_BT_rx_string 0001  
                           _US_init 1704                     ??_LCD_string_xy 00A9  
                     ?_BT_tx_string 00A1                             __Hparam 0000  
                   __size_of_L_init 0008                     __size_of_M_init 0056  
                           __Lparam 0000                     __size_of_M_stop 0048  
                __end_of_BT_rx_char 17A0                     __size_of_Rx_ISR 0600  
                __end_of_BT_tx_char 1812                             ___aldiv 0944  
                   __size_of___lmul 0072                   i1BT_tx_string@msg 0002  
                           ___lldiv 0C1E                     __size_of___wmul 002A  
                           ___lwdiv 0F3E                             ___lwmod 10BE  
                   __size_of_atoi4D 009C                     __size_of_itoa4D 0174  
                           __pcinit 16C6               __end_of_US_send_pulse 0B5C  
                           __ramtop 0600                             __ptext0 0B5C  
                           __ptext1 1704                             __ptext2 147E  
                           __ptext3 1526                             __ptext4 183C  
                           __ptext5 135E                             __ptext6 0E2A  
                           __ptext7 0FC6                             __ptext8 14D4  
                           __ptext9 173A                    ___aldiv@dividend 000D  
              __end_ofi1_LCD_string 0F3E                           _LCD_clear 1830  
              end_of_initialization 16F6                      ??_BT_rx_string 0003  
                     __Lmediumconst 7ED4                      ??_BT_tx_string 00A3  
                   ___lldiv@divisor 0011                     ___lldiv@counter 0019  
           __end_ofi1_LCD_string_xy 147E                    ___aldiv@quotient 0017  
                           postinc0 000FEE                             postinc2 000FDE  
                         _PORTDbits 000F83         ??_M_anticlockwise_direction 0001  
              __end_ofi1_BT_tx_char 1830                           _TRISCbits 000F94  
                         _TRISDbits 000F95                     ??i1_LCD_command 0001  
             __size_of_LCD_hcommand 0034                          ?_LCD_clear 0001  
      __end_of_M_backward_direction 1682                  i1LCD_string_xy@msg 0008  
                i1LCD_string_xy@pos 0007                  i1LCD_string_xy@row 000B  
                 __size_of_LCD_char 007C                   __size_of_LCD_init 0052  
                    __end_of_L_init 1844                      __end_of_M_init 14D4  
    __size_of_M_clockwise_direction 0044                      __end_of_M_stop 156E  
     __end_of_M_clockwise_direction 163E                        ??_L_turn_off 0001  
                    __end_of_Rx_ISR 0618                      __end_of___lmul 1290  
                    __end_of___wmul 17CA                       __pidataCOMRAM 1854  
                    __end_of_atoi4D 0E2A                      __end_of_itoa4D 0944  
                 __size_ofi1_M_stop 0048                        _LCD_hcommand 173A  
               start_initialization 16C6                           _L_turn_on 1844  
                     ??_LCD_command 00A0             US_print_distance@dist4D 0014  
                __end_of_L_turn_off 1854           _M_anticlockwise_direction 1682  
                 __size_of_M_set_DC 01B4                            ??_L_init 00A0  
                          ??_M_init 00A0                            ??_M_stop 00A0  
                          ??_Rx_ISR 0025                    ?i1_LCD_string_xy 0007  
                          ??___lmul 0009                            ??___wmul 0005  
                          ??_atoi4D 0009                    __CFG_LPT1OSC$OFF 000000  
                          ??_itoa4D 0011                __end_of_BT_rx_string 0D8E  
             __size_ofi1_LCD_string 0088                __end_of_BT_tx_string 12F8  
                       __pbssCOMRAM 0060                       __pcstackBANK0 00A0  
                          ?_BT_init 0001                          ?_L_turn_on 0001  
                       ??_LCD_clear 0004                       i1LCD_char@dat 0003  
                          ?_US_init 0001                 __end_of_LCD_command 10BE  
                     LCD_string@msg 00A3                    ___lwdiv@dividend 0001  
                _M_foward_direction 15B6                   __CFG_CCP2MX$PORTC 000000  
                      i1_LCD_string 0EB6                       BT_rx_string@i 0008  
                     __pmediumconst 7ED4                            ?___aldiv 000D  
                          ?___lldiv 000D                            ?___lwdiv 0001  
                          ?___lwmod 0008               __size_ofi1_BT_tx_char 001E  
                       __pintcodelo 0018                 ?_M_foward_direction 0001  
              _M_backward_direction 163E                       i1LCD_string@i 0006  
                  ___lwdiv@quotient 0005                   US_send_pulse@dist 0020  
              ??_M_foward_direction 0001                     ___aldiv@divisor 0011  
                 BT_rx_string@RxStr 0001                     ___aldiv@counter 0015  
                    ___wmul@product 0005                            _LATBbits 000F8A  
                          _LATCbits 000F8B                            _LATDbits 000F8C  
                          _LCD_char 0FC6                            _LCD_init 14D4  
                         atoi4D@arr 0007                           atoi4D@num 000A  
                          i1u112_20 0F58                            i1u120_20 0F28  
                          i1u200_20 0C44                            i1u112_21 0F54  
                          i1u200_21 0C40                            i1u120_27 0F1E  
                          i1u113_20 0F7A                            i1u121_20 0F38  
                          i1u201_20 0C6A                            i1u113_21 0F76  
                          i1u121_21 0F34                            i1u201_21 0C66  
                          i1u114_20 0F9E                            i1u122_20 1826  
                          i1u202_20 0C9A                            i1u210_20 00D2  
                          i1u114_21 0F9A                            i1u122_21 1822  
                          i1u202_21 0C96                            i1u210_21 00CE  
                          i1u115_20 10D0                            i1u123_20 08CA  
                          i1u203_20 1588                            i1u211_20 00F0  
                          i1u115_21 10CC                            i1u123_21 08C6  
                          i1u203_21 1584                            i1u211_21 00EC  
                          i1u140_20 1780                            i1u116_20 10F2  
                          i1u124_20 08F4                            i1u204_20 159C  
                          i1u220_20 0404                            i1u212_20 011A  
                          i1u140_21 177C                            i1u116_21 10EE  
                          i1u124_21 08F0                            i1u204_21 1596  
                          i1u220_21 0400                            i1u212_21 0116  
                          i1u141_20 178E                            i1u117_20 1110  
                          i1u125_20 0922                            i1u221_20 0416  
                          i1u213_20 013C                            i1u141_21 178A  
                          i1u117_21 110C                            i1u125_21 091E  
                          i1u221_21 0412                            i1u213_21 0138  
                          i1u205_25 159E                            i1u118_20 0EDE  
                          i1u126_20 1438                            i1u142_20 1240  
                          i1u206_20 15AE                            i1u214_20 0160  
                          i1u126_21 1434                            i1u142_21 123C  
                          i1u206_21 15A8                            i1u214_21 015C  
             __end_of_LCD_string_xy 13C0                            i1u118_27 0ED4  
                          i1u230_27 0A88                            i1u127_20 131C  
                          i1u119_20 0EFA                            i1u143_20 127E  
                          i1u215_20 0182                            i1u119_21 0EF6  
                          i1u143_21 127A                            i1u215_21 017E  
                          i1u207_25 15B0                            i1u127_27 1312  
                          i1u231_27 0B24                            i1u160_20 15EE  
                          i1u128_20 1348                            i1u144_20 0956  
                          i1u216_20 0390                            i1u160_21 15E8  
                          i1u144_21 0952                            i1u216_21 038C  
                          i1u208_21 0062                            i1u128_27 133E  
                          i1u232_27 0B4E                            i1u129_20 1358  
                          i1u145_20 097C                            i1u217_20 039E  
                          i1u129_21 1354                            i1u145_21 0978  
                          i1u217_21 039A                            i1u209_21 0074  
                          i1u161_25 15F0                            i1u233_27 1156  
                          i1u162_20 1650                            i1u170_20 1632  
                          i1u146_20 09BA                            i1u218_20 03AC  
                          i1u162_21 164C                            i1u170_21 162C  
                          i1u146_21 09B6                            i1u218_21 03A8  
                          i1u234_27 119C                            i1u163_20 1664  
                          i1u147_20 09E0                            i1u155_20 0AA0  
                          i1u219_20 03F2                            i1u163_21 165E  
                          i1u147_21 09DC                            i1u155_21 0A9C  
                          i1u219_21 03EE                            i1u171_25 1634  
                          i1u235_27 11CA                            i1u172_20 1694  
                          i1u180_20 0660                            i1u148_20 0A10  
                          i1u156_20 0AB4                            i1u172_21 1690  
                          i1u180_21 065C                            i1u148_21 0A0C  
                          i1u156_21 0AB0                            i1u164_25 1666  
                          i1u236_27 1210                            i1u173_20 16A8  
                          i1u165_20 1676                            i1u157_20 15C8  
                          i1u181_20 06A0                            i1u149_20 0A4E  
                          i1u173_21 16A2                            i1u165_21 1670  
                          i1u157_21 15C4                            i1u181_21 069A  
                          i1u149_21 0A4A                            i1u158_20 15DC  
                          i1u158_21 15D6                            i1u174_25 16AA  
                          i1u166_25 1678                            i1u190_25 073A  
                          i1u182_25 06A2                            i1u175_20 16BA  
                          i1u167_20 160C                            i1u191_20 074A  
                          i1u183_20 06B2                            i1u175_21 16B4  
                          i1u167_21 1608                            i1u191_21 0744  
                          i1u183_21 06AC                            i1u159_25 15DE  
                      i1_BT_tx_char 1812                            i1u168_20 1620  
                          i1u168_21 161A                            i1u176_25 16BC  
                          i1u192_25 074C                            i1u184_25 06B4  
                          i1u193_20 0780                            i1u185_20 06EC  
                          i1u177_20 062C                            i1u193_21 077A  
                          i1u185_21 06E6                            i1u177_21 0628  
                          i1u169_25 1622                            i1u178_20 063C  
                          i1u178_21 0638                            i1u194_25 0782  
                          i1u186_25 06EE                            i1u195_20 0792  
                          i1u187_20 06FE                            i1u179_20 064E  
                          i1u195_21 078C                            i1u187_21 06F8  
                          i1u179_21 064A                            i1u196_25 0794  
                          i1u188_25 0700                            i1u197_20 0D28  
                          i1u189_20 0738                            i1u197_21 0D24  
                          i1u189_21 0732                            i1u198_20 0D5C  
                          i1u198_21 0D58                            i1u199_20 0D6C  
                          i1u199_21 0D68             __size_ofi1_BT_tx_string 0066  
                  __CFG_WDTPS$32768 000000                   _US_print_distance 13C0  
                          i1_M_stop 156E                  ?_US_print_distance 0012  
                 ___wmul@multiplier 0001               ?_M_backward_direction 0001  
               ??_US_print_distance 0014                         ??_L_turn_on 0001  
                  __size_of_BT_init 0028                   ___lmul@multiplier 0001  
                       _LCD_command 1042                            _M_set_DC 061C  
                         itoa4D@arr 000D                           itoa4D@num 000F  
            __size_of_US_send_pulse 00E4                    __size_of_US_init 0036  
                          __Hrparam 0000                            __Lrparam 0000  
             __size_of_BT_rx_string 00B8           __end_of_US_print_distance 1422  
__size_of_M_anticlockwise_direction 0044               __size_of_BT_tx_string 0068  
                  __size_of___aldiv 0134                     i1LCD_string@msg 0004  
                  __size_of___lldiv 00B8                    __size_of___lwdiv 0088  
                  __size_of___lwmod 0078                     BT_tx_string@msg 00A1  
                      BT_tx_char@Tx 00A0                     ___lwdiv@divisor 0003  
                   ___lwdiv@counter 0007                            __ptext10 1042  
                          __ptext11 1290                            __ptext20 121E  
                          __ptext12 17F2                            __ptext21 0944  
                          __ptext13 17CA                            __ptext30 0F3E  
                          __ptext22 13C0                            __ptext31 061C  
                          __ptext23 1422                            __ptext15 156E  
                          __ptext40 0CD6                            __ptext32 15B6  
                          __ptext24 0EB6                            __ptext16 0D8E  
                          __ptext41 176E                            __ptext33 15FA  
                          __ptext25 1136                            __ptext17 17A0  
                          __ptext34 163E                            __ptext26 12F8  
                          __ptext18 0C1E                            __ptext35 1682  
                          __ptext27 1812                            __ptext19 0A78  
                          __ptext36 1844                            __ptext28 07D0  
                          __ptext37 184C                            __ptext29 10BE  
                          __ptext38 1830                            __ptext39 11AA  
                          _distance 0065               __end_ofi1_LCD_command 121E  
                      _BT_rx_string 0CD6                       __size_of_main 00C2  
                      _BT_tx_string 1290                            int$flags 006A  
             _M_clockwise_direction 15FA              ??_M_backward_direction 0001  
                     _US_send_pulse 0A78               US_print_distance@dist 0012  
                    i1BT_tx_char@Tx 0001             i1LCD_string_xy@location 000C  
                        _LCD_string 0E2A                            intlevel1 0000  
                        i1_LCD_char 1136                    ___lwmod@dividend 0008  
                  ___lldiv@dividend 000D                      i1_BT_tx_string 12F8  
        __size_of_US_print_distance 0062                      ?_US_send_pulse 0001  
          __size_ofi1_LCD_string_xy 005C                          _BT_rx_char 176E  
                  ___lldiv@quotient 0015                     ___lwmod@divisor 000A  
                        _BT_tx_char 17F2                     ___lwmod@counter 000C  
                      ___aldiv@sign 0016              __end_ofi1_BT_tx_string 135E  
                   LCD_hcommand@cmd 00A1                      LCD_command@cmd 00A2  
